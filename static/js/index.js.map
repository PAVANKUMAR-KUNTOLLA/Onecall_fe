{"version":3,"sources":["webpack:///./src/views/Refer/referFriend.js","webpack:///./src/views/Refer/referralDiscount.js","webpack:///./src/views/Refer/myReferrer.js","webpack:///./src/views/Refer/myReferrals.js","webpack:///./src/views/Refer/tabsDesktop.js","webpack:///./src/views/Refer/accordinMobile.js","webpack:///./src/views/Refer/index.js","webpack:///./src/utils/index.js","webpack:///./src/components/DatePicker.js","webpack:///./src/components/SSNField.js","webpack:///./src/views/TaxFilling/Forms/DependantDetails.js","webpack:///./src/views/TaxFilling/Forms/FilerDetails.js","webpack:///./src/views/TaxFilling/Forms/OtherIncomeDetails.js","webpack:///./src/views/TaxFilling/Forms/IncomeDetails.js","webpack:///./src/views/TaxFilling/Forms/BankDetails.js","webpack:///./src/views/TaxFilling/Forms/TaxReturns.js","webpack:///./src/views/TaxFilling/Forms/TaxDocs.js","webpack:///./src/views/TaxFilling/TabsDesktop.js","webpack:///./src/views/TaxFilling/AdminTaxFilingpage/index.js","webpack:///./src/views/TaxFilling/ConfirmClientDialogBox/index.js","webpack:///./src/views/TaxFilling/Forms/PickAppointment.js","webpack:///./src/views/Home/payPalPayment.js","webpack:///./src/views/TaxFilling/Forms/ConfirmDetails.js","webpack:///./src/views/TaxFilling/Forms/RefundQuote.js","webpack:///./src/views/TaxFilling/AccordionMobile.js","webpack:///./src/views/TaxFilling/ClientTaxFilingPage/index.js","webpack:///./src/views/TaxFilling/index.js","webpack:///./src/views/Auth/LoginView.js","webpack:///./src/views/Auth/ForgotPassword.js","webpack:///./src/views/Auth/index.js","webpack:///./src/components/CustomInputField.js","webpack:///./src/constants/index.js","webpack:///./src/components/Page.js","webpack:///./src/components/CustomAlert.js"],"names":["initialValues","firstName","lastName","email","contact","validationSchema","Yup","shape","required","ReferFriend","_ref","_useState2","_slicedToArray","useState","setIsReferalDetailsLoading","React","createElement","Box","sx","marginTop","backgroundColor","padding","sm","xs","paddingTop","paddingBottom","bgcolor","transition","borderRadius","boxShadow","overflow","_defineProperty","Container","maxWidth","Typography","variant","Formik","onSubmit","values","_ref2","setSubmitting","resetForm","payload","_objectSpread","privateApiPOST","Api","makeReferal","then","response","status","data","console","log","error","_ref3","handleChange","errors","touched","handleBlur","Form","Grid","container","spacing","marginLeft","marginBottom","item","marginRight","CustomInputTextField","attribute","margin","name","onBlur","onChange","fullWidth","value","Boolean","helperText","justifyContent","alignItems","textAlign","Button","type","color","ReferralDiscount","List","ListItem","size","MyReferrer","setIsReferralDetailsLoading","_useState4","referralEmail","referralID","referralDetails","setReferralDetails","useEffect","sessionStorage","getItem","privateApiGET","profile","disabled","customTextStyles","makeStyles","theme","tableHeader","fontSize","fontWeight","lineHeight","breakpoints","down","display","tableData","headerText","confirmButton","mobileViewTableCellValue","mobileView","cursor","border","up","mobileViewTableCellHeader","MyReferrals","customStyles","joined","not_joined","referalDetails","setReferalDetails","TableContainer","Table","borderCollapse","TableHead","TableRow","TableCell","className","TableBody","length","map","row","id","key","first_name","last_name","phone_no","flexDirection","contact_no","accordion","accordionHeader","opacity","paddingLeft","maxHeight","accordionHeaderText","accordionColumn","accordionColumnHeaderText","accordionColumnText","footerText","collpaseIcon","TabsDesktop","handleFetchData","customTextClasses","setValue","CustomTabPanel","props","children","index","other","_objectWithoutProperties","_excluded","_extends","role","hidden","concat","a11yProps","propTypes","PropTypes","node","number","isRequired","width","borderBottom","borderColor","Tabs","event","newValue","Tab","label","tabHeaderText","BasicAccordion","expanded","setExpanded","panel","isExpanded","Accordion","AccordionSummary","expandIcon","ExpandMoreIcon","AccordionDetails","ReferPage","Page","title","capitalizeString","str","charAt","toUpperCase","slice","toLowerCase","CustomDatePicker","setFieldValue","getYear","date","getFullYear","years","start","end","step","result","i","push","range","Date","months","DatePicker","placeholderText","renderCustomHeader","changeYear","changeMonth","decreaseMonth","increaseMonth","prevMonthButtonDisabled","nextMonthButtonDisabled","style","onClick","target","option","getMonth","_ref4","indexOf","selected","SSN","ssnValue","alignLeft","completeSSN","setCompleteSSN","ssnParts","split","ssn1","ssn2","ssn3","TextField","e","updatedSSN","replaceAll","inputProps","maxLength","buttons","CustomLabel","DependantDetails","open","providedLivingSupport","dependantDetails","handleFetchDependantDetails","handleDeleteDependant","isDependantDetailsLoading","setIsDependantDetailsLoading","transform","input","includes","replace","isNewDependant","additionalFirstName","additionalMiddleInitial","additionalLastName","additionalSsnOrItin","additionalApplyForItin","additionalDateOfBirth","additionalGender","additionalOccupation","additionalVisaType","additionalEmail","additionalStayCount","additionalRelationship","formData","setFormData","handleSaveDependentDetails","max","addDependant","handleSubmit","isSubmitting","autoComplete","is_required","select","MenuItem","wordSpacing","startIcon","RemoveIcon","AddIcon","lg","ssn","ButtonBase","handleDownloadTemplate","textDecoration","disableTouchRipple","visibility","residentialStatus","each","dependantRelationships","parseInt","CircularProgress","whiteSpace","DeleteIcon","ml","flexWrap","FilerDetails","personalDetails","contactDetails","spouseDetails","incomeDetails","isFilerDetailsLoading","setIsFilerDetailsLoading","_useState6","setDependantDetails","formatPhoneNumber","phoneNumber","dateOfBirth","spouseDateOfBirth","_useState8","middleName","gender","occupation","street","apartment","city","state","zipCode","country","primaryCountryCode","primaryPhoneNumber","secondaryCountryCode","secondaryPhoneNumber","contactEmail","taxFiledLastYear","taxPayerStatus","spouseFirstName","spouseMiddleInitial","spouseLastName","spouseSsnOrItin","spouseApplyForItin","spouseGender","spouseOccupation","spouseResidentialStatus","spouseEmail","stateOptions","statesNames","countryCodes","countryCode","minHeight","position","matches","when","is","personalContactDetails","leftSide","attributeTextAlign","rightSide","bottom","left","endIcon","ArrowForwardIosIcon","dependantId","taxFilingId","deleteDependant","OtherIncomeDetails","otherIncomeDetails","handleDelete","isOtherIncomeDetailsLoading","setIsOtherIncomeDetailsLoading","incomeDescription","incomeAmount","addAdditionalInformation","otherwise","IncomeDetails","isIncomeDetailsLoading","setIsIncomeDetailsLoading","setotherIncomeDetails","interestIncome","dividendIncome","soldStocks","soldCrypto","foreignIncome","retirementAccounts","stateTaxRefund","foreignBankAccount","foreignAssets","rentalIncome","income1099","handleFetchOtherIncomeDetails","FormControl","component","FormLabel","RadioGroup","FormControlLabel","control","Radio","Tooltip","placement","otherIncomeId","ArrowBackIosIcon","bankingType","bankName","accountHolderName","ownership","routingNumber","confirmRoutingNumber","oneOf","accountNumber","confirmAccountNumber","accountType","confirmAccountType","BankDetails","isBankDetailsLoading","setIsBankDetailsLoading","bankDetails","align","TaxReturns","params","useParams","isAlert","alertTitle","alertText","severity","showAlert","setShowAlert","useSelector","app","isLoading","setIsLoading","isImport","isImpoFormSubmitting","selectedFile","remarks","isMyTaxDocsLoading","myTaxDocs","setState","handleDownloadFile","file","file_name","downloadTaxDocsFile","responseType","res","url","window","URL","createObjectURL","Blob","anchor","document","href","setAttribute","body","appendChild","click","err","handleDeleteFile","file_id","deleteTaxDocsFile","handleFetchMyTaxDocs","_data","prev","uploadTaxDocs","CustomAlert","onClose","files","accept","htmlFor","CloudUploadIcon","fontStyle","FormData","append","token","axios","post","headers","Authorization","upload_time","GetApp","alertCard","alertIcon","root","link","info","UploadTaxDocs","handleActiveTabChange","Card","CardContent","Link","Paper","elevation","valign","file_size","FilerDeatils","tabButton","AdminTaxFillingPage","setData","isLoadingSpin","setIsLoadingSpin","action","tabsDesktopValue","setTabsDesktopValue","handleFetchTaxFilingDetails","taxFiling","height","zIndex","top","PerfectScrollbar","year","templateDownload","_customizedButton","dialogBox","boldText","normalText","mainText","paper","overflowY","customizedButton","palette","secondary","light","ConfirmedClientConfirmationDialogBox","handleClose","Dialog","scroll","classes","DialogTitle","DialogContent","dividers","IconButton","CloseIcon","DialogActions","time","timezone","PickAppointment","isPickAppointmentDetailsLoading","setIsPickAppointmentDetailsLoading","isConfirmedClientConfirmationDialogBoxOpen","setIsConfirmedClientConfirmationDialogBoxOpen","formik","useFormik","bookAppointment","message","handleFetchAppointmentDetails","_error$response$data","appointmentDetails","setAppointmentDetails","handleCancelAppointment","appointmentId","deleteAppointment","_error$response$data2","timeOptions","hours","minutes","hourStr","String","padStart","minuteStr","timeOption","generateTimeOptions","attributeMarginTop","InputProps","readOnly","start_time","end_time","Chip","onCursor","Avatar","alt","src","PayPalPayment","fontFamily","p","preventDefault","mt","useStyles","ConfirmDetails","handlePickAppointment","InputLabelProps","shrink","placeholder","mb","RefundQuote","ClientTaxFillingPage","isActiveTab","setIsActiveTab","tabName","minWidth","HomePage","_rightSide","submitProgress","mainBlock","avatarLogo","paddingRight","LoginView","navigate","useNavigate","dispatch","useDispatch","Fragment","password","login","config","Cookies","get","_res$data","setItem","setTaxYear","taxYear","is_bold","my","ForgotPasswordView","setIsForgotPassword","forgotPasswordState","setForgetPasswordState","isResetPasswordSubmitting","setIsRestPasswordSubmitting","autoFocus","forgotPassword","_logoAvatar","box","logoAvatar","AppBar","Authentication","backgroundImage","backgroundRepeat","backgroundSize","NO_WRAP_ATTRIBUTES","others","defaultProps","prototype","bool","string","refundTypes","forwardRef","ref","_ref$title","rest","Helmet","alertContainer","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","AlertTitle","func"],"mappings":"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","file":"index.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport Page from \"../../components/Page\";\r\nimport { Grid, Box, Typography, Button, Container } from \"@mui/material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Api from \"../../components/Api\";\r\nimport { privateApiPOST } from \"../../components/PrivateRoute\";\r\nimport CustomInputTextField from \"../../components/CustomInputField\";\r\n\r\nconst initialValues = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  email: \"\",\r\n  contact: \"\",\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  firstName: Yup.string().required(\"First Name is required\"),\r\n  lastName: Yup.string().required(\"Last Name is required\"),\r\n  email: Yup.string()\r\n    .email(\"Invalid email format\")\r\n    .required(\"Email is required\"),\r\n  contact: Yup.string().required(\"Contact number is required\"),\r\n});\r\n\r\nconst ReferFriend = () => {\r\n  const [isReferalDetailsLoading, setIsReferalDetailsLoading] = useState(false);\r\n  return (\r\n    <Box\r\n      sx={{\r\n        marginTop: \"40px\",\r\n        backgroundColor: \"#fff\",\r\n        padding: { sm: \"30px\", xs: \"0\" },\r\n        paddingTop: { xs: \"30px\" },\r\n        paddingBottom: { xs: \"20px\" },\r\n\r\n        bgcolor: \"#ffffff\",\r\n        transition: \"box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\r\n        borderRadius: \"6px\",\r\n        boxShadow: \"0px 2px 8px 0px rgba(99, 99, 99, 0.2)\",\r\n        overflow: \"hidden\",\r\n        marginTop: \"20px\",\r\n        color: \"#333333\",\r\n        backgroundImage: \"none\",\r\n      }}\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Typography variant=\"h4\">Referal Details:</Typography>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(values, { setSubmitting, resetForm }) => {\r\n            setIsReferalDetailsLoading(true);\r\n            setSubmitting(true);\r\n            let payload = { ...values };\r\n            privateApiPOST(Api.makeReferal, payload)\r\n              .then((response) => {\r\n                const { status, data } = response;\r\n                if (status === 200) {\r\n                  console.log(\"data\", data);\r\n                  setIsReferalDetailsLoading(false);\r\n                  resetForm();\r\n                  setSubmitting(false);\r\n                }\r\n              })\r\n              .catch((error) => {\r\n                console.log(\"Error\", error);\r\n                setIsReferalDetailsLoading(false);\r\n                setSubmitting(false);\r\n              });\r\n          }}\r\n        >\r\n          {({ values, handleChange, errors, touched, handleBlur }) => (\r\n            <Form>\r\n              <Grid container spacing={2} sx={{ marginLeft: \"0px\" }}>\r\n                <Grid\r\n                  container\r\n                  sx={{\r\n                    marginBottom: \"30px\",\r\n                    marginTop: \"30px\",\r\n                  }}\r\n                >\r\n                  <Grid item xs={12} sm={5} sx={{ marginRight: \"20px\" }}>\r\n                    <CustomInputTextField\r\n                      attribute=\"First Name\"\r\n                      margin=\"normal\"\r\n                      name=\"firstName\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      fullWidth\r\n                      value={values.firstName}\r\n                      variant=\"outlined\"\r\n                      error={Boolean(touched.firstName && errors.firstName)}\r\n                      helperText={touched.firstName && errors.firstName}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={5} sx={{ marginRight: \"20px\" }}>\r\n                    <CustomInputTextField\r\n                      attribute=\"Last Name\"\r\n                      margin=\"normal\"\r\n                      name=\"lastName\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      fullWidth\r\n                      value={values.lastName}\r\n                      variant=\"outlined\"\r\n                      error={Boolean(touched.lastName && errors.lastName)}\r\n                      helperText={touched.lastName && errors.lastName}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={5} sx={{ marginRight: \"20px\" }}>\r\n                    <CustomInputTextField\r\n                      attribute=\"Email\"\r\n                      margin=\"normal\"\r\n                      name=\"email\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      fullWidth\r\n                      value={values.email}\r\n                      variant=\"outlined\"\r\n                      error={Boolean(touched.email && errors.email)}\r\n                      helperText={touched.email && errors.email}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={5} sx={{ marginRight: \"20px\" }}>\r\n                    <CustomInputTextField\r\n                      attribute=\"Contact\"\r\n                      margin=\"normal\"\r\n                      name=\"contact\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      fullWidth\r\n                      value={values.contact}\r\n                      variant=\"outlined\"\r\n                      error={Boolean(touched.contact && errors.contact)}\r\n                      helperText={touched.contact && errors.contact}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid\r\n                  container\r\n                  justifyContent=\"center\" // Center horizontally\r\n                  alignItems=\"center\" // Center vertically\r\n                >\r\n                  <Box\r\n                    sx={{\r\n                      textAlign: \"center\",\r\n                      paddingBottom: { xs: \"20px\" },\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      sx={{\r\n                        marginRight: { xs: \"0px\", sm: \"130px\" },\r\n                      }}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ReferFriend;\r\n","import { Typography, Box, Container, List, ListItem } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nconst ReferralDiscount = () => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        marginTop: \"40px\",\r\n        backgroundColor: \"#fff\",\r\n        padding: { sm: \"30px\", xs: \"0\" },\r\n        paddingTop: { xs: \"30px\" },\r\n        paddingBottom: { xs: \"20px\" },\r\n\r\n        bgcolor: \"#ffffff\",\r\n        transition: \"box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\r\n        borderRadius: \"6px\",\r\n        boxShadow: \"0px 2px 8px 0px rgba(99, 99, 99, 0.2)\",\r\n        overflow: \"hidden\",\r\n        marginTop: \"20px\",\r\n        color: \"#333333\",\r\n        backgroundImage: \"none\",\r\n      }}\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Box>\r\n          <Typography variant=\"h3\">Referral Discount Details :</Typography>\r\n          <Typography sx={{ marginTop: \"10px\" }}>\r\n            1 - 4 New Clients Referred : $10 for each client who completes their\r\n            tax filing with us\r\n          </Typography>\r\n          <Typography sx={{ marginTop: \"10px\" }}>\r\n            5 - 9 New Clients Referred : $20 for each client who completes their\r\n            tax filing with us\r\n          </Typography>\r\n          <Typography sx={{ marginTop: \"10px\" }}>\r\n            10 or more New Clients Referred : $30 for each client who completes\r\n            their tax filing with us\r\n          </Typography>\r\n          <List>\r\n            <ListItem>\r\n              <Typography variant=\"body1\" sx={{ color: \"#FF0000\" }}>\r\n                <strong>*</strong> All Referral Discounts will be applied only\r\n                if newly referred clients complete their tax filing with us\r\n              </Typography>\r\n            </ListItem>\r\n            <ListItem>\r\n              <Typography variant=\"body1\" sx={{ color: \"#FF0000\" }}>\r\n                <strong>*</strong> Referral discount will be used towards your\r\n                tax filing fee\r\n              </Typography>\r\n            </ListItem>\r\n            <ListItem>\r\n              <Typography variant=\"body1\" sx={{ color: \"#FF0000\" }}>\r\n                <strong>*</strong> If you have more referral discount than your\r\n                tax filing fee, it will be carried forward and used towards your\r\n                future service fee with Onecall Tax Services Inc\r\n              </Typography>\r\n            </ListItem>\r\n            <ListItem>\r\n              <Typography variant=\"body1\" sx={{ color: \"#FF0000\" }}>\r\n                <strong>*</strong> Referral discount cannot be transferred from\r\n                one client to another\r\n              </Typography>\r\n            </ListItem>\r\n            <ListItem>\r\n              <Typography variant=\"body1\" sx={{ color: \"#FF0000\" }}>\r\n                <strong>*</strong> You can earn as much referral discount as\r\n                possible by referring more new clients to us every year\r\n              </Typography>\r\n            </ListItem>\r\n            <ListItem>\r\n              <Typography variant=\"body1\" sx={{ color: \"#FF0000\" }}>\r\n                <strong>*</strong> New Client means who did not file with\r\n                Onecall Tax Services Inc in any of the previous years\r\n              </Typography>\r\n            </ListItem>\r\n            <ListItem>\r\n              <Box variant=\"body1\">\r\n                <font color=\"green\" size=\"2\">\r\n                  Example:\r\n                  <ul>\r\n                    <li>You referred 5 new clients in this year</li>\r\n                    <li>\r\n                      3 of them filed with us and 2 of them did not complete\r\n                      their tax return with us. You get referral discount for 3\r\n                      new clients who completed their filing with us\r\n                    </li>\r\n                    <li>\r\n                      Referral discount would be $10 per client. So you have\r\n                      earned $30 referral discount\r\n                    </li>\r\n                    <li>\r\n                      This discount will be applied on your filing fee when you\r\n                      are filing your tax return. If you filed your tax return\r\n                      already, the discount will be carried forward to your\r\n                      future filing fee (or any other service fee with Onecall\r\n                      Tax Services Inc)\r\n                    </li>\r\n                  </ul>\r\n                </font>\r\n              </Box>\r\n            </ListItem>\r\n            <ListItem>\r\n              <Typography variant=\"body1\" sx={{ color: \"#FF0000\" }}>\r\n                <strong>*</strong> All amounts indicated here are in legal US\r\n                Dollars\r\n              </Typography>\r\n            </ListItem>\r\n          </List>\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ReferralDiscount;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Container, Typography, Box, Grid, TextField } from \"@mui/material\";\r\nimport Api from \"../../components/Api\";\r\nimport { privateApiGET } from \"../../components/PrivateRoute\";\r\nimport CustomInputTextField from \"../../components/CustomInputField\";\r\n\r\nconst MyReferrer = () => {\r\n  const [isReferralDetailsLoading, setIsReferralDetailsLoading] =\r\n    useState(false);\r\n  const [referralDetails, setReferralDetails] = useState({\r\n    referralEmail: \"\",\r\n    referralID: \"\",\r\n  });\r\n\r\n  const handleFetchProfileDetails = () => {\r\n    setIsReferralDetailsLoading(true);\r\n    privateApiGET(Api.profile)\r\n      .then((response) => {\r\n        const { status, data } = response;\r\n        if (status === 200) {\r\n          console.log(\"data\", data);\r\n          setReferralDetails({\r\n            ...referralDetails,\r\n            referralEmail: data?.data[\"referred_by\"],\r\n            referralID: data?.data[\"referral_id\"],\r\n          });\r\n          setIsReferralDetailsLoading(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n        setIsReferralDetailsLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (sessionStorage.getItem(\"token\")) {\r\n      handleFetchProfileDetails();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        marginTop: \"40px\",\r\n        backgroundColor: \"#fff\",\r\n        padding: { sm: \"30px\", xs: \"0\" },\r\n        paddingTop: { xs: \"30px\" },\r\n        paddingBottom: { xs: \"20px\" },\r\n\r\n        bgcolor: \"#ffffff\",\r\n        transition: \"box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\r\n        borderRadius: \"6px\",\r\n        boxShadow: \"0px 2px 8px 0px rgba(99, 99, 99, 0.2)\",\r\n        overflow: \"hidden\",\r\n        marginTop: \"20px\",\r\n        color: \"#333333\",\r\n        backgroundImage: \"none\",\r\n      }}\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Typography variant=\"h4\">Referal Details:</Typography>\r\n\r\n        <Grid container>\r\n          <Grid item sm={5} xs={12} sx={{ marginRight: \"20px\" }}>\r\n            <CustomInputTextField\r\n              fullWidth\r\n              attribute=\"Referral ID\"\r\n              margin=\"normal\"\r\n              name=\"referralID\" // Updated name\r\n              disabled\r\n              value={referralDetails.referralID} // Updated value\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          <Grid item sm={5} xs={12} sx={{ marginRight: \"20px\" }}>\r\n            <CustomInputTextField\r\n              fullWidth\r\n              attribute=\"Referral Email\"\r\n              margin=\"normal\"\r\n              name=\"referralEmail\" // Updated name\r\n              value={referralDetails.referralEmail} // Updated value\r\n              variant=\"outlined\"\r\n              disabled\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MyReferrer;\r\n","import React, { useState, useEffect, Component } from \"react\";\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Link,\r\n  Avatar,\r\n  Typography,\r\n  Button,\r\n  Container,\r\n  Card,\r\n  CardContent,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableHead,\r\n  TableCell,\r\n  TextField,\r\n  Radio,\r\n  RadioGroup,\r\n  FormLabel,\r\n  FormControlLabel,\r\n  FormControl,\r\n} from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport Api from \"../../components/Api\";\r\nimport { privateApiGET } from \"../../components/PrivateRoute\";\r\n\r\nexport const customTextStyles = makeStyles((theme) => ({\r\n  tableHeader: {\r\n    fontSize: \"16px\",\r\n    fontWeight: \"700\",\r\n    lineHeight: \"22px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  tableData: {\r\n    fontSize: \"16px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"23px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  headerText: {\r\n    fontSize: \"24px\",\r\n    fontWeight: \"600\",\r\n    marginTop: \"32px\",\r\n    marginBottom: \"16px\",\r\n    color: \"#2069DB\",\r\n  },\r\n  confirmButton: {\r\n    fontSize: \"14px\",\r\n    fontWeight: \"600\",\r\n    lineHeight: \"19px\",\r\n    color: \"#FFFFFF\",\r\n    padding: \"10px 40px 9px\",\r\n    marginBottom: \"4px\",\r\n  },\r\n  mobileViewTableCellValue: {\r\n    color: \"rgb(71, 71, 71)\",\r\n    fontSize: \"14px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"19px\",\r\n  },\r\n  mobileView: {\r\n    borderRadius: \"4px\",\r\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\r\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\r\n    cursor: \"pointer\",\r\n    border: \"none !important\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  mobileViewTableCellHeader: {\r\n    color: \"rgb(245, 166, 35)\",\r\n    fontSize: \"10px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"14px\",\r\n  },\r\n}));\r\n\r\nconst MyReferrals = () => {\r\n  const customStyles = customTextStyles();\r\n  const [isReferalDetailsLoading, setIsReferalDetailsLoading] = useState(false);\r\n  const [referalDetails, setReferalDetails] = useState({\r\n    joined: [],\r\n    not_joined: [],\r\n  });\r\n\r\n  const handleFetchReferalDetails = () => {\r\n    privateApiGET(Api.referalDetails)\r\n      .then((response) => {\r\n        const { status, data } = response;\r\n        if (status === 200) {\r\n          console.log(\"data\", data);\r\n          setReferalDetails({\r\n            joined: data?.data[\"joined\"],\r\n            not_joined: data?.data[\"not_joined\"],\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (sessionStorage.getItem(\"token\")) {\r\n      handleFetchReferalDetails();\r\n    }\r\n  }, []);\r\n  console.log(referalDetails);\r\n  return (\r\n    <Box\r\n      sx={{\r\n        marginTop: \"40px\",\r\n        backgroundColor: \"#fff\",\r\n        padding: { sm: \"30px\", xs: \"0\" },\r\n        paddingTop: { xs: \"30px\" },\r\n        paddingBottom: { xs: \"20px\" },\r\n\r\n        bgcolor: \"#ffffff\",\r\n        transition: \"box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\r\n        borderRadius: \"6px\",\r\n        boxShadow: \"0px 2px 8px 0px rgba(99, 99, 99, 0.2)\",\r\n        overflow: \"hidden\",\r\n        marginTop: \"20px\",\r\n        color: \"#333333\",\r\n        backgroundImage: \"none\",\r\n      }}\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Box>\r\n          <Typography variant=\"h4\" sx={{ marginLeft: \"10px\" }}>\r\n            Registerd Till Now:\r\n          </Typography>\r\n          <TableContainer sx={{ marginTop: \"32px\" }}>\r\n            <Table\r\n              sx={{\r\n                borderCollapse: \"collapse\",\r\n              }}\r\n              aria-label=\"Place Order Series Table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    First Name\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    Last Name\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    Email Id\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    Phone Number\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {referalDetails[\"joined\"].length > 0 &&\r\n                  referalDetails[\"joined\"].map((row, id) => (\r\n                    <TableRow key={id}>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        {row.first_name}\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        {row.last_name}\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        {row.email}\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        {row.phone_no}\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.mobileView}>\r\n                        <Box>\r\n                          <Box\r\n                            sx={{\r\n                              display: \"flex\",\r\n                              flexDirection: \"column\",\r\n                              marginTop: \"16px\",\r\n                            }}\r\n                          >\r\n                            <Box sx={{ marginTop: \"3px\" }}>\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellHeader\r\n                                }\r\n                              >\r\n                                First Name\r\n                              </Typography>\r\n\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellValue\r\n                                }\r\n                              >\r\n                                {row.first_name}\r\n                              </Typography>\r\n                            </Box>\r\n                            <Box sx={{ marginTop: \"3px\" }}>\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellHeader\r\n                                }\r\n                              >\r\n                                Last Name\r\n                              </Typography>\r\n\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellValue\r\n                                }\r\n                              >\r\n                                {row.last_name}\r\n                              </Typography>\r\n                            </Box>\r\n                          </Box>\r\n                          <Box\r\n                            sx={{\r\n                              display: \"flex\",\r\n                              flexDirection: \"column\",\r\n                              marginTop: \"16px\",\r\n                            }}\r\n                          >\r\n                            <Box sx={{ marginTop: \"3px\" }}>\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellHeader\r\n                                }\r\n                              >\r\n                                Email Id\r\n                              </Typography>\r\n\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellValue\r\n                                }\r\n                              >\r\n                                {row.email}\r\n                              </Typography>\r\n                            </Box>\r\n                            <Box sx={{ marginTop: \"3px\" }}>\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellHeader\r\n                                }\r\n                              >\r\n                                Phone Number\r\n                              </Typography>\r\n\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellValue\r\n                                }\r\n                              >\r\n                                {row.phone_no}\r\n                              </Typography>\r\n                            </Box>\r\n                          </Box>\r\n                        </Box>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Box>\r\n        <Box sx={{ marginTop: { xs: \"16px\", sm: \"24px\" } }}>\r\n          <Typography variant=\"h4\" sx={{ marginLeft: \"10px\" }}>\r\n            Referred Till Now:\r\n          </Typography>\r\n          <TableContainer sx={{ marginTop: \"32px\" }}>\r\n            <Table\r\n              sx={{\r\n                borderCollapse: \"collapse\",\r\n              }}\r\n              aria-label=\"Place Order Series Table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    First Name\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    Last Name\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    Email Id\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    Phone Number\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {referalDetails[\"not_joined\"].length > 0 &&\r\n                  referalDetails[\"not_joined\"].map((row, id) => (\r\n                    <TableRow key={id}>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        {row.first_name}\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        {row.last_name}\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        {row.email}\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        {row.contact_no}\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.mobileView}>\r\n                        <Box>\r\n                          <Box\r\n                            sx={{\r\n                              display: \"flex\",\r\n                              flexDirection: \"row\",\r\n                              marginTop: \"16px\",\r\n                            }}\r\n                          >\r\n                            <Box sx={{ marginTop: \"3px\", marginRight: \"10px\" }}>\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellHeader\r\n                                }\r\n                              >\r\n                                First Name\r\n                              </Typography>\r\n\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellValue\r\n                                }\r\n                              >\r\n                                {row.first_name}\r\n                              </Typography>\r\n                            </Box>\r\n                            <Box sx={{ marginTop: \"3px\", marginRight: \"10px\" }}>\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellHeader\r\n                                }\r\n                              >\r\n                                Last Name\r\n                              </Typography>\r\n\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellValue\r\n                                }\r\n                              >\r\n                                {row.last_name}\r\n                              </Typography>\r\n                            </Box>\r\n                          </Box>\r\n                          <Box\r\n                            sx={{\r\n                              display: \"flex\",\r\n                              flexDirection: \"column\",\r\n                              marginTop: \"16px\",\r\n                            }}\r\n                          >\r\n                            <Box sx={{ marginTop: \"3px\" }}>\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellHeader\r\n                                }\r\n                              >\r\n                                Email Id\r\n                              </Typography>\r\n\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellValue\r\n                                }\r\n                              >\r\n                                {row.email}\r\n                              </Typography>\r\n                            </Box>\r\n                            <Box sx={{ marginTop: \"3px\" }}>\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellHeader\r\n                                }\r\n                              >\r\n                                Phone Number\r\n                              </Typography>\r\n\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellValue\r\n                                }\r\n                              >\r\n                                {row.contact_no}\r\n                              </Typography>\r\n                            </Box>\r\n                          </Box>\r\n                        </Box>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MyReferrals;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport config from \"../../config\";\r\n// Material UI\r\nimport { Grid, Box, Avatar, Typography, Tabs, Tab } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport PercentIcon from \"@mui/icons-material/Percent\";\r\nimport Groups from \"@mui/icons-material/Groups\";\r\nimport ListAlt from \"@mui/icons-material/ListAlt\";\r\nimport AspectRatioOutlined from \"@mui/icons-material/AspectRatioOutlined\";\r\nimport UnfoldLess from \"@mui/icons-material/UnfoldLess\";\r\nimport UnfoldMore from \"@mui/icons-material/UnfoldMore\";\r\nimport DiscountOutlined from \"@mui/icons-material/DiscountOutlined\";\r\nimport MonetizationOnOutlined from \"@mui/icons-material/MonetizationOnOutlined\";\r\nimport InsertPageBreakOutlined from \"@mui/icons-material/InsertPageBreakOutlined\";\r\nimport DescriptionOutlined from \"@mui/icons-material/DescriptionOutlined\";\r\nimport StackedBarChartOutlined from \"@mui/icons-material/StackedBarChartOutlined\";\r\nimport PriceCheckOutlined from \"@mui/icons-material/PriceCheckOutlined\";\r\nimport SavingsOutlinedIcon from \"@mui/icons-material/SavingsOutlined\";\r\nimport AccountBalanceWalletOutlinedIcon from \"@mui/icons-material/AccountBalanceWalletOutlined\";\r\nimport ReferFriend from \"./referFriend\";\r\nimport ReferralDiscount from \"./referralDiscount\";\r\nimport MyReferrer from \"./myReferrer\";\r\nimport MyReferrals from \"./myReferrals\";\r\n\r\nconst customTextStyles = makeStyles((theme) => ({\r\n  accordion: {\r\n    marginBottom: \"8px\",\r\n    borderRadius: \"10px\",\r\n    \"&.MuiPaper-elevation\": {\r\n      boxShadow: \"none !important\",\r\n    },\r\n    \"&:before\": {\r\n      backgroundColor: \"transparent !important\",\r\n    },\r\n  },\r\n  accordionHeader: {\r\n    opacity: 1,\r\n    paddingLeft: \"12px\",\r\n    paddingTop: \"8px\",\r\n    paddingBottom: \"8px\",\r\n    maxHeight: \"60px\",\r\n  },\r\n  accordionHeaderText: {\r\n    fontSize: \"16px\",\r\n    lineHeight: \"24px\",\r\n    color: \"#474747\",\r\n  },\r\n  accordionColumn: {\r\n    marginTop: \"24px\",\r\n  },\r\n  accordionColumnHeaderText: {\r\n    fontSize: \"16px\",\r\n    lineHeight: \"24px\",\r\n    fontWeight: \"600\",\r\n    marginTop: \"10px\",\r\n    marginBottom: \"4px\",\r\n  },\r\n  accordionColumnText: {\r\n    fontSize: \"13px\",\r\n    lineHeight: \"19px\",\r\n    fontWeight: \"400\",\r\n  },\r\n  footerText: {\r\n    opacity: 0.8,\r\n    fontSize: \"11px\",\r\n    fontWeight: 400,\r\n    lineHeight: \"19px\",\r\n    marginTop: \"26px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  collpaseIcon: {\r\n    // height: \"9px\",\r\n    // width: \"9px\",\r\n    opacity: 1,\r\n    color: \"#474747\",\r\n  },\r\n}));\r\n\r\nconst TabsDesktop = ({ data, handleFetchData }) => {\r\n  const customTextClasses = customTextStyles();\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  function CustomTabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && <Box>{children}</Box>}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  CustomTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n  };\r\n  function a11yProps(index) {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      \"aria-controls\": `simple-tabpanel-${index}`,\r\n    };\r\n  }\r\n\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Box\r\n        sx={{\r\n          width: \"100%\",\r\n          marginBottom: \"64px\",\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            borderBottom: 1,\r\n            borderColor: \"divider\",\r\n            margin: \"8px 32px 32px 10px\",\r\n          }}\r\n        >\r\n          <Tabs\r\n            value={value}\r\n            onChange={handleChange}\r\n            aria-label=\"basic tabs example\"\r\n          >\r\n            <Tab\r\n              label=\"Referral Discount\"\r\n              className={customTextClasses.tabHeaderText}\r\n              {...a11yProps(0)}\r\n            />\r\n            <Tab\r\n              label=\"My Referrals\"\r\n              className={customTextClasses.tabHeaderText}\r\n              {...a11yProps(1)}\r\n            />\r\n            <Tab\r\n              label=\"Refer a Friend\"\r\n              className={customTextClasses.tabHeaderText}\r\n              {...a11yProps(2)}\r\n            />\r\n            <Tab\r\n              label=\"My Referrer\"\r\n              className={customTextClasses.tabHeaderText}\r\n              {...a11yProps(2)}\r\n            />\r\n          </Tabs>\r\n        </Box>\r\n\r\n        <CustomTabPanel value={value} index={0}>\r\n          <ReferralDiscount />\r\n        </CustomTabPanel>\r\n        <CustomTabPanel value={value} index={1}>\r\n          <MyReferrals />\r\n        </CustomTabPanel>\r\n        <CustomTabPanel value={value} index={2}>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <Box>\r\n                <ReferFriend />\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </CustomTabPanel>\r\n        <CustomTabPanel value={value} index={3}>\r\n          <MyReferrer />\r\n        </CustomTabPanel>\r\n      </Box>\r\n    </Grid>\r\n  );\r\n};\r\nexport default TabsDesktop;\r\n","import React, { useState } from \"react\";\r\nimport Accordion from \"@mui/material/Accordion\";\r\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport RemoveIcon from \"@mui/icons-material/Remove\";\r\nimport PercentIcon from \"@mui/icons-material/Percent\";\r\nimport Groups from \"@mui/icons-material/Groups\";\r\nimport ListAlt from \"@mui/icons-material/ListAlt\";\r\nimport AspectRatioOutlined from \"@mui/icons-material/AspectRatioOutlined\";\r\nimport UnfoldLess from \"@mui/icons-material/UnfoldLess\";\r\nimport UnfoldMore from \"@mui/icons-material/UnfoldMore\";\r\nimport DiscountOutlined from \"@mui/icons-material/DiscountOutlined\";\r\nimport MonetizationOnOutlined from \"@mui/icons-material/MonetizationOnOutlined\";\r\nimport InsertPageBreakOutlined from \"@mui/icons-material/InsertPageBreakOutlined\";\r\nimport DescriptionOutlined from \"@mui/icons-material/DescriptionOutlined\";\r\nimport StackedBarChartOutlined from \"@mui/icons-material/StackedBarChartOutlined\";\r\nimport PriceCheckOutlined from \"@mui/icons-material/PriceCheckOutlined\";\r\nimport { Grid, Box, Avatar, Typography } from \"@mui/material\";\r\nimport SavingsOutlinedIcon from \"@mui/icons-material/SavingsOutlined\";\r\nimport AccountBalanceWalletOutlinedIcon from \"@mui/icons-material/AccountBalanceWalletOutlined\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport config from \"../../config\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport ReferFriend from \"./referFriend\";\r\nimport ReferralDiscount from \"./referralDiscount\";\r\nimport MyReferrer from \"./myReferrer\";\r\nimport MyReferrals from \"./myReferrals\";\r\n\r\nconst customTextStyles = makeStyles((theme) => ({\r\n  accordion: {\r\n    marginBottom: \"8px\",\r\n    borderRadius: \"10px\",\r\n    \"&.MuiPaper-elevation\": {\r\n      boxShadow: \"none !important\",\r\n    },\r\n    \"&:before\": {\r\n      backgroundColor: \"transparent !important\",\r\n    },\r\n  },\r\n  accordionHeader: {\r\n    opacity: 1,\r\n    paddingLeft: \"12px\",\r\n    paddingTop: \"8px\",\r\n    paddingBottom: \"8px\",\r\n    maxHeight: \"60px\",\r\n  },\r\n  accordionHeaderText: {\r\n    fontSize: \"16px\",\r\n    lineHeight: \"24px\",\r\n    color: \"#474747\",\r\n  },\r\n  accordionColumn: {\r\n    marginTop: \"24px\",\r\n  },\r\n  accordionColumnHeaderText: {\r\n    fontSize: \"16px\",\r\n    lineHeight: \"24px\",\r\n    fontWeight: \"600\",\r\n    marginTop: \"10px\",\r\n    marginBottom: \"4px\",\r\n  },\r\n  accordionColumnText: {\r\n    fontSize: \"13px\",\r\n    lineHeight: \"19px\",\r\n    fontWeight: \"400\",\r\n  },\r\n  footerText: {\r\n    opacity: 0.8,\r\n    fontSize: \"11px\",\r\n    fontWeight: 400,\r\n    lineHeight: \"19px\",\r\n    marginTop: \"26px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  collpaseIcon: {\r\n    // height: \"9px\",\r\n    // width: \"9px\",\r\n    opacity: 1,\r\n    color: \"#474747\",\r\n  },\r\n}));\r\n\r\nconst BasicAccordion = ({ data, handleFetchData }) => {\r\n  const customTextClasses = customTextStyles();\r\n  const [expanded, setExpanded] = useState(false);\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Accordion\r\n        expanded={expanded === \"panel1\"}\r\n        onChange={handleChange(\"panel1\")}\r\n        className={customTextClasses.accordion}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n          className={customTextClasses.accordionHeader}\r\n        >\r\n          <Typography\r\n            className={customTextClasses.accordionHeaderText}\r\n            sx={{ fontWeight: expanded === \"panel1\" ? \"600\" : \"400\" }}\r\n          >\r\n            Referral Discount\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails\r\n          sx={{\r\n            bgcolor: \"#FAFAFA\",\r\n          }}\r\n        >\r\n          <ReferralDiscount />\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion\r\n        expanded={expanded === \"panel2\"}\r\n        onChange={handleChange(\"panel2\")}\r\n        className={customTextClasses.accordion}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel2a-content\"\r\n          id=\"panel2a-header\"\r\n          className={customTextClasses.accordionHeader}\r\n        >\r\n          <Typography\r\n            className={customTextClasses.accordionHeaderText}\r\n            sx={{ fontWeight: expanded === \"panel2\" ? \"600\" : \"400\" }}\r\n          >\r\n            My Referrals\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\r\n          <MyReferrals />\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion\r\n        expanded={expanded === \"panel3\"}\r\n        onChange={handleChange(\"panel3\")}\r\n        className={customTextClasses.accordion}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel3a-content\"\r\n          id=\"panel3a-header\"\r\n          className={customTextClasses.accordionHeader}\r\n        >\r\n          <Typography\r\n            className={customTextClasses.accordionHeaderText}\r\n            sx={{ fontWeight: expanded === \"panel3\" ? \"600\" : \"400\" }}\r\n          >\r\n            Refer a Friend\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\r\n          <ReferFriend />\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion\r\n        expanded={expanded === \"panel4\"}\r\n        onChange={handleChange(\"panel4\")}\r\n        className={customTextClasses.accordion}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel4a-content\"\r\n          id=\"panel4a-header\"\r\n          className={customTextClasses.accordionHeader}\r\n        >\r\n          <Typography\r\n            className={customTextClasses.accordionHeaderText}\r\n            sx={{ fontWeight: expanded === \"panel3\" ? \"600\" : \"400\" }}\r\n          >\r\n            My Referral\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\r\n          <MyReferrer />\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BasicAccordion;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Page from \"../../components/Page\";\r\nimport { Grid, Container, Box, CircularProgress } from \"@mui/material\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport TabsDesktop from \"./tabsDesktop\";\r\nimport BasicAccordion from \"./accordinMobile\";\r\n\r\nimport Api from \"../../components/Api\";\r\nimport { privateApiGET, privateApiPOST } from \"../../components/PrivateRoute\";\r\nimport DrawerAppBar from \"../../Layout/MainLayout/appBarMaterialUI\";\r\n\r\nconst ReferPage = () => {\r\n  return (\r\n    <Page title={\"Refer\"}>\r\n      <Container maxWidth=\"lg\">\r\n        <Box sx={{ display: { xs: \"none\", sm: \"block\" } }}>\r\n          <TabsDesktop />\r\n        </Box>\r\n        <Box sx={{ display: { xs: \"block\", sm: \"none\" } }}>\r\n          <BasicAccordion />\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default ReferPage;\r\n","// Convert number to thousand separated string\r\n// eg: 100000 -> 100,000\r\nexport function thousands_separators(num) {\r\n  if (num) {\r\n    var num_parts = num.toString().split(\".\");\r\n    num_parts[0] = num_parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    return num_parts.join(\".\");\r\n  }\r\n  return num;\r\n}\r\n\r\nexport function formattedPrice(price) {\r\n  return price.toLocaleString(\"en-IN\", {\r\n    style: \"currency\",\r\n    currency: \"INR\",\r\n  });\r\n}\r\n\r\nexport const capitalizeString = (str) => {\r\n  if (str) return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\r\n  else return \"\";\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { Box } from \"@mui/material\";\r\nimport { Typography, TextField } from \"@mui/material\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst CustomDatePicker = ({\r\n  error,\r\n  helperText,\r\n  name,\r\n  label,\r\n  value,\r\n  setFieldValue,\r\n}) => {\r\n  const range = (start, end, step) => {\r\n    const result = [];\r\n    for (let i = start; i < end; i += step) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const getYear = (date) => {\r\n    return date.getFullYear();\r\n  };\r\n\r\n  const years = range(1900, getYear(new Date()) + 1, 1);\r\n  const months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n\r\n  return (\r\n    <Grid\r\n      item\r\n      xs={12}\r\n      sx={{\r\n        maxHeight: \"60px\",\r\n        marginTop: \"12px\",\r\n      }}\r\n    >\r\n      <Grid container sx={{ alignItems: \"center\" }}>\r\n        <Grid item xs={4} sx={{}}>\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              marginRight: { xs: 0, sm: \"5px\" },\r\n              justifyContent: \"flex-start\",\r\n            }}\r\n          >\r\n            <Typography variant=\"body1\">{label}</Typography>\r\n            <Typography\r\n              sx={{\r\n                color: \"red\",\r\n                fontSize: \"0.875rem\",\r\n                marginLeft: \"3px\",\r\n              }}\r\n            >\r\n              *\r\n            </Typography>\r\n            &nbsp;:\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <DatePicker\r\n            placeholderText={\"MM/DD/YYYY\"}\r\n            renderCustomHeader={({\r\n              date,\r\n              changeYear,\r\n              changeMonth,\r\n              decreaseMonth,\r\n              increaseMonth,\r\n              prevMonthButtonDisabled,\r\n              nextMonthButtonDisabled,\r\n            }) => (\r\n              <div\r\n                style={{\r\n                  margin: 10,\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <button\r\n                  onClick={decreaseMonth}\r\n                  disabled={prevMonthButtonDisabled}\r\n                >\r\n                  {\"<\"}\r\n                </button>\r\n                <select\r\n                  value={getYear(date)}\r\n                  onChange={({ target: { value } }) => changeYear(value)}\r\n                >\r\n                  {years.map((option) => (\r\n                    <option key={option} value={option}>\r\n                      {option}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n\r\n                <select\r\n                  value={months[date.getMonth]}\r\n                  onChange={({ target: { value } }) =>\r\n                    changeMonth(months.indexOf(value))\r\n                  }\r\n                >\r\n                  {months.map((option) => (\r\n                    <option key={option} value={option}>\r\n                      {option}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n\r\n                <button\r\n                  onClick={increaseMonth}\r\n                  disabled={nextMonthButtonDisabled}\r\n                >\r\n                  {\">\"}\r\n                </button>\r\n              </div>\r\n            )}\r\n            selected={value}\r\n            onChange={(date) => setFieldValue(name, date)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CustomDatePicker;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { Box } from \"@mui/material\";\r\nimport { Typography, TextField } from \"@mui/material\";\r\n\r\nconst SSN = ({\r\n  error,\r\n  helperText,\r\n  name,\r\n  value: ssnValue,\r\n  setFieldValue,\r\n  alignLeft,\r\n}) => {\r\n  const [completeSSN, setCompleteSSN] = useState(ssnValue);\r\n\r\n  // useEffect(() => {\r\n  //   setCompleteSSN(ssnValue || \"\");\r\n  // }, [ssnValue]);\r\n\r\n  const handleSSN1Change = (e) => {\r\n    const value = e.target.value;\r\n    if (value.charAt(0) === \"9\") {\r\n      setCompleteSSN(\"\");\r\n    } else if (value.length <= 3) {\r\n      const updatedSSN = `${value}-${ssn2}-${ssn3}`;\r\n      setCompleteSSN(updatedSSN);\r\n      setFieldValue(name, updatedSSN.replaceAll(\"-\", \"\"));\r\n    }\r\n  };\r\n\r\n  const handleSSN2Change = (e) => {\r\n    const value = e.target.value;\r\n    if (value.length <= 2) {\r\n      const updatedSSN = `${ssn1}-${value}-${ssn3}`;\r\n      setCompleteSSN(updatedSSN);\r\n      setFieldValue(name, updatedSSN.replaceAll(\"-\", \"\"));\r\n    }\r\n  };\r\n\r\n  const handleSSN3Change = (e) => {\r\n    const value = e.target.value;\r\n    if (value.length <= 4) {\r\n      const updatedSSN = `${ssn1}-${ssn2}-${value}`;\r\n      setCompleteSSN(updatedSSN);\r\n      setFieldValue(name, updatedSSN.replaceAll(\"-\", \"\"));\r\n    }\r\n  };\r\n\r\n  const ssnParts = completeSSN.split(\"-\");\r\n  const ssn1 = ssnParts[0] || \"\";\r\n  const ssn2 = ssnParts[1] || \"\";\r\n  const ssn3 = ssnParts[2] || \"\";\r\n\r\n  return (\r\n    <Grid\r\n      item\r\n      xs={12}\r\n      sx={{\r\n        maxHeight: \"60px\",\r\n        marginTop: \"12px\",\r\n      }}\r\n    >\r\n      <Grid container>\r\n        <Grid item xs={4} sx={{ marginTop: \"12px\" }}>\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              marginRight: { xs: 0, sm: \"5px\" },\r\n              justifyContent: {\r\n                xs: \"flex-start\",\r\n\r\n                sm: alignLeft ? \"flex-start\" : \"flex-end\",\r\n              },\r\n            }}\r\n          >\r\n            <Typography variant=\"body1\">SSN</Typography>\r\n            <Typography\r\n              sx={{\r\n                color: \"red\",\r\n                fontSize: \"0.875rem\",\r\n                marginLeft: \"3px\",\r\n              }}\r\n            >\r\n              *\r\n            </Typography>\r\n            &nbsp;:\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <Grid container spacing={1} sx={{ alignItems: \"center\" }}>\r\n            <Grid item xs={3}>\r\n              <TextField\r\n                type=\"text\"\r\n                id=\"ssn1\"\r\n                name=\"ssn1\"\r\n                size=\"3\"\r\n                variant=\"outlined\"\r\n                value={ssn1}\r\n                onChange={handleSSN1Change}\r\n                error={error}\r\n                helperText={helperText}\r\n                inputProps={{ maxLength: 3 }}\r\n                sx={{\r\n                  \"& .MuiOutlinedInput-root\": {\r\n                    \"& fieldset\": {\r\n                      borderRadius: \"2px\",\r\n                    },\r\n                  },\r\n                  \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n                    border: \"0.1px solid #bdbdbd\",\r\n                  },\r\n                  \"& .MuiOutlinedInput-input\": {\r\n                    padding: \"10px\",\r\n                    backgroundColor: \"rgba(255,255,255,1)\",\r\n                  },\r\n                  width: \"100%\",\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={0.5}>\r\n              -\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <TextField\r\n                type=\"text\"\r\n                id=\"ssn2\"\r\n                name=\"ssn2\"\r\n                size=\"2\"\r\n                variant=\"outlined\"\r\n                value={ssn2}\r\n                onChange={handleSSN2Change}\r\n                inputProps={{ maxLength: 2 }}\r\n                error={error}\r\n                helperText={helperText}\r\n                sx={{\r\n                  \"& .MuiOutlinedInput-root\": {\r\n                    \"& fieldset\": {\r\n                      borderRadius: \"2px\",\r\n                    },\r\n                  },\r\n                  \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n                    border: \"0.1px solid #bdbdbd\",\r\n                  },\r\n                  \"& .MuiOutlinedInput-input\": {\r\n                    padding: \"10px\",\r\n                    backgroundColor: \"rgba(255,255,255,1)\",\r\n                  },\r\n                  width: \"100%\",\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={0.5}>\r\n              -\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <TextField\r\n                type=\"text\"\r\n                id=\"ssn3\"\r\n                name=\"ssn3\"\r\n                size=\"4\"\r\n                variant=\"outlined\"\r\n                value={ssn3}\r\n                onChange={handleSSN3Change}\r\n                inputProps={{ maxLength: 4 }}\r\n                error={error}\r\n                helperText={helperText}\r\n                sx={{\r\n                  \"& .MuiOutlinedInput-root\": {\r\n                    \"& fieldset\": {\r\n                      borderRadius: \"2px\",\r\n                    },\r\n                  },\r\n                  \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n                    border: \"0.1px solid #bdbdbd\",\r\n                  },\r\n                  \"& .MuiOutlinedInput-input\": {\r\n                    padding: \"10px\",\r\n                    backgroundColor: \"rgba(255,255,255,1)\",\r\n                  },\r\n                  width: \"100%\",\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SSN;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  MenuItem,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  CircularProgress,\r\n  ButtonBase,\r\n} from \"@mui/material\";\r\nimport CustomDatePicker from \"../../../components/DatePicker\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport RemoveIcon from \"@mui/icons-material/Remove\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { residentialStatus, dependantRelationships } from \"../../../constants\";\r\nimport Api from \"../../../components/Api\";\r\nimport { privateApiPOST } from \"../../../components/PrivateRoute\";\r\nimport CustomInputTextField from \"../../../components/CustomInputField\";\r\nimport SSN from \"../../../components/SSNField\";\r\n\r\nconst customTextStyles = makeStyles((theme) => ({\r\n  tableHeader: {\r\n    fontSize: \"16px\",\r\n    fontWeight: 600,\r\n    lineHeight: \"22px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      // marginBottom: \"8px\",\r\n      display: \"none\",\r\n    },\r\n  },\r\n  tableData: {\r\n    fontSize: \"16px\",\r\n    fontWeight: 400,\r\n    lineHeight: \"23px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  mobileViewTableCellValue: {\r\n    color: \"rgb(71, 71, 71)\",\r\n    fontSize: \"14px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"19px\",\r\n  },\r\n  mobileView: {\r\n    borderRadius: \"4px\",\r\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\r\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\r\n    cursor: \"pointer\",\r\n    border: \"none !important\",\r\n    marginBottom: \"20px\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  mobileViewTableCellHeader: {\r\n    color: \"rgb(245, 166, 35)\",\r\n    fontSize: \"10px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"14px\",\r\n  },\r\n  buttons: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport function CustomLabel({ label, required }) {\r\n  return (\r\n    <label style={{ display: \"flex\", alignItems: \"center\" }}>\r\n      {label}\r\n      {required && (\r\n        <span\r\n          style={{\r\n            color: \"red\",\r\n            fontSize: \"16px\",\r\n            marginLeft: \"3px\",\r\n          }}\r\n        >\r\n          *\r\n        </span>\r\n      )}\r\n    </label>\r\n  );\r\n}\r\n\r\nconst DependantDetails = ({\r\n  open,\r\n  id,\r\n  providedLivingSupport,\r\n  dependantDetails,\r\n  handleFetchDependantDetails,\r\n  handleDeleteDependant,\r\n}) => {\r\n  const customStyles = customTextStyles();\r\n  const [isDependantDetailsLoading, setIsDependantDetailsLoading] =\r\n    useState(false);\r\n\r\n  const transform = (input) => {\r\n    if (input === undefined || input === null) {\r\n      return \"\";\r\n    }\r\n\r\n    if (input.includes(\"-\")) {\r\n      return input;\r\n    }\r\n\r\n    const rawSsn = input.replace(/-/g, \"\"); // Remove hyphens\r\n    const formattedSsn = rawSsn\r\n      .replace(/\\D/g, \"\") // Remove non-digits\r\n      .replace(/(\\d{3})(\\d{2})(\\d{4})/, \"$1-$2-$3\"); // Format as 123-45-6789\r\n    return formattedSsn;\r\n  };\r\n\r\n  const [formData, setFormData] = useState({\r\n    // Personal Details\r\n\r\n    providedLivingSupport: providedLivingSupport,\r\n    isNewDependant: false,\r\n    additionalFirstName: \"\",\r\n    additionalMiddleInitial: \"\",\r\n    additionalLastName: \"\",\r\n    additionalSsnOrItin: \"\",\r\n    additionalApplyForItin: false, // Default to \"No\"\r\n    additionalDateOfBirth: \"\",\r\n    additionalGender: \"\",\r\n    additionalOccupation: \"\",\r\n    additionalVisaType: \"\",\r\n    additionalEmail: \"\",\r\n    additionalStayCount: \"\",\r\n    additionalRelationship: \"\",\r\n  });\r\n\r\n  const handleSaveDependentDetails = () => {\r\n    setFormData({\r\n      ...formData,\r\n      providedLivingSupport: true, // Update the value of providedLivingSupport to true\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ marginBottom: \"100px\" }}>\r\n      {!isDependantDetailsLoading && (\r\n        <Box>\r\n          <Formik\r\n            initialValues={formData}\r\n            validationSchema={Yup.object().shape({\r\n              //  additional Details (Add validation rules as needed)\r\n\r\n              providedLivingSupport: Yup.boolean().required(\r\n                \"Please select an option\"\r\n              ),\r\n\r\n              isNewDependant: Yup.boolean().required(\"Please select an option\"),\r\n\r\n              additionalFirstName: Yup.string().required(\r\n                \"First Name is required\"\r\n              ),\r\n              additionalMiddleInitial: Yup.string(),\r\n              additionalLastName: Yup.string().required(\r\n                \"Last Name is required\"\r\n              ),\r\n              additionalSsnOrItin: Yup.string(),\r\n              additionalApplyForItin: Yup.string(),\r\n              additionalDateOfBirth: Yup.string().required(\r\n                \"Data of birth is required\"\r\n              ),\r\n              additionalGender: Yup.string(),\r\n              additionalOccupation: Yup.string(),\r\n              additionalVisaType: Yup.string().required(\r\n                \"visa type is required\"\r\n              ),\r\n              additionalEmail: Yup.string()\r\n                .email(\"Must be a valid email\")\r\n                .max(255),\r\n              additionalRelationship: Yup.string().required(\r\n                \"Relationship is required\"\r\n              ),\r\n              additionalStayCount: Yup.number().required(\"count is required\"),\r\n            })}\r\n            onSubmit={(values, { setSubmitting, resetForm }) => {\r\n              setIsDependantDetailsLoading(true);\r\n              setSubmitting(true);\r\n              let payload = { ...values, id: id };\r\n              privateApiPOST(Api.addDependant, payload)\r\n                .then((response) => {\r\n                  const { status, data } = response;\r\n                  if (status === 200) {\r\n                    console.log(\"data\", data);\r\n                    setIsDependantDetailsLoading(false);\r\n                    handleFetchDependantDetails();\r\n                    setSubmitting(false);\r\n                    resetForm();\r\n                  }\r\n                })\r\n                .catch((error) => {\r\n                  console.log(\"Error\", error);\r\n                  setIsDependantDetailsLoading(false);\r\n                  setSubmitting(false);\r\n                });\r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values,\r\n              setFieldValue,\r\n            }) => (\r\n              <form autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                <Grid container>\r\n                  <Grid\r\n                    container\r\n                    sx={{\r\n                      marginTop: \"36px\",\r\n                      marginBottom: \"24px\",\r\n                    }}\r\n                  >\r\n                    <Grid\r\n                      item\r\n                      xs={10}\r\n                      sm={9}\r\n                      sx={{ display: \"flex\", alignItems: \"center\" }}\r\n                    >\r\n                      <Typography variant=\"body1\">\r\n                        <CustomLabel\r\n                          label=\" Have you (or your spouse, if married) provided living\r\n                        support to your kids and/or dependents during the tax\r\n                        year?\"\r\n                        />\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                      <CustomInputTextField\r\n                        attribute=\"\"\r\n                        is_required={true}\r\n                        // label={<CustomLabel label=\"\" />}\r\n                        select\r\n                        margin=\"normal\"\r\n                        name=\"providedLivingSupport\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.providedLivingSupport}\r\n                        variant=\"outlined\"\r\n                        error={Boolean(\r\n                          touched.providedLivingSupport &&\r\n                            errors.providedLivingSupport\r\n                        )}\r\n                        helperText={\r\n                          touched.providedLivingSupport &&\r\n                          errors.providedLivingSupport\r\n                        }\r\n                      >\r\n                        <MenuItem value={true}>Yes</MenuItem>\r\n                        <MenuItem value={false}>No</MenuItem>\r\n                      </CustomInputTextField>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      style={{ color: \"blue\", wordSpacing: \"2px\" }}\r\n                    >\r\n                      NOTE: Make sure the kids or dependents reported in your\r\n                      (Taxpayer) 2023 Tax Return are not claimed as dependents\r\n                      in any other 2023 Individual Tax Returns.\r\n                    </Typography>\r\n                  </Grid>\r\n\r\n                  {values.providedLivingSupport === true ? (\r\n                    <Grid item xs={12}>\r\n                      <Box sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          color=\"primary\"\r\n                          startIcon={\r\n                            values.isNewDependant ? <RemoveIcon /> : <AddIcon />\r\n                          }\r\n                          onClick={() => {\r\n                            // Toggle between true and false\r\n                            setFieldValue(\r\n                              \"isNewDependant\",\r\n                              !values.isNewDependant\r\n                            );\r\n                          }}\r\n                          sx={{\r\n                            margin: \"10px\",\r\n                          }}\r\n                        >\r\n                          {values.isNewDependant\r\n                            ? \"Remove Dependant\"\r\n                            : \"Add Dependant\"}\r\n                        </Button>\r\n                      </Box>\r\n                    </Grid>\r\n                  ) : null}\r\n\r\n                  {values.isNewDependant && (\r\n                    <Grid container spacing={2}>\r\n                      {/* Left Side - additional Details */}\r\n                      <Grid item lg={6} sm={6} xs={12}>\r\n                        <Typography variant=\"h4\">Additional Details</Typography>\r\n                        <Grid container spacing={2}>\r\n                          <CustomInputTextField\r\n                            attribute=\"First Name\"\r\n                            // label={\r\n                            //   <CustomLabel\r\n                            //     label=\"First Name\"\r\n                            //     required={true}\r\n                            //   />\r\n                            // }\r\n                            is_required={true}\r\n                            margin=\"normal\"\r\n                            name={`additionalFirstName`}\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            fullWidth\r\n                            value={values.additionalFirstName}\r\n                            variant=\"outlined\"\r\n                            error={\r\n                              touched.additionalFirstName &&\r\n                              errors.additionalFirstName\r\n                            }\r\n                            helperText={\r\n                              touched.additionalFirstName &&\r\n                              errors.additionalFirstName\r\n                            }\r\n                          />\r\n\r\n                          <CustomInputTextField\r\n                            attribute=\"Middle Initial\"\r\n                            // label={\r\n                            //   <CustomLabel\r\n                            //     label=\"Middle Initial\"\r\n                            //     required={false}\r\n                            //   />\r\n                            // }\r\n                            margin=\"normal\"\r\n                            name={`additionalMiddleInitial`}\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            fullWidth\r\n                            value={values.additionalMiddleInitial}\r\n                            variant=\"outlined\"\r\n                          />\r\n\r\n                          <CustomInputTextField\r\n                            attribute=\"Last Name\"\r\n                            // label={\r\n                            //   <CustomLabel label=\"Last Name\" required={true} />\r\n                            // }\r\n                            is_required={true}\r\n                            margin=\"normal\"\r\n                            name={`additionalLastName`}\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            fullWidth\r\n                            value={values.additionalLastName}\r\n                            variant=\"outlined\"\r\n                            error={\r\n                              touched.additionalLastName &&\r\n                              errors.additionalLastName\r\n                            }\r\n                            helperText={\r\n                              touched.additionalLastName &&\r\n                              errors.additionalLastName\r\n                            }\r\n                          />\r\n                          <SSN\r\n                            error={Boolean(touched.ssn && errors.ssn)}\r\n                            fullWidth\r\n                            // label={<CustomLabel label=\"SSN\" required={true} />}\r\n                            margin=\"normal\"\r\n                            name=\"ssn\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            value={transform(values.additionalSsnOrItin)}\r\n                            variant=\"outlined\"\r\n                            setFieldValue={setFieldValue}\r\n                            alignLeft={true}\r\n                          />\r\n                          {/* <CustomInputTextField\r\n                            attribute=\"SSN/ITIN\"\r\n                            // label={\r\n                            //   <CustomLabel label=\"SSN/ITIN\" required={true} />\r\n                            // }\r\n                            margin=\"normal\"\r\n                            name={`additionalSsnOrItin`}\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            fullWidth\r\n                            value={transform(values.additionalSsnOrItin)}\r\n                            variant=\"outlined\"\r\n                            error={\r\n                              touched.additionalSsnOrItin &&\r\n                              errors.additionalSsnOrItin\r\n                            }\r\n                            helperText={\r\n                              touched.additionalSsnOrItin &&\r\n                              errors.additionalSsnOrItin\r\n                            }\r\n                          /> */}\r\n\r\n                          <CustomInputTextField\r\n                            attribute=\"Do you want to apply for ITIN?\"\r\n                            // label={\r\n                            //   <CustomLabel\r\n                            //     label=\"Do you want to apply for ITIN?\"\r\n                            //     required={true}\r\n                            //   />\r\n                            // }\r\n                            select\r\n                            margin=\"normal\"\r\n                            name={`additionalApplyForItin`}\r\n                            onBlur={handleBlur}\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={values.additionalApplyForItin}\r\n                            variant=\"outlined\"\r\n                            error={\r\n                              touched.additionalApplyForItin &&\r\n                              errors.additionalApplyForItin\r\n                            }\r\n                            helperText={\r\n                              touched.additionalApplyForItin &&\r\n                              errors.additionalApplyForItin\r\n                            }\r\n                          >\r\n                            <MenuItem value={false}>No</MenuItem>\r\n                            <MenuItem value={true}>Yes</MenuItem>\r\n                          </CustomInputTextField>\r\n                          {values.additionalApplyForItin === true && (\r\n                            <ButtonBase\r\n                              onClick={() =>\r\n                                handleDownloadTemplate(\"ITIN_Information.xls\")\r\n                              }\r\n                              sx={{\r\n                                marginTop: \"20px\",\r\n                                textDecoration: \"underline\",\r\n                              }}\r\n                              disableTouchRipple\r\n                            >\r\n                              Download ITIN Information Excel\r\n                            </ButtonBase>\r\n                          )}\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      {/* Right Side - additional Contact */}\r\n                      <Grid item lg={6} sm={6} xs={12}>\r\n                        <Typography variant=\"h4\" sx={{ visibility: \"hidden\" }}>\r\n                          Additional Contact\r\n                        </Typography>\r\n                        <Grid container spacing={2}>\r\n                          <Grid item xs={12}>\r\n                            <CustomDatePicker\r\n                              name=\"additionalDateOfBirth\"\r\n                              label=\"Date Of Birth\"\r\n                              value={values.additionalDateOfBirth}\r\n                              setFieldValue={setFieldValue}\r\n                            />\r\n                          </Grid>\r\n\r\n                          <CustomInputTextField\r\n                            attribute=\"Gender\"\r\n                            // label={\r\n                            //   <CustomLabel label=\"Gender\" required={true} />\r\n                            // }\r\n                            select\r\n                            margin=\"normal\"\r\n                            name={`additionalGender`}\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            fullWidth\r\n                            value={values.additionalGender}\r\n                            variant=\"outlined\"\r\n                            error={\r\n                              touched.additionalGender &&\r\n                              errors.additionalGender\r\n                            }\r\n                            helperText={\r\n                              touched.additionalGender &&\r\n                              errors.additionalGender\r\n                            }\r\n                          >\r\n                            <MenuItem value=\"MALE\">Male</MenuItem>\r\n                            <MenuItem value=\"FEMALE\">Female</MenuItem>\r\n                            <MenuItem value=\"Other\">Other</MenuItem>\r\n                          </CustomInputTextField>\r\n\r\n                          {/* <CustomInputTextField\r\n                            attribute=\"Occupation / Job Title\"\r\n                            // label={\r\n                            //   <CustomLabel\r\n                            //     label=\"Occupation / Job Title\"\r\n                            //     required={true}\r\n                            //   />\r\n                            // }\r\n                            margin=\"normal\"\r\n                            name={`additionalOccupation`}\r\n                            onBlur={handleBlur}\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={values.additionalOccupation}\r\n                            variant=\"outlined\"\r\n                            error={\r\n                              touched.additionalOccupation &&\r\n                              errors.additionalOccupation\r\n                            }\r\n                            helperText={\r\n                              touched.additionalOccupation &&\r\n                              errors.additionalOccupation\r\n                            }\r\n                          /> */}\r\n\r\n                          <CustomInputTextField\r\n                            attribute=\"Visa Type\"\r\n                            // label={\r\n                            //   <CustomLabel\r\n                            //     label=\"Visa Type\"\r\n                            //     required={true}\r\n                            //   />\r\n                            // }\r\n                            is_required={true}\r\n                            margin=\"normal\"\r\n                            name={`additionalVisaType`}\r\n                            onBlur={handleBlur}\r\n                            select\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={values.additionalVisaType}\r\n                            variant=\"outlined\"\r\n                            error={\r\n                              touched.additionalVisaType &&\r\n                              errors.additionalVisaType\r\n                            }\r\n                            helperText={\r\n                              touched.additionalVisaType &&\r\n                              errors.additionalVisaType\r\n                            }\r\n                          >\r\n                            {residentialStatus.map((each, id) => (\r\n                              <MenuItem value={each} key={id}>\r\n                                {each}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </CustomInputTextField>\r\n\r\n                          {/* <CustomInputTextField\r\n                            attribute=\"Email Id\"\r\n                            // label={\r\n                            //   <CustomLabel label=\"Email Id\" required={true} />\r\n                            // }\r\n                            margin=\"normal\"\r\n                            name={`additionalEmail`}\r\n                            onBlur={handleBlur}\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={values.additionalEmail}\r\n                            variant=\"outlined\"\r\n                            error={\r\n                              touched.additionalEmail && errors.additionalEmail\r\n                            }\r\n                            helperText={\r\n                              touched.additionalEmail && errors.additionalEmail\r\n                            }\r\n                            \r\n                          /> */}\r\n                          <CustomInputTextField\r\n                            attribute=\"Relationship\"\r\n                            // label={\r\n                            //   <CustomLabel\r\n                            //     label=\"Relationship\"\r\n                            //     required={true}\r\n                            //   />\r\n                            // }\r\n                            is_required={true}\r\n                            margin=\"normal\"\r\n                            name={`additionalRelationship`}\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            fullWidth\r\n                            select\r\n                            value={values.additionalRelationship}\r\n                            variant=\"outlined\"\r\n                            error={\r\n                              touched.additionalRelationship &&\r\n                              errors.additionalRelationship\r\n                            }\r\n                            helperText={\r\n                              touched.additionalRelationship &&\r\n                              errors.additionalRelationship\r\n                            }\r\n                          >\r\n                            {dependantRelationships.map((each, id) => (\r\n                              <MenuItem value={each} key={id}>\r\n                                {each}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </CustomInputTextField>\r\n                          <CustomInputTextField\r\n                            attribute=\"No. of months dependent has stayed with you in U.S\"\r\n                            is_required={true}\r\n                            margin=\"normal\"\r\n                            name={`additionalStayCount`}\r\n                            onBlur={handleBlur}\r\n                            onChange={(e) => {\r\n                              const value = parseInt(e.target.value, 10);\r\n                              if (value <= 12) {\r\n                                handleChange(e);\r\n                              }\r\n                            }}\r\n                            type=\"number\"\r\n                            fullWidth\r\n                            value={values.additionalStayCount}\r\n                            variant=\"outlined\"\r\n                            inputProps={{ max: 12 }} // Set maximum value to 12\r\n                            error={\r\n                              touched.additionalStayCount &&\r\n                              errors.additionalStayCount\r\n                            }\r\n                            helperText={\r\n                              touched.additionalStayCount &&\r\n                              errors.additionalStayCount\r\n                            }\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n\r\n                  {values.isNewDependant && (\r\n                    <Grid item xs={12}>\r\n                      <Box\r\n                        sx={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"center\",\r\n                          alignItems: \"center\",\r\n                          margin: { xs: \"8px 0\", sm: \"60px 0 20px\" },\r\n                        }}\r\n                      >\r\n                        <Button\r\n                          type=\"submit\"\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          disabled={isSubmitting}\r\n                          onClick={handleSaveDependentDetails}\r\n                          sx={{ margin: \"0 10px\" }}\r\n                        >\r\n                          Save Dependents Details\r\n                        </Button>\r\n                      </Box>\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Box>\r\n      )}\r\n      <Grid item xs={12}>\r\n        {isDependantDetailsLoading ? (\r\n          <CircularProgress />\r\n        ) : (\r\n          <TableContainer\r\n            sx={{\r\n              paddingBottom: { xs: \"10px\", sm: \"0px\" },\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"h5\"\r\n              sx={{ textAlign: \"center\", marginTop: \"20px\" }}\r\n            >\r\n              Existing Dependents Details\r\n            </Typography>\r\n            <Table\r\n              sx={{\r\n                borderCollapse: \"collapse\",\r\n              }}\r\n              aria-label=\"Place Order Series Table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    Name\r\n                  </TableCell>\r\n\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    Relationship\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    SSN/ITIN\r\n                  </TableCell>\r\n                  <TableCell\r\n                    className={customStyles.tableHeader}\r\n                    sx={{ whiteSpace: \"nowrap\" }}\r\n                  >\r\n                    Apply ?\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    DOB\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    Visa Type\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    C.S\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    Months\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    Action\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {dependantDetails.length > 0 &&\r\n                  dependantDetails.map((row, index) => (\r\n                    <TableRow key={index}>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        {row.additionalFirstName} {row.additionalLastName}\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        {row.additionalRelationship}\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        {transform(row.additionalSsnOrItin)}\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        {row.additionalApplyForItin ? \"YES\" : \"NO\"}\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        {row.additionalDateOfBirth}\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        {row.additionalVisaType}\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        USA\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        {row.additionalStayCount}\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        <Button\r\n                          disabled={isDependantDetailsLoading}\r\n                          startIcon={<DeleteIcon />}\r\n                          size=\"small\"\r\n                          onClick={() => {\r\n                            handleDeleteDependant(row.id);\r\n                          }}\r\n                          className={customStyles.buttons}\r\n                        >\r\n                          Delete{\" \"}\r\n                          {isDependantDetailsLoading && (\r\n                            <CircularProgress sx={{ ml: 1 }} size={14} />\r\n                          )}\r\n                        </Button>\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.mobileView}>\r\n                        <Box>\r\n                          <Box\r\n                            sx={{\r\n                              display: \"flex\",\r\n                              flexWrap: \"wrap\",\r\n                              justifyContent: \"space-between\",\r\n                              marginTop: \"16px\",\r\n                            }}\r\n                          >\r\n                            <Box sx={{ marginTop: \"3px\" }}>\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellHeader\r\n                                }\r\n                              >\r\n                                First Name\r\n                              </Typography>\r\n\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellValue\r\n                                }\r\n                              >\r\n                                {row.additionalFirstName}\r\n                              </Typography>\r\n                            </Box>\r\n                            <Box sx={{ marginTop: \"3px\" }}>\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellHeader\r\n                                }\r\n                              >\r\n                                Last Name\r\n                              </Typography>\r\n\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellValue\r\n                                }\r\n                              >\r\n                                {row.additionalLastName}\r\n                              </Typography>\r\n                            </Box>\r\n                            <Box sx={{ marginTop: \"3px\" }}>\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellHeader\r\n                                }\r\n                              >\r\n                                RelationShip\r\n                              </Typography>\r\n\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellValue\r\n                                }\r\n                              >\r\n                                {row.additionalRelationship}\r\n                              </Typography>\r\n                            </Box>\r\n                          </Box>\r\n                          <Box\r\n                            sx={{\r\n                              display: \"flex\",\r\n                              flexWrap: \"wrap\",\r\n                              justifyContent: \"space-between\",\r\n                              marginTop: \"16px\",\r\n                            }}\r\n                          >\r\n                            <Box sx={{ marginTop: \"3px\" }}>\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellHeader\r\n                                }\r\n                              >\r\n                                Visa Type\r\n                              </Typography>\r\n\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellValue\r\n                                }\r\n                              >\r\n                                {row.additionalVisaType}\r\n                              </Typography>\r\n                            </Box>\r\n\r\n                            <Box sx={{ marginTop: \"3px\" }}>\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellHeader\r\n                                }\r\n                              >\r\n                                SSN/ITIN\r\n                              </Typography>\r\n\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellValue\r\n                                }\r\n                              >\r\n                                {transform(row.additionalSsnOrItin)}\r\n                              </Typography>\r\n                            </Box>\r\n\r\n                            <Button\r\n                              disabled={isDependantDetailsLoading}\r\n                              startIcon={<DeleteIcon />}\r\n                              size=\"small\"\r\n                              onClick={() => {\r\n                                handleDeleteDependant(row.id);\r\n                              }}\r\n                            >\r\n                              Delete{\" \"}\r\n                              {isDependantDetailsLoading && (\r\n                                <CircularProgress sx={{ ml: 1 }} size={14} />\r\n                              )}\r\n                            </Button>\r\n                          </Box>\r\n                        </Box>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n\r\n            {dependantDetails.length === 0 && (\r\n              <Typography\r\n                variant=\"h5\"\r\n                sx={{ textAlign: \"center\", margin: \"5px 0\" }}\r\n              >\r\n                No Dependants Found\r\n              </Typography>\r\n            )}\r\n            <Typography\r\n              variant=\"h5\"\r\n              sx={{\r\n                textAlign: \"center\",\r\n                color: \"red\",\r\n                marginTop: \"20px\",\r\n              }}\r\n            >\r\n              TO MODIFY EXISTING DEPENDENT DETAILS, DELETE THE SAME and then\r\n              CLICK on \"Add Additional Dependents\"\r\n            </Typography>\r\n          </TableContainer>\r\n        )}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DependantDetails;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  MenuItem,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  CircularProgress,\r\n  ButtonBase,\r\n} from \"@mui/material\";\r\n\r\nimport CustomDatePicker from \"../../../components/DatePicker\";\r\n\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport RemoveIcon from \"@mui/icons-material/Remove\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\nimport {\r\n  statesNames,\r\n  countryCode,\r\n  residentialStatus,\r\n  dependantRelationships,\r\n} from \"../../../constants\";\r\nimport Api from \"../../../components/Api\";\r\nimport {\r\n  privateApiGET,\r\n  privateApiPOST,\r\n} from \"../../../components/PrivateRoute\";\r\nimport CustomInputTextField from \"../../../components/CustomInputField\";\r\nimport DependantDetails from \"./DependantDetails\";\r\nimport SSN from \"../../../components/SSNField\";\r\n\r\nconst customTextStyles = makeStyles((theme) => ({\r\n  tableHeader: {\r\n    fontSize: \"16px\",\r\n    fontWeight: 600,\r\n    lineHeight: \"22px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      // marginBottom: \"8px\",\r\n      display: \"none\",\r\n    },\r\n  },\r\n  tableData: {\r\n    fontSize: \"16px\",\r\n    fontWeight: 400,\r\n    lineHeight: \"23px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  mobileViewTableCellValue: {\r\n    color: \"rgb(71, 71, 71)\",\r\n    fontSize: \"14px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"19px\",\r\n  },\r\n  mobileView: {\r\n    borderRadius: \"4px\",\r\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\r\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\r\n    cursor: \"pointer\",\r\n    border: \"none !important\",\r\n    marginBottom: \"20px\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  mobileViewTableCellHeader: {\r\n    color: \"rgb(245, 166, 35)\",\r\n    fontSize: \"10px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"14px\",\r\n  },\r\n  buttons: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport function CustomLabel({ label, required }) {\r\n  return (\r\n    <label style={{ display: \"flex\", alignItems: \"center\" }}>\r\n      {label}\r\n      {required && (\r\n        <span\r\n          style={{\r\n            color: \"red\",\r\n            fontSize: \"16px\",\r\n            marginLeft: \"3px\",\r\n          }}\r\n        >\r\n          *\r\n        </span>\r\n      )}\r\n    </label>\r\n  );\r\n}\r\n\r\nconst FilerDetails = ({\r\n  open,\r\n  setValue,\r\n  id,\r\n  personalDetails,\r\n  contactDetails,\r\n  spouseDetails,\r\n  incomeDetails,\r\n  providedLivingSupport,\r\n  handleFetchData,\r\n  handleDownloadTemplate,\r\n}) => {\r\n  const customStyles = customTextStyles();\r\n  const [isFilerDetailsLoading, setIsFilerDetailsLoading] = useState(false);\r\n  const [isDependantDetailsLoading, setIsDependantDetailsLoading] =\r\n    useState(false);\r\n  const [dependantDetails, setDependantDetails] = useState([]);\r\n\r\n  const transform = (input) => {\r\n    if (input === undefined || input === null) {\r\n      return \"\";\r\n    }\r\n\r\n    if (input.includes(\"-\")) {\r\n      return input;\r\n    }\r\n\r\n    const rawSsn = input.replace(/-/g, \"\"); // Remove hyphens\r\n    const formattedSsn = rawSsn\r\n      .replace(/\\D/g, \"\") // Remove non-digits\r\n      .replace(/(\\d{3})(\\d{2})(\\d{4})/, \"$1-$2-$3\"); // Format as 123-45-6789\r\n    return formattedSsn;\r\n  };\r\n\r\n  const formatPhoneNumber = (phoneNumber) => {\r\n    if (phoneNumber === undefined || phoneNumber === null) {\r\n      return \"\";\r\n    }\r\n\r\n    if (phoneNumber.includes(\"-\")) {\r\n      return phoneNumber;\r\n    }\r\n\r\n    // Remove non-numeric characters from the phone number\r\n    const numericOnly = phoneNumber.replace(/\\D/g, \"\");\r\n\r\n    // Use regex to capture groups of digits in the desired format\r\n    const formattedNumber = numericOnly.replace(\r\n      /(\\d{3})(\\d{3})(\\d{4})/,\r\n      \"($1)-$2-$3\"\r\n    );\r\n\r\n    return formattedNumber;\r\n  };\r\n\r\n  const dateOfBirth = personalDetails[\"dateOfBirth\"]\r\n    ? new Date(personalDetails[\"dateOfBirth\"])\r\n    : \"\";\r\n\r\n  const spouseDateOfBirth = spouseDetails[\"spouseDateOfBirth\"]\r\n    ? new Date(spouseDetails[\"spouseDateOfBirth\"])\r\n    : \"\";\r\n\r\n  const [formData, setFormData] = useState({\r\n    // Personal Details\r\n\r\n    firstName: personalDetails[\"firstName\"],\r\n    middleName: personalDetails[\"middleName\"],\r\n    lastName: personalDetails[\"lastName\"],\r\n    ssn: personalDetails[\"ssn\"],\r\n    dateOfBirth: dateOfBirth,\r\n    gender: personalDetails[\"gender\"],\r\n    occupation: personalDetails[\"occupation\"],\r\n    residentialStatus: personalDetails[\"residentialStatus\"],\r\n    email: personalDetails[\"email\"],\r\n\r\n    // Contact Details\r\n    street: contactDetails[\"street\"],\r\n    apartment: contactDetails[\"apartment\"],\r\n    city: contactDetails[\"city\"],\r\n    state: contactDetails[\"state\"],\r\n    zipCode: contactDetails[\"zipCode\"],\r\n    country: contactDetails[\"country\"],\r\n    primaryCountryCode: contactDetails[\"primaryCountryCode\"],\r\n    primaryPhoneNumber: contactDetails[\"primaryPhoneNumber\"],\r\n    secondaryCountryCode: contactDetails[\"secondaryCountryCode\"],\r\n    secondaryPhoneNumber: contactDetails[\"secondaryPhoneNumber\"],\r\n    contactEmail: contactDetails[\"contactEmail\"],\r\n\r\n    taxFiledLastYear: incomeDetails[\"taxFiledLastYear\"], // Set an initial value for taxFiledLastYear\r\n\r\n    // additional Spouse Details (Initially hidden)\r\n    taxPayerStatus: personalDetails[\"taxPayerStatus\"], // Default to \"No\" (Single)\r\n    spouseFirstName: spouseDetails[\"spouseFirstName\"],\r\n    spouseMiddleInitial: spouseDetails[\"spouseMiddleInitial\"],\r\n    spouseLastName: spouseDetails[\"spouseLastName\"],\r\n    spouseSsnOrItin: spouseDetails[\"spouseSsnOrItin\"],\r\n    spouseApplyForItin: spouseDetails[\"spouseApplyForItin\"], // Default to \"No\"\r\n    spouseDateOfBirth: spouseDateOfBirth,\r\n    spouseGender: spouseDetails[\"spouseGender\"],\r\n    spouseOccupation: spouseDetails[\"spouseOccupation\"],\r\n    spouseResidentialStatus: spouseDetails[\"spouseResidentialStatus\"],\r\n    spouseEmail: spouseDetails[\"spouseEmail\"],\r\n  });\r\n\r\n  const stateOptions = statesNames;\r\n  const countryCodes = countryCode;\r\n\r\n  const handleDeleteDependant = (dependantId) => {\r\n    setIsDependantDetailsLoading(true);\r\n    let payload = { taxFilingId: id, id: dependantId };\r\n    privateApiPOST(Api.deleteDependant, payload)\r\n      .then((response) => {\r\n        const { status, data } = response;\r\n        if (status === 200) {\r\n          console.log(\"data\", data);\r\n          setIsDependantDetailsLoading(false);\r\n          handleFetchDependantDetails();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n        setIsFilerDetailsLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleFetchDependantDetails = () => {\r\n    setIsDependantDetailsLoading(true);\r\n    let payload = { id: id };\r\n    privateApiPOST(Api.dependantDetails, payload)\r\n      .then((response) => {\r\n        const { status, data } = response;\r\n        if (status === 200) {\r\n          console.log(\"data\", data);\r\n          setDependantDetails(data?.data);\r\n          setIsDependantDetailsLoading(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n        setIsDependantDetailsLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      handleFetchDependantDetails();\r\n    }\r\n  }, []);\r\n\r\n  console.log(formData.taxPayerStatus);\r\n  return (\r\n    <Box\r\n      sx={{\r\n        padding: \"20px 0 5px\",\r\n        border: { xs: \"none\", sm: \"1px solid #3A97BB\" },\r\n        minHeight: { xs: \"auto\", sm: \"800px\" },\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        {isFilerDetailsLoading ? (\r\n          <CircularProgress />\r\n        ) : (\r\n          <Box>\r\n            <Box>\r\n              <Formik\r\n                initialValues={formData}\r\n                validationSchema={Yup.object().shape({\r\n                  firstName: Yup.string()\r\n                    .max(255)\r\n                    .required(\"First Name is required\"),\r\n                  middleName: Yup.string().max(255),\r\n                  lastName: Yup.string()\r\n                    .max(255)\r\n                    .required(\"Last Name is required\"),\r\n                  ssn: Yup.string()\r\n                    .matches(\r\n                      /^\\d{9}$/,\r\n                      \"SSN must be exactly 9 digits long and contain only numbers\"\r\n                    )\r\n                    .required(\"SSN is required\"),\r\n                  dateOfBirth: Yup.date()\r\n                    .max(new Date(), \"Date of Birth cannot be in the future\")\r\n                    .required(\"Date of Birth is required\"),\r\n                  gender: Yup.string().required(\"Gender is required\"),\r\n                  occupation: Yup.string()\r\n                    .max(255)\r\n                    .required(\"Occupation is required\"),\r\n                  residentialStatus: Yup.string().required(\r\n                    \"Residential Status is required\"\r\n                  ),\r\n                  street: Yup.string().max(255).required(\"Street is required\"),\r\n                  apartment: Yup.string()\r\n                    .max(255)\r\n                    .required(\"Apartment is required\"),\r\n                  city: Yup.string().max(255).required(\"City is required\"),\r\n                  state: Yup.string().max(255).required(\"State is required\"),\r\n                  zipCode: Yup.string()\r\n                    .max(10)\r\n                    .required(\"Zip Code is required\"),\r\n                  country: Yup.string()\r\n                    .max(255)\r\n                    .required(\"Country is required\"),\r\n                  primaryCountryCode: Yup.string().required(\r\n                    \" Country Code is required\"\r\n                  ),\r\n                  primaryPhoneNumber: Yup.string().required(\r\n                    \"Primary Phone Number is required\"\r\n                  ),\r\n                  secondaryCountryCode: Yup.string(),\r\n                  secondaryPhoneNumber: Yup.string(),\r\n                  contactEmail: Yup.string()\r\n                    .email(\"Must be a valid email\")\r\n                    .max(255)\r\n                    .required(\"Contact Email is required\"),\r\n                  taxFiledLastYear: Yup.boolean().required(\r\n                    \"Please select an option\"\r\n                  ),\r\n                  taxPayerStatus: Yup.string().required(\r\n                    \"Please select your status\"\r\n                  ),\r\n\r\n                  // Additional Spouse Details (Add validation rules as needed)\r\n                  spouseFirstName: Yup.string().when(\"taxPayerStatus\", {\r\n                    is: \"MARRIED\",\r\n                    then: Yup.string().required(\r\n                      \"Spouse First Name is required\"\r\n                    ),\r\n                  }),\r\n                  spouseMiddleInitial: Yup.string(),\r\n                  spouseLastName: Yup.string().when(\"taxPayerStatus\", {\r\n                    is: \"MARRIED\",\r\n                    then: Yup.string().required(\"Spouse Last Name is required\"),\r\n                  }),\r\n                  spouseSsnOrItin: Yup.string().when(\"taxPayerStatus\", {\r\n                    is: \"MARRIED\",\r\n                    then: Yup.string().required(\"Spouse SSN/ITIN is required\"),\r\n                  }),\r\n                  spouseApplyForItin: Yup.string(),\r\n                  spouseDateOfBirth: Yup.string().when(\"taxPayerStatus\", {\r\n                    is: \"MARRIED\",\r\n                    then: Yup.string().required(\r\n                      \"Spouse Date of Birth is required\"\r\n                    ),\r\n                  }),\r\n                  spouseGender: Yup.string().when(\"taxPayerStatus\", {\r\n                    is: \"MARRIED\",\r\n                    then: Yup.string().required(\"Spouse Gender is required\"),\r\n                  }),\r\n                  spouseOccupation: Yup.string().when(\"taxPayerStatus\", {\r\n                    is: \"MARRIED\",\r\n                    then: Yup.string().required(\r\n                      \"Spouse Occupation is required\"\r\n                    ),\r\n                  }),\r\n                  spouseResidentialStatus: Yup.string().when(\"taxPayerStatus\", {\r\n                    is: \"MARRIED\",\r\n                    then: Yup.string().required(\r\n                      \"Spouse Residential Status is required\"\r\n                    ),\r\n                  }),\r\n                  spouseEmail: Yup.string().when(\"taxPayerStatus\", {\r\n                    is: \"MARRIED\",\r\n                    then: Yup.string()\r\n                      .email(\"Must be a valid email\")\r\n                      .max(255)\r\n                      .required(\"Spouse Email is required\"),\r\n                  }),\r\n\r\n                  //  additional Details (Add validation rules as needed)\r\n                })}\r\n                onSubmit={(values, { setSubmitting, resetForm }) => {\r\n                  console.log(\"values\", values);\r\n                  setIsFilerDetailsLoading(true);\r\n                  setSubmitting(true);\r\n                  let payload = { ...values, id: id };\r\n                  privateApiPOST(Api.personalContactDetails, payload)\r\n                    .then((response) => {\r\n                      const { status, data } = response;\r\n                      if (status === 200) {\r\n                        console.log(\"data\", data);\r\n                        setIsFilerDetailsLoading(false);\r\n                        handleFetchData();\r\n                        setSubmitting(false);\r\n                      }\r\n                    })\r\n                    .catch((error) => {\r\n                      console.log(\"Error\", error);\r\n                      setIsFilerDetailsLoading(false);\r\n                      setSubmitting(false);\r\n                    });\r\n                }}\r\n              >\r\n                {({\r\n                  errors,\r\n                  handleBlur,\r\n                  handleChange,\r\n                  handleSubmit,\r\n                  isSubmitting,\r\n                  touched,\r\n                  values,\r\n                  setFieldValue,\r\n                }) => (\r\n                  <form autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                    <Grid container spacing={2}>\r\n                      {/* Left Side - Personal Details */}\r\n\r\n                      <Grid item sm={6} xs={12}>\r\n                        <Box className={customStyles.leftSide}>\r\n                          <Typography\r\n                            variant=\"h4\"\r\n                            sx={{ marginBottom: \"36px\" }}\r\n                          >\r\n                            Personal Details\r\n                          </Typography>\r\n\r\n                          <Box\r\n                            sx={{\r\n                              display: \"flex\",\r\n                              flexWrap: \"wrap\",\r\n                              justifyContent: \"space-between\",\r\n                              maxWidth: \"96%\",\r\n                            }}\r\n                          >\r\n                            <Typography\r\n                              variant=\"subtitle1\"\r\n                              color=\"textSecondary\"\r\n                              sx={{ marginTop: \"20px\", maxWidth: \"25%\" }}\r\n                            >\r\n                              Taxpayer Name\r\n                              <font color=\"#11a63d\" size=\"2\">\r\n                                (As Per SSN):\r\n                              </font>\r\n                            </Typography>\r\n\r\n                            <Box>\r\n                              <CustomInputTextField\r\n                                attribute=\"First Name\"\r\n                                attributeTextAlign=\"right\"\r\n                                is_required={true}\r\n                                error={Boolean(\r\n                                  touched.firstName && errors.firstName\r\n                                )}\r\n                                fullWidth\r\n                                helperText={\r\n                                  touched.firstName && errors.firstName\r\n                                }\r\n                                // label={\r\n                                //   <CustomLabel label=\"First Name\" required={true} />\r\n                                // }\r\n                                margin=\"normal\"\r\n                                name=\"firstName\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                value={values.firstName}\r\n                                variant=\"outlined\"\r\n                              />\r\n\r\n                              <CustomInputTextField\r\n                                attribute=\"Middle Initial\"\r\n                                attributeTextAlign=\"right\"\r\n                                is_required={false}\r\n                                error={Boolean(\r\n                                  touched.middleName && errors.middleName\r\n                                )}\r\n                                fullWidth\r\n                                helperText={\r\n                                  touched.middleName && errors.middleName\r\n                                }\r\n                                // label={\r\n                                //   <CustomLabel label=\"Middle Name\" required={false} />\r\n                                // }\r\n                                margin=\"normal\"\r\n                                name=\"middleName\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                value={values.middleName}\r\n                                variant=\"outlined\"\r\n                              />\r\n                              <CustomInputTextField\r\n                                attribute=\"Last Name\"\r\n                                attributeTextAlign=\"right\"\r\n                                is_required={true}\r\n                                error={Boolean(\r\n                                  touched.lastName && errors.lastName\r\n                                )}\r\n                                fullWidth\r\n                                helperText={touched.lastName && errors.lastName}\r\n                                // label={\r\n                                //   <CustomLabel label=\"Last Name\" required={true} />\r\n                                // }\r\n                                margin=\"normal\"\r\n                                name=\"lastName\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                value={values.lastName}\r\n                                variant=\"outlined\"\r\n                              />\r\n                            </Box>\r\n                          </Box>\r\n\r\n                          {/* <CustomInputTextField\r\n                            attribute=\"SSN\"\r\n                            attributeTextAlign=\"right\"\r\n                            is_required={true}\r\n                            error={Boolean(touched.ssn && errors.ssn)}\r\n                            fullWidth\r\n                            helperText={touched.ssn && errors.ssn}\r\n                            // label={<CustomLabel label=\"SSN\" required={true} />}\r\n                            margin=\"normal\"\r\n                            name=\"ssn\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            value={transform(values.ssn)}\r\n                            variant=\"outlined\"\r\n                          /> */}\r\n                          <SSN\r\n                            error={Boolean(touched.ssn && errors.ssn)}\r\n                            fullWidth\r\n                            // label={<CustomLabel label=\"SSN\" required={true} />}\r\n                            margin=\"normal\"\r\n                            name=\"ssn\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            value={transform(values.ssn)}\r\n                            setFieldValue={setFieldValue}\r\n                            variant=\"outlined\"\r\n                          />\r\n\r\n                          <Grid item xs={12}>\r\n                            <CustomDatePicker\r\n                              name=\"dateOfBirth\"\r\n                              label=\"Date Of Birth\"\r\n                              value={values.dateOfBirth}\r\n                              setFieldValue={setFieldValue}\r\n                            />\r\n                          </Grid>\r\n\r\n                          <CustomInputTextField\r\n                            attribute=\"Gender\"\r\n                            attributeTextAlign=\"right\"\r\n                            is_required={true}\r\n                            error={Boolean(touched.gender && errors.gender)}\r\n                            select\r\n                            fullWidth\r\n                            helperText={touched.gender && errors.gender}\r\n                            // label={<CustomLabel label=\"Gender\" required={true} />}\r\n                            margin=\"normal\"\r\n                            name=\"gender\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            value={values.gender}\r\n                            variant=\"outlined\"\r\n                          >\r\n                            <MenuItem value=\"MALE\">Male</MenuItem>\r\n                            <MenuItem value=\"FEMALE\">Female</MenuItem>\r\n                            <MenuItem value=\"Other\">Other</MenuItem>\r\n                          </CustomInputTextField>\r\n                          <CustomInputTextField\r\n                            attribute=\"Occupation / Job Title\"\r\n                            attributeTextAlign=\"right\"\r\n                            is_required={true}\r\n                            error={Boolean(\r\n                              touched.occupation && errors.occupation\r\n                            )}\r\n                            fullWidth\r\n                            helperText={touched.occupation && errors.occupation}\r\n                            // label={\r\n                            //   <CustomLabel label=\"Occupation\" required={true} />\r\n                            // }\r\n                            margin=\"normal\"\r\n                            name=\"occupation\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            value={values.occupation}\r\n                            variant=\"outlined\"\r\n                          />\r\n                          <Grid item xs={12}>\r\n                            <Grid container>\r\n                              <Grid item xs={10}>\r\n                                <CustomInputTextField\r\n                                  attribute=\"Residential Status\"\r\n                                  attributeTextAlign=\"right\"\r\n                                  is_required={true}\r\n                                  error={Boolean(\r\n                                    touched.residentialStatus &&\r\n                                      errors.residentialStatus\r\n                                  )}\r\n                                  fullWidth\r\n                                  helperText={\r\n                                    touched.residentialStatus &&\r\n                                    errors.residentialStatus\r\n                                  }\r\n                                  // label={\r\n                                  //   <CustomLabel\r\n                                  //     label=\"Residential Status\"\r\n                                  //     required={true}\r\n                                  //   />\r\n                                  // }\r\n                                  margin=\"normal\"\r\n                                  name=\"residentialStatus\"\r\n                                  onBlur={handleBlur}\r\n                                  onChange={handleChange}\r\n                                  value={values.residentialStatus}\r\n                                  variant=\"outlined\"\r\n                                />\r\n                              </Grid>\r\n                              <Grid item xs={2} sx={{ margin: \"auto 0\" }}>\r\n                                <Typography\r\n                                  variant=\"h5\"\r\n                                  sx={{\r\n                                    color: \"#11a63d\",\r\n                                    whiteSpace: \"nowrap\",\r\n                                    marginLeft: \"-20px\",\r\n                                  }}\r\n                                >\r\n                                  [VISA TYPE]\r\n                                </Typography>\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Box>\r\n                      </Grid>\r\n\r\n                      {/* Right Side - Contact Details */}\r\n                      <Grid\r\n                        item\r\n                        sm={6}\r\n                        xs={12}\r\n                        // sx={{ marginLeft: { xs: \"0px\", sm: \"60px\" } }}\r\n                      >\r\n                        <Box className={customStyles.rightSide}>\r\n                          <Typography\r\n                            variant=\"h4\"\r\n                            sx={{ marginBottom: \"16px\" }}\r\n                          >\r\n                            Contact Details\r\n                          </Typography>\r\n                          <Typography\r\n                            color={\"#11a63d\"}\r\n                            sx={{ marginLeft: \"10px\" }}\r\n                            variant=\"h5\"\r\n                          >\r\n                            (Provide U.S current communication Address)\r\n                          </Typography>\r\n                          <CustomInputTextField\r\n                            attribute=\"Street\"\r\n                            is_required={true}\r\n                            error={Boolean(touched.street && errors.street)}\r\n                            fullWidth\r\n                            helperText={touched.street && errors.street}\r\n                            // label={<CustomLabel label=\"Street\" required={true} />}\r\n                            margin=\"normal\"\r\n                            name=\"street\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            value={values.street}\r\n                            variant=\"outlined\"\r\n                          />\r\n                          <CustomInputTextField\r\n                            attribute=\"Apartment\"\r\n                            is_required={true}\r\n                            error={Boolean(\r\n                              touched.apartment && errors.apartment\r\n                            )}\r\n                            fullWidth\r\n                            helperText={touched.apartment && errors.apartment}\r\n                            // label={\r\n                            //   <CustomLabel label=\"Apartment\" required={true} />\r\n                            // }\r\n                            margin=\"normal\"\r\n                            name=\"apartment\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            value={values.apartment}\r\n                            variant=\"outlined\"\r\n                          />\r\n                          <CustomInputTextField\r\n                            attribute=\"City\"\r\n                            is_required={true}\r\n                            error={Boolean(touched.city && errors.city)}\r\n                            fullWidth\r\n                            helperText={touched.city && errors.city}\r\n                            // label={<CustomLabel label=\"City\" required={true} />}\r\n                            margin=\"normal\"\r\n                            name=\"city\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            value={values.city}\r\n                            variant=\"outlined\"\r\n                          />\r\n                          <CustomInputTextField\r\n                            attribute=\"State\"\r\n                            is_required={true}\r\n                            error={Boolean(touched.state && errors.state)}\r\n                            select\r\n                            fullWidth\r\n                            helperText={touched.state && errors.state}\r\n                            // label={<CustomLabel label=\"State\" required={true} />}\r\n                            margin=\"normal\"\r\n                            name=\"state\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            value={values.state}\r\n                            variant=\"outlined\"\r\n                          >\r\n                            {stateOptions.map((option) => (\r\n                              <MenuItem key={option.value} value={option.value}>\r\n                                {option.label}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </CustomInputTextField>\r\n                          <CustomInputTextField\r\n                            attribute=\"Zip Code\"\r\n                            is_required={true}\r\n                            error={Boolean(touched.zipCode && errors.zipCode)}\r\n                            fullWidth\r\n                            helperText={touched.zipCode && errors.zipCode}\r\n                            // label={\r\n                            //   <CustomLabel label=\"Zip Code\" required={true} />\r\n                            // }\r\n                            margin=\"normal\"\r\n                            name=\"zipCode\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            value={values.zipCode}\r\n                            variant=\"outlined\"\r\n                          />\r\n                          <CustomInputTextField\r\n                            attribute=\"Country\"\r\n                            is_required={true}\r\n                            error={Boolean(touched.country && errors.country)}\r\n                            select\r\n                            fullWidth\r\n                            helperText={touched.country && errors.country}\r\n                            // label={\r\n                            //   <CustomLabel label=\"Country\" required={true} />\r\n                            // }\r\n                            margin=\"normal\"\r\n                            name=\"country\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            value={values.country}\r\n                            variant=\"outlined\"\r\n                          >\r\n                            {/* <MenuItem value=\"India\">India</MenuItem> */}\r\n                            <MenuItem value=\"USA\">USA</MenuItem>\r\n                            <MenuItem value=\"Other\">Other</MenuItem>\r\n                          </CustomInputTextField>\r\n                          <Box\r\n                            sx={{\r\n                              display: \"flex\",\r\n                              flexWrap: \"wrap\",\r\n                              justifyContent: \"space-between\",\r\n                              alignItems: \"center\",\r\n                              width: \"93%\",\r\n                              margin: \"10px 0\",\r\n                              maxHeight: \"60px\",\r\n                            }}\r\n                          >\r\n                            <Typography\r\n                              variant=\"body1\"\r\n                              sx={{\r\n                                width: { xs: \"30%\", sm: \"120px\" },\r\n                              }}\r\n                            >\r\n                              <span>Primary Phone</span>\r\n                              <span\r\n                                style={{\r\n                                  color: \"red\",\r\n                                  fontSize: \"0.875rem\",\r\n                                  marginLeft: \"3px\",\r\n                                }}\r\n                              >\r\n                                *\r\n                              </span>\r\n                              &nbsp;:\r\n                            </Typography>\r\n\r\n                            <TextField\r\n                              attribute=\"Primary Phone\"\r\n                              error={Boolean(\r\n                                touched.primaryCountryCode &&\r\n                                  errors.primaryCountryCode\r\n                              )}\r\n                              select\r\n                              helperText={\r\n                                touched.primaryCountryCode &&\r\n                                errors.primaryCountryCode\r\n                              }\r\n                              // label={\r\n                              //   <CustomLabel label=\"+91\" required={true} />\r\n                              // }\r\n                              margin=\"normal\"\r\n                              name=\"primaryCountryCode\"\r\n                              onBlur={handleBlur}\r\n                              onChange={handleChange}\r\n                              value={values.primaryCountryCode}\r\n                              variant=\"outlined\"\r\n                              sx={{\r\n                                width: \"18%\",\r\n                                \"& .MuiOutlinedInput-root\": {\r\n                                  \"& fieldset\": {\r\n                                    borderRadius: \"2px\",\r\n                                  },\r\n                                },\r\n                                \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\":\r\n                                  {\r\n                                    border: \"0.1px solid #bdbdbd\",\r\n                                  },\r\n                                \"& .MuiOutlinedInput-input\": {\r\n                                  padding: \"10px\",\r\n                                  backgroundColor: \"rgba(255,255,255,1)\",\r\n                                },\r\n                              }}\r\n                            >\r\n                              {countryCodes.map((option) => (\r\n                                <MenuItem\r\n                                  key={option.value}\r\n                                  value={option.value}\r\n                                >\r\n                                  {option.label}\r\n                                </MenuItem>\r\n                              ))}\r\n                            </TextField>\r\n\r\n                            <TextField\r\n                              error={Boolean(\r\n                                touched.primaryPhoneNumber &&\r\n                                  errors.primaryPhoneNumber\r\n                              )}\r\n                              helperText={\r\n                                touched.primaryPhoneNumber &&\r\n                                errors.primaryPhoneNumber\r\n                              }\r\n                              // label={\r\n                              //   <CustomLabel\r\n                              //     label=\"Primary Phone Number\"\r\n                              //     required={true}\r\n                              //   />\r\n                              // }\r\n                              margin=\"normal\"\r\n                              name=\"primaryPhoneNumber\"\r\n                              onBlur={handleBlur}\r\n                              onChange={handleChange}\r\n                              value={formatPhoneNumber(\r\n                                values.primaryPhoneNumber\r\n                              )}\r\n                              variant=\"outlined\"\r\n                              sx={{\r\n                                \"& .MuiOutlinedInput-root\": {\r\n                                  \"& fieldset\": {\r\n                                    borderRadius: \"2px\",\r\n                                  },\r\n                                },\r\n                                \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\":\r\n                                  {\r\n                                    border: \"0.1px solid #bdbdbd\",\r\n                                  },\r\n                                \"& .MuiOutlinedInput-input\": {\r\n                                  padding: \"10px\",\r\n                                  backgroundColor: \"rgba(255,255,255,1)\",\r\n                                },\r\n                                width: { xs: \"50%\", sm: \"165px\" },\r\n                              }}\r\n                            />\r\n                          </Box>\r\n                          <Box\r\n                            sx={{\r\n                              display: \"flex\",\r\n                              flexWrap: \"wrap\",\r\n                              justifyContent: \"space-between\",\r\n                              alignItems: \"center\",\r\n                              width: \"93%\",\r\n                              margin: \"10px 0\",\r\n                              maxHeight: \"60px\",\r\n                            }}\r\n                          >\r\n                            <Typography\r\n                              variant=\"body1\"\r\n                              sx={{\r\n                                width: { xs: \"30%\", sm: \"120px\" },\r\n                              }}\r\n                            >\r\n                              <span>Secondary Phone</span>\r\n                              &nbsp;:\r\n                            </Typography>\r\n\r\n                            <TextField\r\n                              error={Boolean(\r\n                                touched.secondaryCountryCode &&\r\n                                  errors.secondaryCountryCode\r\n                              )}\r\n                              select\r\n                              helperText={\r\n                                touched.secondaryCountryCode &&\r\n                                errors.secondaryCountryCode\r\n                              }\r\n                              // label={\r\n                              //   <CustomLabel\r\n                              //     label=\"Country Code\"\r\n                              //     required={false}\r\n                              //   />\r\n                              // }\r\n                              margin=\"normal\"\r\n                              name=\"secondaryCountryCode\"\r\n                              onBlur={handleBlur}\r\n                              onChange={handleChange}\r\n                              value={values.secondaryCountryCode}\r\n                              variant=\"outlined\"\r\n                              sx={{\r\n                                \"& .MuiOutlinedInput-root\": {\r\n                                  \"& fieldset\": {\r\n                                    borderRadius: \"2px\",\r\n                                  },\r\n                                },\r\n                                \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\":\r\n                                  {\r\n                                    border: \"0.1px solid #bdbdbd\",\r\n                                  },\r\n                                \"& .MuiOutlinedInput-input\": {\r\n                                  padding: \"10px\",\r\n                                  backgroundColor: \"rgba(255,255,255,1)\",\r\n                                },\r\n                                width: \"18%\",\r\n                              }}\r\n                            >\r\n                              {countryCodes.map((option) => (\r\n                                <MenuItem\r\n                                  key={option.value}\r\n                                  value={option.value}\r\n                                >\r\n                                  {option.label}\r\n                                </MenuItem>\r\n                              ))}\r\n                            </TextField>\r\n\r\n                            <TextField\r\n                              attribute=\"Secondary Phone\"\r\n                              error={Boolean(\r\n                                touched.secondaryPhoneNumber &&\r\n                                  errors.secondaryPhoneNumber\r\n                              )}\r\n                              helperText={\r\n                                touched.secondaryPhoneNumber &&\r\n                                errors.secondaryPhoneNumber\r\n                              }\r\n                              // label={\r\n                              //   <CustomLabel\r\n                              //     label=\"Secondary Phone Number\"\r\n                              //     required={false}\r\n                              //   />\r\n                              // }\r\n                              margin=\"normal\"\r\n                              name=\"secondaryPhoneNumber\"\r\n                              onBlur={handleBlur}\r\n                              onChange={handleChange}\r\n                              value={formatPhoneNumber(\r\n                                values.secondaryPhoneNumber\r\n                              )}\r\n                              variant=\"outlined\"\r\n                              sx={{\r\n                                \"& .MuiOutlinedInput-root\": {\r\n                                  \"& fieldset\": {\r\n                                    borderRadius: \"2px\",\r\n                                  },\r\n                                },\r\n                                \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\":\r\n                                  {\r\n                                    border: \"0.1px solid #bdbdbd\",\r\n                                  },\r\n                                \"& .MuiOutlinedInput-input\": {\r\n                                  padding: \"10px\",\r\n                                  backgroundColor: \"rgba(255,255,255,1)\",\r\n                                },\r\n                                width: { xs: \"50%\", sm: \"165px\" },\r\n                              }}\r\n                            />\r\n                          </Box>\r\n\r\n                          <CustomInputTextField\r\n                            attribute=\"Email Id\"\r\n                            is_required={false}\r\n                            error={Boolean(\r\n                              touched.contactEmail && errors.contactEmail\r\n                            )}\r\n                            fullWidth\r\n                            helperText={\r\n                              touched.contactEmail && errors.contactEmail\r\n                            }\r\n                            // label={\r\n                            //   <CustomLabel\r\n                            //     label=\"Contact Email\"\r\n                            //     required={true}\r\n                            //   />\r\n                            // }\r\n                            margin=\"normal\"\r\n                            name=\"contactEmail\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            value={values.contactEmail}\r\n                            variant=\"outlined\"\r\n                          />\r\n                        </Box>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Box sx={{ margin: \"16px 0\" }}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid\r\n                            item\r\n                            xs={10}\r\n                            sm={5}\r\n                            style={{ display: \"flex\", alignItems: \"center\" }}\r\n                          >\r\n                            <Typography variant=\"body1\">\r\n                              <CustomLabel\r\n                                label=\"Have you filed your taxes with Onecall Tax Services in the last year?\"\r\n                                required={true}\r\n                              />\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={2} sm={1}>\r\n                            <select\r\n                              id=\"taxFiledLastYear\"\r\n                              name=\"taxFiledLastYear\"\r\n                              value={values.taxFiledLastYear}\r\n                              onChange={handleChange}\r\n                              style={{ width: \"100%\" }}\r\n                            >\r\n                              <option value=\"\">Select</option>\r\n                              {/* Add an empty option */}\r\n                              <option value={true}>Yes</option>\r\n                              <option value={false}>No</option>\r\n                            </select>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Box sx={{ margin: \"16px 0\" }}>\r\n                        <Grid container spacing={2}>\r\n                          <Grid\r\n                            item\r\n                            xs={8}\r\n                            sm={5}\r\n                            style={{\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                            }}\r\n                          >\r\n                            <Typography variant=\"body1\">\r\n                              <CustomLabel\r\n                                label=\"Taxpayer Status\"\r\n                                required={true}\r\n                              />\r\n                            </Typography>\r\n                          </Grid>\r\n                          <Grid item xs={4} sm={1}>\r\n                            <select\r\n                              id=\"taxPayerStatus\"\r\n                              name=\"taxPayerStatus\"\r\n                              value={values.taxPayerStatus}\r\n                              onChange={handleChange}\r\n                              style={{ width: \"100%\" }}\r\n                            >\r\n                              <option value=\"\">Select Status</option>{\" \"}\r\n                              {/* Add an empty option */}\r\n                              <option value=\"SINGLE\">Single</option>\r\n                              <option value=\"MARRIED\">Married</option>\r\n                            </select>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Box>\r\n                    </Grid>\r\n                    {values.taxPayerStatus === \"MARRIED\" && (\r\n                      <Grid container spacing={2}>\r\n                        {/* Left Side - Spouse Details */}\r\n                        <Grid item lg={6} sm={6} xs={12}>\r\n                          <Typography variant=\"h4\">Spouse Details</Typography>\r\n                          <Grid container spacing={2}>\r\n                            <CustomInputTextField\r\n                              is_required={true}\r\n                              attribute=\"First Name\"\r\n                              // label={\r\n                              //   <CustomLabel\r\n                              //     label=\"First Name\"\r\n                              //     required={true}\r\n                              //   />\r\n                              // }\r\n                              margin=\"normal\"\r\n                              name=\"spouseFirstName\"\r\n                              onBlur={handleBlur}\r\n                              onChange={handleChange}\r\n                              fullWidth\r\n                              value={values.spouseFirstName}\r\n                              variant=\"outlined\"\r\n                              error={Boolean(\r\n                                touched.spouseFirstName &&\r\n                                  errors.spouseFirstName\r\n                              )}\r\n                              helperText={\r\n                                touched.spouseFirstName &&\r\n                                errors.spouseFirstName\r\n                              }\r\n                            />\r\n\r\n                            <CustomInputTextField\r\n                              attribute=\"Middle Initial\"\r\n                              is_required={false}\r\n                              // label={\r\n                              //   <CustomLabel\r\n                              //     label=\"Spouse Middle Initial\"\r\n                              //     required={true}\r\n                              //   />\r\n                              // }\r\n                              margin=\"normal\"\r\n                              name=\"spouseMiddleInitial\"\r\n                              onBlur={handleBlur}\r\n                              onChange={handleChange}\r\n                              fullWidth\r\n                              value={values.spouseMiddleInitial}\r\n                              variant=\"outlined\"\r\n                            />\r\n\r\n                            <CustomInputTextField\r\n                              attribute=\"Last Name\"\r\n                              is_required={true}\r\n                              // label={\r\n                              //   <CustomLabel\r\n                              //     label=\"Spouse Last Name\"\r\n                              //     required={true}\r\n                              //   />\r\n                              // }\r\n                              margin=\"normal\"\r\n                              name=\"spouseLastName\"\r\n                              onBlur={handleBlur}\r\n                              onChange={handleChange}\r\n                              fullWidth\r\n                              value={values.spouseLastName}\r\n                              variant=\"outlined\"\r\n                              error={Boolean(\r\n                                touched.spouseLastName && errors.spouseLastName\r\n                              )}\r\n                              helperText={\r\n                                touched.spouseLastName && errors.spouseLastName\r\n                              }\r\n                            />\r\n                            <SSN\r\n                              error={Boolean(\r\n                                touched.spouseSsnOrItin &&\r\n                                  errors.spouseSsnOrItin\r\n                              )}\r\n                              fullWidth\r\n                              // label={<CustomLabel label=\"SSN\" required={true} />}\r\n                              margin=\"normal\"\r\n                              name=\"spouseSsnOrItin\"\r\n                              onBlur={handleBlur}\r\n                              onChange={handleChange}\r\n                              value={transform(values.spouseSsnOrItin)}\r\n                              variant=\"outlined\"\r\n                              setFieldValue={setFieldValue}\r\n                              alignLeft={true}\r\n                            />\r\n\r\n                      \r\n                            {/* <CustomInputTextField\r\n                              attribute=\"SSN/ITIN\"\r\n                              is_required={true}\r\n                              // label={\r\n                              //   <CustomLabel\r\n                              //     label=\"Spouse SSN/ITIN\"\r\n                              //     required={true}\r\n                              //   />\r\n                              // }\r\n                              margin=\"normal\"\r\n                              name=\"spouseSsnOrItin\"\r\n                              onBlur={handleBlur}\r\n                              onChange={handleChange}\r\n                              fullWidth\r\n                              value={transform(values.spouseSsnOrItin)}\r\n                              variant=\"outlined\"\r\n                              error={Boolean(\r\n                                touched.spouseSsnOrItin &&\r\n                                  errors.spouseSsnOrItin\r\n                              )}\r\n                              helperText={\r\n                                touched.spouseSsnOrItin &&\r\n                                errors.spouseSsnOrItin\r\n                              }\r\n                            /> */}\r\n\r\n                            <CustomInputTextField\r\n                              attribute=\"Do you want to apply for ITIN?\"\r\n                              is_required={false}\r\n                              // label={\r\n                              //   <CustomLabel\r\n                              //     label=\"Do you want to apply for ITIN?\"\r\n                              //     required={true}\r\n                              //   />\r\n                              // }\r\n                              select\r\n                              margin=\"normal\"\r\n                              name=\"spouseApplyForItin\"\r\n                              onBlur={handleBlur}\r\n                              fullWidth\r\n                              onChange={handleChange}\r\n                              value={values.spouseApplyForItin}\r\n                              variant=\"outlined\"\r\n                              error={Boolean(\r\n                                touched.spouseApplyForItin &&\r\n                                  errors.spouseApplyForItin\r\n                              )}\r\n                              helperText={\r\n                                touched.spouseApplyForItin &&\r\n                                errors.spouseApplyForItin\r\n                              }\r\n                            >\r\n                              <MenuItem value={false}>No</MenuItem>\r\n                              <MenuItem value={true}>Yes</MenuItem>\r\n                            </CustomInputTextField>\r\n                            {values.spouseApplyForItin === true && (\r\n                              <ButtonBase\r\n                                onClick={() =>\r\n                                  handleDownloadTemplate(\"ITIN_Information.xls\")\r\n                                }\r\n                                sx={{\r\n                                  marginTop: \"12px\",\r\n                                  textDecoration: \"underline\",\r\n                                }}\r\n                                disableTouchRipple\r\n                              >\r\n                                Download ITIN Information Excel\r\n                              </ButtonBase>\r\n                            )}\r\n                          </Grid>\r\n                        </Grid>\r\n\r\n                        {/* Right Side - Spouse Contact */}\r\n                        <Grid item lg={6} sm={6} xs={12}>\r\n                          <Typography variant=\"h4\">Spouse Contact</Typography>\r\n                          <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                              <CustomDatePicker\r\n                                name=\"spouseDateOfBirth\"\r\n                                label=\"Date Of Birth\"\r\n                                value={values.spouseDateOfBirth}\r\n                                setFieldValue={setFieldValue}\r\n                              />\r\n                            </Grid>\r\n\r\n                            <CustomInputTextField\r\n                              attribute=\"Gender\"\r\n                              is_required={true}\r\n                              // label={\r\n                              //   <CustomLabel\r\n                              //     label=\"Spouse Gender\"\r\n                              //     required={true}\r\n                              //   />\r\n                              // }\r\n                              select\r\n                              margin=\"normal\"\r\n                              name=\"spouseGender\"\r\n                              onBlur={handleBlur}\r\n                              onChange={handleChange}\r\n                              fullWidth\r\n                              value={values.spouseGender}\r\n                              variant=\"outlined\"\r\n                              error={Boolean(\r\n                                touched.spouseGender && errors.spouseGender\r\n                              )}\r\n                              helperText={\r\n                                touched.spouseGender && errors.spouseGender\r\n                              }\r\n                            >\r\n                              <MenuItem value=\"MALE\">Male</MenuItem>\r\n                              <MenuItem value=\"FEMALE\">Female</MenuItem>\r\n                              <MenuItem value=\"Other\">Other</MenuItem>\r\n                            </CustomInputTextField>\r\n\r\n                            <CustomInputTextField\r\n                              attribute=\"Occupation / Job Title\"\r\n                              is_required={true}\r\n                              // label={\r\n                              //   <CustomLabel\r\n                              //     label=\"Spouse Occupation / Job Title\"\r\n                              //     required={true}\r\n                              //   />\r\n                              // }\r\n                              margin=\"normal\"\r\n                              name=\"spouseOccupation\"\r\n                              onBlur={handleBlur}\r\n                              fullWidth\r\n                              onChange={handleChange}\r\n                              value={values.spouseOccupation}\r\n                              variant=\"outlined\"\r\n                              error={Boolean(\r\n                                touched.spouseOccupation &&\r\n                                  errors.spouseOccupation\r\n                              )}\r\n                              helperText={\r\n                                touched.spouseOccupation &&\r\n                                errors.spouseOccupation\r\n                              }\r\n                            />\r\n\r\n                            <CustomInputTextField\r\n                              attribute=\"Residential Status\"\r\n                              is_required={true}\r\n                              // label={\r\n                              //   <CustomLabel\r\n                              //     label=\"Spouse Residential Status\"\r\n                              //     required={true}\r\n                              //   />\r\n                              // }\r\n                              select\r\n                              margin=\"normal\"\r\n                              name=\"spouseResidentialStatus\"\r\n                              onBlur={handleBlur}\r\n                              fullWidth\r\n                              onChange={handleChange}\r\n                              value={values.spouseResidentialStatus}\r\n                              variant=\"outlined\"\r\n                              error={Boolean(\r\n                                touched.spouseResidentialStatus &&\r\n                                  errors.spouseResidentialStatus\r\n                              )}\r\n                              helperText={\r\n                                touched.spouseResidentialStatus &&\r\n                                errors.spouseResidentialStatus\r\n                              }\r\n                            >\r\n                              {residentialStatus.map((each, id) => (\r\n                                <MenuItem value={each} key={id}>\r\n                                  {each}\r\n                                </MenuItem>\r\n                              ))}\r\n                            </CustomInputTextField>\r\n\r\n                            <CustomInputTextField\r\n                              attribute=\"Email Id\"\r\n                              is_required={true}\r\n                              // label={\r\n                              //   <CustomLabel\r\n                              //     label=\"Spouse Email Id\"\r\n                              //     required={true}\r\n                              //   />\r\n                              // }\r\n                              margin=\"normal\"\r\n                              name=\"spouseEmail\"\r\n                              onBlur={handleBlur}\r\n                              fullWidth\r\n                              onChange={handleChange}\r\n                              value={values.spouseEmail}\r\n                              variant=\"outlined\"\r\n                              error={Boolean(\r\n                                touched.spouseEmail && errors.spouseEmail\r\n                              )}\r\n                              helperText={\r\n                                touched.spouseEmail && errors.spouseEmail\r\n                              }\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                    )}\r\n                    <Grid item xs={12}>\r\n                      <Box\r\n                        sx={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"center\",\r\n                          alignItems: \"center\",\r\n                          margin: { xs: \"8px 0\", sm: \"26px 0 20px\" },\r\n                          position: \"absolute\",\r\n                          bottom: 0,\r\n                          left: \"40%\",\r\n                        }}\r\n                      >\r\n                        <Button\r\n                          type=\"submit\"\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          sx={{ margin: \"0 10px\" }}\r\n                        >\r\n                          SAVE\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          onClick={() => setValue(1)}\r\n                          endIcon={<ArrowForwardIosIcon />}\r\n                          color=\"primary\"\r\n                          sx={{\r\n                            margin: \"0 10px\",\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                          }}\r\n                        >\r\n                          Next\r\n                        </Button>\r\n                      </Box>\r\n                    </Grid>\r\n                  </form>\r\n                )}\r\n              </Formik>\r\n            </Box>\r\n            <DependantDetails\r\n              open={open}\r\n              id={id}\r\n              providedLivingSupport={providedLivingSupport}\r\n              dependantDetails={dependantDetails}\r\n              handleFetchDependantDetails={handleFetchDependantDetails}\r\n              handleDeleteDependant={handleDeleteDependant}\r\n            />\r\n          </Box>\r\n        )}\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FilerDetails;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Container,\r\n  Typography,\r\n  Grid,\r\n  Button,\r\n  CircularProgress,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@mui/material\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport * as Yup from \"yup\"; // Import Yup for validation\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Api from \"../../../components/Api\";\r\nimport { privateApiPOST } from \"../../../components/PrivateRoute\";\r\nimport CustomInputTextField from \"../../../components/CustomInputField\";\r\n\r\nconst customTextStyles = makeStyles((theme) => ({\r\n  tableHeader: {\r\n    fontSize: \"16px\",\r\n    fontWeight: 600,\r\n    lineHeight: \"22px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      // marginBottom: \"8px\",\r\n      display: \"none\",\r\n    },\r\n  },\r\n  tableData: {\r\n    fontSize: \"16px\",\r\n    fontWeight: 400,\r\n    lineHeight: \"23px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  mobileViewTableCellValue: {\r\n    color: \"rgb(71, 71, 71)\",\r\n    fontSize: \"14px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"19px\",\r\n  },\r\n  mobileView: {\r\n    borderRadius: \"4px\",\r\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\r\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\r\n    cursor: \"pointer\",\r\n    border: \"none !important\",\r\n    marginBottom: \"20px\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  mobileViewTableCellHeader: {\r\n    color: \"rgb(245, 166, 35)\",\r\n    fontSize: \"10px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"14px\",\r\n  },\r\n  buttons: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst OtherIncomeDetails = ({\r\n  id,\r\n  otherIncomeDetails,\r\n  handleFetchData,\r\n  handleDelete,\r\n}) => {\r\n  const customStyles = customTextStyles();\r\n  const [isOtherIncomeDetailsLoading, setIsOtherIncomeDetailsLoading] =\r\n    useState(false);\r\n\r\n  const initialValues = {\r\n    type: \"otherIncome\",\r\n    incomeDescription: \"\",\r\n    incomeAmount: \"\",\r\n    addAdditionalInformation: false,\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ marginBottom: \"100px\" }}>\r\n      {!isOtherIncomeDetailsLoading && (\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={Yup.object().shape({\r\n            incomeDescription: Yup.string().when(\"addAdditionalInformation\", {\r\n              is: true,\r\n              then: Yup.string().required(\"Income Description is Required\"),\r\n              otherwise: Yup.string(),\r\n            }),\r\n            incomeAmount: Yup.number().when(\"addAdditionalInformation\", {\r\n              is: true,\r\n              then: Yup.number().required(\"Income Amount is Required\"),\r\n              otherwise: Yup.number(),\r\n            }),\r\n            addAdditionalInformation: Yup.boolean(),\r\n          })}\r\n          onSubmit={(values, { setSubmitting, resetForm }) => {\r\n            setIsOtherIncomeDetailsLoading(true);\r\n            setSubmitting(true);\r\n            let payload = { ...values, id: id };\r\n            privateApiPOST(Api.incomeDetails, payload)\r\n              .then((response) => {\r\n                const { status, data } = response;\r\n                if (status === 200) {\r\n                  console.log(\"data\", data);\r\n                  setIsOtherIncomeDetailsLoading(false);\r\n                  handleFetchData();\r\n                  setSubmitting(false);\r\n                }\r\n              })\r\n              .catch((error) => {\r\n                console.log(\"Error\", error);\r\n                setIsOtherIncomeDetailsLoading(false);\r\n                setSubmitting(false);\r\n              });\r\n          }}\r\n        >\r\n          {({\r\n            values,\r\n            handleBlur,\r\n            handleChange,\r\n            handleSubmit,\r\n            errors,\r\n            touched,\r\n          }) => (\r\n            <Form autoComplete=\"off\" onSubmit={handleSubmit}>\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                sx={{\r\n                  margin: \"30px 0\",\r\n                }}\r\n              >\r\n                <Typography variant=\"h5\">\r\n                  Add other Income Information\r\n                </Typography>\r\n\r\n                <CustomInputTextField\r\n                  error={Boolean(\r\n                    touched.incomeDescription && errors.incomeDescription\r\n                  )}\r\n                  fullWidth\r\n                  helperText={\r\n                    touched.incomeDescription && errors.incomeDescription\r\n                  }\r\n                  attribute=\"Income Description\"\r\n                  margin=\"normal\"\r\n                  name=\"incomeDescription\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.incomeDescription}\r\n                  variant=\"outlined\"\r\n                />\r\n\r\n                <CustomInputTextField\r\n                  error={Boolean(touched.incomeAmount && errors.incomeAmount)}\r\n                  fullWidth\r\n                  helperText={touched.incomeAmount && errors.incomeAmount}\r\n                  attribute=\"Income Amount\"\r\n                  margin=\"normal\"\r\n                  name=\"incomeAmount\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.incomeAmount}\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                />\r\n\r\n                <Grid item xs={12}>\r\n                  <Box\r\n                    sx={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      margin: { xs: \"20px 0\" },\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      name=\"addAdditionalInformation\"\r\n                    >\r\n                      Add Additional Information\r\n                    </Button>\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      )}\r\n      <Box>\r\n        {isOtherIncomeDetailsLoading ? (\r\n          <CircularProgress />\r\n        ) : (\r\n          <TableContainer\r\n            sx={{\r\n              paddingBottom: { xs: \"10px\", sm: \"0px\" },\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"h5\"\r\n              sx={{ textAlign: \"center\", marginTop: \"20px\" }}\r\n            >\r\n              Other Income Details\r\n            </Typography>\r\n            <Table\r\n              sx={{\r\n                borderCollapse: \"collapse\",\r\n              }}\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    Income Description\r\n                  </TableCell>\r\n\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    Income Amount\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    Action\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {otherIncomeDetails.length > 0 &&\r\n                  otherIncomeDetails.map((row, index) => (\r\n                    <TableRow key={index}>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        {row.incomeDescription}\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        {row.incomeAmount}\r\n                      </TableCell>\r\n\r\n                      <TableCell className={customStyles.tableData}>\r\n                        <Button\r\n                          disabled={isOtherIncomeDetailsLoading}\r\n                          startIcon={<DeleteIcon />}\r\n                          size=\"small\"\r\n                          onClick={() => {\r\n                            handleDelete(row.id);\r\n                          }}\r\n                          className={customStyles.buttons}\r\n                        >\r\n                          Delete{\" \"}\r\n                          {isOtherIncomeDetailsLoading && (\r\n                            <CircularProgress sx={{ ml: 1 }} size={14} />\r\n                          )}\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n\r\n            {otherIncomeDetails.length === 0 && (\r\n              <Typography\r\n                variant=\"h5\"\r\n                sx={{ textAlign: \"center\", margin: \"5px 0\" }}\r\n              >\r\n                No Other Incomes Found\r\n              </Typography>\r\n            )}\r\n            <Typography\r\n              variant=\"h5\"\r\n              sx={{\r\n                textAlign: \"center\",\r\n                color: \"red\",\r\n                marginTop: \"20px\",\r\n              }}\r\n            >\r\n              TO MODIFY Other Existing Income Details, DELETE THE SAME and then\r\n              CLICK on \"Add Other Additional Income Information\"\r\n            </Typography>\r\n          </TableContainer>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default OtherIncomeDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Container,\r\n  Typography,\r\n  Grid,\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n  CircularProgress,\r\n  Tooltip,\r\n  ButtonBase,\r\n} from \"@mui/material\";\r\nimport ArrowBackIosIcon from \"@mui/icons-material/ArrowBackIos\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport * as Yup from \"yup\"; // Import Yup for validation\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Api from \"../../../components/Api\";\r\nimport { privateApiPOST } from \"../../../components/PrivateRoute\";\r\nimport CustomInputTextField from \"../../../components/CustomInputField\";\r\nimport OtherIncomeDetails from \"./OtherIncomeDetails\";\r\n\r\nconst IncomeDetails = ({\r\n  open,\r\n  setValue,\r\n  id,\r\n  data,\r\n  handleFetchData,\r\n  handleDownloadTemplate,\r\n}) => {\r\n  const [isIncomeDetailsLoading, setIsIncomeDetailsLoading] = useState(false);\r\n  const [otherIncomeDetails, setotherIncomeDetails] = useState([]);\r\n\r\n  const initialValues = {\r\n    interestIncome: data[\"interestIncome\"],\r\n    dividendIncome: data[\"dividendIncome\"],\r\n    soldStocks: data[\"soldStocks\"],\r\n    soldCrypto: data[\"soldCrypto\"],\r\n    foreignIncome: data[\"foreignIncome\"],\r\n    retirementAccounts: data[\"retirementAccounts\"],\r\n    stateTaxRefund: data[\"stateTaxRefund\"],\r\n    foreignBankAccount: data[\"foreignBankAccount\"],\r\n    foreignAssets: data[\"foreignAssets\"],\r\n    rentalIncome: data[\"rentalIncome\"],\r\n    income1099: data[\"income1099\"],\r\n  };\r\n\r\n  const handleDeleteOtherIncomeDetails = (otherIncomeId) => {\r\n    setIsIncomeDetailsLoading(true);\r\n    let payload = { id: id, otherIncomeId: otherIncomeId, type: \"delete\" };\r\n    privateApiPOST(Api.otherIncomeDetails, payload)\r\n      .then((response) => {\r\n        const { status, data } = response;\r\n        if (status === 200) {\r\n          console.log(\"data\", data);\r\n          setIsIncomeDetailsLoading(false);\r\n          setotherIncomeDetails(data?.data[\"otherIncomeDetails\"]);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n        setIsIncomeDetailsLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleFetchOtherIncomeDetails = () => {\r\n    setIsIncomeDetailsLoading(true);\r\n    let payload = { id: id };\r\n    privateApiPOST(Api.otherIncomeDetails, payload)\r\n      .then((response) => {\r\n        const { status, data } = response;\r\n        if (status === 200) {\r\n          console.log(\"data\", data);\r\n          setIsIncomeDetailsLoading(false);\r\n          setotherIncomeDetails(data?.data[\"otherIncomeDetails\"]);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n        setIsIncomeDetailsLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      handleFetchOtherIncomeDetails();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        padding: \"20px 0 5px\",\r\n        border: { xs: \"none\", sm: \"1px solid #3A97BB\" },\r\n        minHeight: { xs: \"auto\", sm: \"800px\" },\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        {isIncomeDetailsLoading ? (\r\n          <CircularProgress />\r\n        ) : (\r\n          <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={Yup.object().shape({\r\n              interestIncome: Yup.boolean(),\r\n              dividendIncome: Yup.boolean(),\r\n              soldStocks: Yup.boolean(),\r\n              soldCrypto: Yup.boolean(),\r\n              foreignIncome: Yup.boolean(),\r\n              retirementAccounts: Yup.boolean(),\r\n              stateTaxRefund: Yup.boolean(),\r\n              foreignBankAccount: Yup.boolean(),\r\n              foreignAssets: Yup.boolean(),\r\n              rentalIncome: Yup.boolean(),\r\n              income1099: Yup.boolean(),\r\n              incomeDescription: Yup.string().when(\"addAdditionalInformation\", {\r\n                is: true,\r\n                then: Yup.string().required(\"Income Description is Required\"),\r\n                otherwise: Yup.string(),\r\n              }),\r\n              incomeAmount: Yup.number().when(\"addAdditionalInformation\", {\r\n                is: true,\r\n                then: Yup.number().required(\"Income Amount is Required\"),\r\n                otherwise: Yup.number(),\r\n              }),\r\n              addAdditionalInformation: Yup.boolean(),\r\n            })}\r\n            onSubmit={(values, { setSubmitting, resetForm }) => {\r\n              setIsIncomeDetailsLoading(true);\r\n              setSubmitting(true);\r\n              let payload = { ...values, id: id };\r\n              privateApiPOST(Api.incomeDetails, payload)\r\n                .then((response) => {\r\n                  const { status, data } = response;\r\n                  if (status === 200) {\r\n                    console.log(\"data\", data);\r\n                    setIsIncomeDetailsLoading(false);\r\n                    handleFetchData();\r\n                    setSubmitting(false);\r\n                  }\r\n                })\r\n                .catch((error) => {\r\n                  console.log(\"Error\", error);\r\n                  setIsIncomeDetailsLoading(false);\r\n                  setSubmitting(false);\r\n                });\r\n            }}\r\n          >\r\n            {({\r\n              values,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              errors,\r\n              touched,\r\n            }) => (\r\n              <Form autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                <Grid container spacing={2}>\r\n                  {/* Interest Income */}\r\n                  <Grid item sm={12} xs={12}>\r\n                    <FormControl\r\n                      component=\"fieldset\"\r\n                      sx={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                        flexWrap: \"wrap\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <FormLabel\r\n                        sx={{\r\n                          width: \"550px\", // Set the width here\r\n                        }}\r\n                      >\r\n                        Do you have any Interest Income?\r\n                      </FormLabel>\r\n                      <RadioGroup\r\n                        name=\"interestIncome\"\r\n                        value={values.interestIncome}\r\n                        onChange={handleChange}\r\n                        sx={{\r\n                          display: \"flex\",\r\n                          flexDirection: \"row\",\r\n                        }}\r\n                      >\r\n                        <FormControlLabel\r\n                          value={true}\r\n                          control={<Radio />}\r\n                          label=\"Yes\"\r\n                        />\r\n                        <FormControlLabel\r\n                          value={false}\r\n                          control={<Radio />}\r\n                          label=\"No\"\r\n                        />\r\n                      </RadioGroup>\r\n                      <Tooltip\r\n                        title=\"Upload 1099-INT forms and Interest received in Foreign Banks\"\r\n                        placement=\"left-end\"\r\n                      >\r\n                        <Button>Details</Button>\r\n                      </Tooltip>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  {/* Dividend Income */}\r\n                  <Grid item sm={12} xs={12}>\r\n                    <FormControl\r\n                      component=\"fieldset\"\r\n                      sx={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                        flexWrap: \"wrap\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <FormLabel\r\n                        sx={{\r\n                          width: \"550px\", // Set the width here\r\n                        }}\r\n                      >\r\n                        Do you have any Dividend Income?\r\n                      </FormLabel>\r\n                      <RadioGroup\r\n                        name=\"dividendIncome\"\r\n                        value={values.dividendIncome}\r\n                        onChange={handleChange}\r\n                        sx={{\r\n                          display: \"flex\",\r\n                          flexDirection: \"row\",\r\n                        }}\r\n                      >\r\n                        <FormControlLabel\r\n                          value={true}\r\n                          control={<Radio />}\r\n                          label=\"Yes\"\r\n                        />\r\n                        <FormControlLabel\r\n                          value={false}\r\n                          control={<Radio />}\r\n                          label=\"No\"\r\n                        />\r\n                      </RadioGroup>\r\n                      <Tooltip\r\n                        title=\"Upload 1099-DIV forms and dividends received in Foreign Banks\"\r\n                        placement=\"left-end\"\r\n                      >\r\n                        <Button>Details</Button>\r\n                      </Tooltip>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  {/* Sold Stocks */}\r\n                  <Grid item sm={12} xs={12}>\r\n                    <FormControl\r\n                      component=\"fieldset\"\r\n                      sx={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                        flexWrap: \"wrap\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <FormLabel\r\n                        sx={{\r\n                          width: \"550px\", // Set the width here\r\n                        }}\r\n                      >\r\n                        Did you sell any stocks in 2023?\r\n                      </FormLabel>\r\n                      <RadioGroup\r\n                        name=\"soldStocks\"\r\n                        value={values.soldStocks}\r\n                        onChange={handleChange}\r\n                        sx={{\r\n                          display: \"flex\",\r\n                          flexDirection: \"row\",\r\n                        }}\r\n                      >\r\n                        <FormControlLabel\r\n                          value={true}\r\n                          control={<Radio />}\r\n                          label=\"Yes\"\r\n                        />\r\n                        <FormControlLabel\r\n                          value={false}\r\n                          control={<Radio />}\r\n                          label=\"No\"\r\n                        />\r\n                      </RadioGroup>\r\n                      <Tooltip\r\n                        title=\"Upload 1099-B, Gain/Loss statement in excel format. If it is ESPP/RSU stocks, upload adjusted cost basis details as well.\"\r\n                        placement=\"left-end\"\r\n                      >\r\n                        <Button>Details</Button>\r\n                      </Tooltip>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  {/* Sold Crypto */}\r\n                  <Grid item sm={12} xs={12}>\r\n                    <FormControl\r\n                      component=\"fieldset\"\r\n                      sx={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                        flexWrap: \"wrap\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <FormLabel\r\n                        sx={{\r\n                          width: \"550px\", // Set the width here\r\n                        }}\r\n                      >\r\n                        Did you sell any Crypto Currency in 2023?\r\n                      </FormLabel>\r\n                      <RadioGroup\r\n                        name=\"soldCrypto\"\r\n                        value={values.soldCrypto}\r\n                        onChange={handleChange}\r\n                        sx={{\r\n                          display: \"flex\",\r\n                          flexDirection: \"row\",\r\n                        }}\r\n                      >\r\n                        <FormControlLabel\r\n                          value={true}\r\n                          control={<Radio />}\r\n                          label=\"Yes\"\r\n                        />\r\n                        <FormControlLabel\r\n                          value={false}\r\n                          control={<Radio />}\r\n                          label=\"No\"\r\n                        />\r\n                      </RadioGroup>\r\n                      <Tooltip\r\n                        title=\"Download and fill Crypto CSV.\"\r\n                        placement=\"left-end\"\r\n                      >\r\n                        <Button>Details</Button>\r\n                      </Tooltip>\r\n                      {values.soldCrypto ? (\r\n                        <ButtonBase\r\n                          onClick={() =>\r\n                            handleDownloadTemplate(\"Crypto_Information_1.xls\")\r\n                          }\r\n                          sx={{\r\n                            marginTop: \"2px\",\r\n                            textDecoration: \"underline\",\r\n                          }}\r\n                          disableTouchRipple\r\n                        >\r\n                          Download and fill Crypto Excel\r\n                        </ButtonBase>\r\n                      ) : null}\r\n                    </FormControl>\r\n                  </Grid>\r\n                  {/* Foreign Income */}\r\n                  <Grid item sm={12} xs={12}>\r\n                    <FormControl\r\n                      component=\"fieldset\"\r\n                      sx={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                        flexWrap: \"wrap\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <FormLabel\r\n                        sx={{\r\n                          width: \"550px\", // Set the width here\r\n                        }}\r\n                      >\r\n                        Do you have any foreign country income in 2023?\r\n                      </FormLabel>\r\n                      <RadioGroup\r\n                        name=\"foreignIncome\"\r\n                        value={values.foreignIncome}\r\n                        onChange={handleChange}\r\n                        sx={{\r\n                          display: \"flex\",\r\n                          flexDirection: \"row\",\r\n                        }}\r\n                      >\r\n                        <FormControlLabel\r\n                          value={true}\r\n                          control={<Radio />}\r\n                          label=\"Yes\"\r\n                        />\r\n                        <FormControlLabel\r\n                          value={false}\r\n                          control={<Radio />}\r\n                          label=\"No\"\r\n                        />\r\n                      </RadioGroup>\r\n\r\n                      <Tooltip\r\n                        title=\"Upload Total income received in Foreign Country and Total taxes paid in Foreign Country\"\r\n                        placement=\"left-end\"\r\n                      >\r\n                        <Button>Details</Button>\r\n                      </Tooltip>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  {/* Contributions/Distributions */}\r\n                  <Grid item sm={12} xs={12}>\r\n                    <FormControl\r\n                      component=\"fieldset\"\r\n                      sx={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                        flexWrap: \"wrap\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <FormLabel\r\n                        sx={{\r\n                          width: \"550px\", // Set the width here\r\n                        }}\r\n                      >\r\n                        Do you have contributions/distributions to/from\r\n                        retirement accounts in year 2023?\r\n                      </FormLabel>\r\n                      <RadioGroup\r\n                        name=\"retirementAccounts\"\r\n                        value={values.retirementAccounts}\r\n                        onChange={handleChange}\r\n                        sx={{\r\n                          display: \"flex\",\r\n                          flexDirection: \"row\",\r\n                        }}\r\n                      >\r\n                        <FormControlLabel\r\n                          value={true}\r\n                          control={<Radio />}\r\n                          label=\"Yes\"\r\n                        />\r\n                        <FormControlLabel\r\n                          value={false}\r\n                          control={<Radio />}\r\n                          label=\"No\"\r\n                        />\r\n                      </RadioGroup>\r\n                      <Tooltip\r\n                        title=\"401k/IRA etc., which is not mentioned in your W2. Upload Bank Statement 1099 R in Upload Tax Docs section\"\r\n                        placement=\"left-end\"\r\n                      >\r\n                        <Button>Details</Button>\r\n                      </Tooltip>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  {/* State Tax Refund */}\r\n                  <Grid item sm={12} xs={12}>\r\n                    <FormControl\r\n                      component=\"fieldset\"\r\n                      sx={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                        flexWrap: \"wrap\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <FormLabel\r\n                        sx={{\r\n                          width: \"550px\", // Set the width here\r\n                        }}\r\n                      >\r\n                        Did you get State tax refund(s) in 2023?\r\n                      </FormLabel>\r\n                      <RadioGroup\r\n                        name=\"stateTaxRefund\"\r\n                        value={values.stateTaxRefund}\r\n                        onChange={handleChange}\r\n                        sx={{\r\n                          display: \"flex\",\r\n                          flexDirection: \"row\",\r\n                        }}\r\n                      >\r\n                        <FormControlLabel\r\n                          value={true}\r\n                          control={<Radio />}\r\n                          label=\"Yes\"\r\n                        />\r\n                        <FormControlLabel\r\n                          value={false}\r\n                          control={<Radio />}\r\n                          label=\"No\"\r\n                        />\r\n                      </RadioGroup>\r\n                      <Tooltip\r\n                        title=\"If yes, upload 1099 G you might have received from State in Upload Tax Docs section\"\r\n                        placement=\"left-end\"\r\n                      >\r\n                        <Button>Details</Button>\r\n                      </Tooltip>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  {/* Foreign Bank Account */}\r\n                  <Grid item sm={12} xs={12}>\r\n                    <FormControl\r\n                      component=\"fieldset\"\r\n                      sx={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                        flexWrap: \"wrap\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <FormLabel\r\n                        sx={{\r\n                          width: \"550px\", // Set the width here\r\n                        }}\r\n                      >\r\n                        Do you have Account Balance in Foreign banks exceeding\r\n                        more than $10,000?\r\n                      </FormLabel>\r\n                      <RadioGroup\r\n                        name=\"foreignBankAccount\"\r\n                        value={values.foreignBankAccount}\r\n                        onChange={handleChange}\r\n                        sx={{\r\n                          display: \"flex\",\r\n                          flexDirection: \"row\",\r\n                        }}\r\n                      >\r\n                        <FormControlLabel\r\n                          value={true}\r\n                          control={<Radio />}\r\n                          label=\"Yes\"\r\n                        />\r\n                        <FormControlLabel\r\n                          value={false}\r\n                          control={<Radio />}\r\n                          label=\"No\"\r\n                        />\r\n                      </RadioGroup>\r\n                      <Tooltip\r\n                        title=\"As per recent IRS laws, you need to report if the combined investments(stocks/bonds/real estate) of all your foreign accounts exceeds $10,000 on at least 1 day.\r\n                        You do not need to pay any tax on this amount. A separate form need to be sent to IRS\"\r\n                        placement=\"left-end\"\r\n                      >\r\n                        <Button>Details</Button>\r\n                      </Tooltip>\r\n                      {values.foreignBankAccount ? (\r\n                        <ButtonBase\r\n                          onClick={() =>\r\n                            handleDownloadTemplate(\"FBAR_Information_2023.xls\")\r\n                          }\r\n                          sx={{\r\n                            marginTop: \"2px\",\r\n                            textDecoration: \"underline\",\r\n                          }}\r\n                          disableTouchRipple\r\n                        >\r\n                          Download and fill FBAR Excel\r\n                        </ButtonBase>\r\n                      ) : null}\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  {/* Foreign Assets */}\r\n                  <Grid item sm={12} xs={12}>\r\n                    <FormControl\r\n                      component=\"fieldset\"\r\n                      sx={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                        flexWrap: \"wrap\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <FormLabel\r\n                        sx={{\r\n                          width: \"550px\", // Set the width here\r\n                        }}\r\n                      >\r\n                        Do you have Foreign Assets value more than $50,000 at\r\n                        any time during the tax year?\r\n                      </FormLabel>\r\n                      <RadioGroup\r\n                        name=\"foreignAssets\"\r\n                        value={values.foreignAssets}\r\n                        onChange={handleChange}\r\n                        sx={{\r\n                          display: \"flex\",\r\n                          flexDirection: \"row\",\r\n                        }}\r\n                      >\r\n                        <FormControlLabel\r\n                          value={true}\r\n                          control={<Radio />}\r\n                          label=\"Yes\"\r\n                        />\r\n                        <FormControlLabel\r\n                          value={false}\r\n                          control={<Radio />}\r\n                          label=\"No\"\r\n                        />\r\n                      </RadioGroup>\r\n                      <Tooltip\r\n                        title=\"As per recent IRS laws, you need to report if the combined investments(stocks/bonds/Accounts/Partnerships) of all your foreign assets exceeds $50,000 on at least 1 day in year 2023. You do not need to pay any tax on this amount. You need to report these details to avoid penalties.\"\r\n                        placement=\"left-end\"\r\n                      >\r\n                        <Button>Details</Button>\r\n                      </Tooltip>\r\n                      {values.foreignAssets ? (\r\n                        <ButtonBase\r\n                          onClick={() =>\r\n                            handleDownloadTemplate(\r\n                              \"FBAR_Information_2023_1.xls\"\r\n                            )\r\n                          }\r\n                          sx={{\r\n                            marginTop: \"2px\",\r\n                            textDecoration: \"underline\",\r\n                          }}\r\n                          disableTouchRipple\r\n                        >\r\n                          Download and fill FBAR Excel(Financial Assets Tab)\r\n                        </ButtonBase>\r\n                      ) : null}\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  {/* Rental Income */}\r\n                  <Grid item sm={12} xs={12}>\r\n                    <FormControl\r\n                      component=\"fieldset\"\r\n                      sx={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                        flexWrap: \"wrap\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <FormLabel\r\n                        sx={{\r\n                          width: \"550px\", // Set the width here\r\n                        }}\r\n                      >\r\n                        Do you have Rental Income in Foreign Country/USA?\r\n                      </FormLabel>\r\n                      <RadioGroup\r\n                        name=\"rentalIncome\"\r\n                        value={values.rentalIncome}\r\n                        onChange={handleChange}\r\n                        sx={{\r\n                          display: \"flex\",\r\n                          flexDirection: \"row\",\r\n                        }}\r\n                      >\r\n                        <FormControlLabel\r\n                          value={true}\r\n                          control={<Radio />}\r\n                          label=\"Yes\"\r\n                        />\r\n                        <FormControlLabel\r\n                          value={false}\r\n                          control={<Radio />}\r\n                          label=\"No\"\r\n                        />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  {/* 1099-Misc/1099-NEC Income */}\r\n                  <Grid item sm={12} xs={12}>\r\n                    <FormControl\r\n                      component=\"fieldset\"\r\n                      sx={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                        flexWrap: \"wrap\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <FormLabel\r\n                        sx={{\r\n                          width: \"550px\", // Set the width here\r\n                        }}\r\n                      >\r\n                        Do you have 1099-Misc/1099-NEC Income in year 2023?\r\n                      </FormLabel>\r\n                      <RadioGroup\r\n                        name=\"income1099\"\r\n                        value={values.income1099}\r\n                        onChange={handleChange}\r\n                        sx={{\r\n                          display: \"flex\",\r\n                          flexDirection: \"row\",\r\n                        }}\r\n                      >\r\n                        <FormControlLabel\r\n                          value={true}\r\n                          control={<Radio />}\r\n                          label=\"Yes\"\r\n                        />\r\n                        <FormControlLabel\r\n                          value={false}\r\n                          control={<Radio />}\r\n                          label=\"No\"\r\n                        />\r\n                      </RadioGroup>\r\n                      <Tooltip\r\n                        title=\"Upload 1099 Misc / 1099 NEC\"\r\n                        placement=\"left-end\"\r\n                      >\r\n                        <Button>Details</Button>\r\n                      </Tooltip>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <Box\r\n                      sx={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        margin: { xs: \"8px 0\", sm: \"26px 0 20px\" },\r\n                        position: \"absolute\",\r\n                        bottom: \"6%\",\r\n                        left: \"45%\",\r\n                      }}\r\n                    >\r\n                      <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                        Save\r\n                      </Button>\r\n                    </Box>\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        )}\r\n        <OtherIncomeDetails\r\n          id={id}\r\n          otherIncomeDetails={otherIncomeDetails}\r\n          handleFetchData={handleFetchOtherIncomeDetails}\r\n          handleDelete={handleDeleteOtherIncomeDetails}\r\n        />\r\n        <Grid item xs={12}>\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              margin: { xs: \"8px 0\", sm: \"26px 0 20px\" },\r\n            }}\r\n          >\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={() => setValue(0)}\r\n              startIcon={<ArrowBackIosIcon />}\r\n              color=\"primary\"\r\n              sx={{ margin: \"0 10px\", display: \"flex\", alignItems: \"center\" }}\r\n            >\r\n              Back\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={() => setValue(2)}\r\n              endIcon={<ArrowForwardIosIcon />}\r\n              color=\"primary\"\r\n              sx={{ margin: \"0 10px\", display: \"flex\", alignItems: \"center\" }}\r\n            >\r\n              Next\r\n            </Button>\r\n          </Box>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default IncomeDetails;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Container,\r\n  Typography,\r\n  Grid,\r\n  TextField,\r\n  MenuItem,\r\n  Button,\r\n  CircularProgress,\r\n  FormControl,\r\n} from \"@mui/material\";\r\nimport ArrowBackIosIcon from \"@mui/icons-material/ArrowBackIos\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\"; // Import Yup for validation\r\nimport Api from \"../../../components/Api\";\r\nimport { privateApiPOST } from \"../../../components/PrivateRoute\";\r\nimport CustomInputTextField from \"../../../components/CustomInputField\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  bankingType: Yup.string().required(\"Banking Type is required\"),\r\n  bankName: Yup.string().when(\"bankingType\", {\r\n    is: \"PAPER CHECK\",\r\n    then: Yup.string(),\r\n    otherwise: Yup.string().required(\"Bank Name is required\"),\r\n  }),\r\n  accountHolderName: Yup.string().when(\"bankingType\", {\r\n    is: \"PAPER CHECK\",\r\n    then: Yup.string(),\r\n    otherwise: Yup.string().required(\"Account Holder Name is required\"),\r\n  }),\r\n  ownership: Yup.string().when(\"bankingType\", {\r\n    is: \"PAPER CHECK\",\r\n    then: Yup.string(),\r\n    otherwise: Yup.string().required(\"Ownership is required\"),\r\n  }),\r\n  routingNumber: Yup.string().when(\"bankingType\", {\r\n    is: \"PAPER CHECK\",\r\n    then: Yup.string(),\r\n    otherwise: Yup.string()\r\n      .matches(/^\\d{9}$/, \"Routing Number must be a valid 9-digit number\")\r\n      .required(\"Routing Number is required\"),\r\n  }),\r\n  confirmRoutingNumber: Yup.string().when(\"bankingType\", {\r\n    is: \"PAPER CHECK\",\r\n    then: Yup.string(),\r\n    otherwise: Yup.string()\r\n      .required(\"Confirm Routing Number is required\")\r\n      .oneOf([Yup.ref(\"routingNumber\"), null], \"Routing Numbers must match\"),\r\n  }),\r\n  accountNumber: Yup.string().when(\"bankingType\", {\r\n    is: \"PAPER CHECK\",\r\n    then: Yup.string(),\r\n    otherwise: Yup.string().required(\"Account Number is required\"),\r\n  }),\r\n  confirmAccountNumber: Yup.string().when(\"bankingType\", {\r\n    is: \"PAPER CHECK\",\r\n    then: Yup.string(),\r\n    otherwise: Yup.string()\r\n      .required(\"Confirm Account Number is required\")\r\n      .oneOf([Yup.ref(\"accountNumber\"), null], \"Account Numbers must match\"),\r\n  }),\r\n  accountType: Yup.string().when(\"bankingType\", {\r\n    is: \"PAPER CHECK\",\r\n    then: Yup.string(),\r\n    otherwise: Yup.string().required(\"Account Type is required\"),\r\n  }),\r\n  confirmAccountType: Yup.string().when(\"bankingType\", {\r\n    is: \"PAPER CHECK\",\r\n    then: Yup.string(),\r\n    otherwise: Yup.string()\r\n      .required(\"Confirm Account Type is required\")\r\n      .oneOf([Yup.ref(\"accountType\"), null], \"Account Types must match\"),\r\n  }),\r\n});\r\n\r\nconst BankDetails = ({ open, setValue, id, data, handleFetchData }) => {\r\n  const [isBankDetailsLoading, setIsBankDetailsLoading] = useState(false);\r\n\r\n  const initialValues = {\r\n    bankingType: data[\"bankingType\"],\r\n    bankName: data[\"bankName\"],\r\n    accountHolderName: data[\"accountHolderName\"],\r\n    ownership: data[\"ownership\"],\r\n    routingNumber: data[\"routingNumber\"],\r\n    confirmRoutingNumber: data[\"confirmRoutingNumber\"],\r\n    accountNumber: data[\"accountNumber\"],\r\n    confirmAccountNumber: data[\"confirmAccountNumber\"],\r\n    accountType: data[\"accountType\"],\r\n    confirmAccountType: data[\"confirmAccountType\"],\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        padding: \"20px 0 5px\",\r\n        border: { xs: \"none\", sm: \"1px solid #3A97BB\" },\r\n        minHeight: { xs: \"auto\", sm: \"800px\" },\r\n      }}\r\n    >\r\n      {\" \"}\r\n      <Container maxWidth=\"lg\">\r\n        {isBankDetailsLoading ? (\r\n          <CircularProgress />\r\n        ) : (\r\n          <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={(values, { setSubmitting, resetForm }) => {\r\n              setIsBankDetailsLoading(true);\r\n              setSubmitting(true);\r\n              let payload = { ...values, id: id };\r\n              privateApiPOST(Api.bankDetails, payload)\r\n                .then((response) => {\r\n                  const { status, data } = response;\r\n                  if (status === 200) {\r\n                    console.log(\"data\", data);\r\n                    setIsBankDetailsLoading(false);\r\n                    handleFetchData();\r\n                    setSubmitting(false);\r\n                  }\r\n                })\r\n                .catch((error) => {\r\n                  console.log(\"Error\", error);\r\n                  setIsBankDetailsLoading(false);\r\n                  setSubmitting(false);\r\n                });\r\n            }}\r\n          >\r\n            {({ values, handleChange, errors, touched, handleBlur }) => (\r\n              <Form>\r\n                <Grid container spacing={2} sx={{ marginLeft: \"0px\" }}>\r\n                  <Box\r\n                    width=\"98%\"\r\n                    align=\"left\"\r\n                    sx={{\r\n                      border: \"1px solid #000000\",\r\n                      padding: \"20px\",\r\n                      marginBottom: \"20px\",\r\n                      backgroundColor: \"#f7f7f7\",\r\n                    }}\r\n                  >\r\n                    <fieldset>\r\n                      <legend>Bank Details</legend>\r\n                      <br />\r\n                      <Typography\r\n                        color=\"brown\"\r\n                        variant=\"h4\"\r\n                        sx={{ marginTop: \"10px\" }}\r\n                      >\r\n                        <b>Important Note</b>\r\n                      </Typography>\r\n                      <Typography\r\n                        align=\"justify\"\r\n                        sx={{ marginTop: \"5px\", wordSpacing: \"3px\" }}\r\n                      >\r\n                        The IRS and certain State Revenue Departments facilitate\r\n                        DIRECT DEPOSIT / WITHDRAWAL of Tax Refund or Tax Dues on\r\n                        the Tax Returns. If you are interested in availing this\r\n                        option, we request you to kindly input the following\r\n                        details. You may also provide multiple bank accounts for\r\n                        IRS to direct deposit your Tax Refund in different\r\n                        accounts.\r\n                      </Typography>\r\n                      <br />\r\n                      <br />\r\n                    </fieldset>\r\n                  </Box>\r\n                  <Grid\r\n                    container\r\n                    sx={{ marginBottom: \"30px\", marginTop: \"30px\" }}\r\n                  >\r\n                    <Grid\r\n                      item\r\n                      xs={10}\r\n                      sm={4}\r\n                      style={{ display: \"flex\", alignItems: \"center\" }}\r\n                    >\r\n                      <Typography variant=\"body1\">\r\n                        I prefer to receive my tax refunds by way of\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={2} sm={4}>\r\n                      <select\r\n                        id=\"bankingType\"\r\n                        name=\"bankingType\"\r\n                        value={values.bankingType}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        style={{ width: \"100%\" }}\r\n                      >\r\n                        <option value=\"\">Select Option</option>\r\n                        <option value=\"DIRECT DEPOSIT INTO MY BANK ACCOUNT\">\r\n                          Direct deposit into my bank account\r\n                        </option>\r\n                        <option value=\"PAPER CHECK\">Paper Check</option>\r\n                      </select>\r\n                      {touched.bankingType && errors.bankingType && (\r\n                        <div className=\"error\">{errors.bankingType}</div>\r\n                      )}\r\n                    </Grid>\r\n                    <Grid>\r\n                      {\" \"}\r\n                      <Typography\r\n                        variant=\"h5\"\r\n                        sx={{ marginTop: \"30px\", marginLeft: \"15px\" }}\r\n                      >\r\n                        Bank Account Information\r\n                      </Typography>\r\n                      <Typography\r\n                        sx={{\r\n                          marginTop: \"30px\",\r\n                          marginLeft: \"15px\",\r\n                          color: \"#11a63d\",\r\n                        }}\r\n                      >\r\n                        Note: Please understand that there is no risk by\r\n                        entering Bank Account and Routing Numbers\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n                {/* Additional Fields for Direct Deposit */}\r\n\r\n                <Grid>\r\n                  <Grid\r\n                    container\r\n                    spacing={2}\r\n                    sx={{\r\n                      border: \"1px solid #000000\",\r\n                      padding: \"20px\",\r\n                      marginBottom: \"20px\",\r\n                      backgroundColor: \"#C7DFF0\",\r\n                    }}\r\n                  >\r\n                    <Grid item lg={6} sm={6} xs={12}>\r\n                      <CustomInputTextField\r\n                        attribute=\"Bank Name\"\r\n                        is_required={false}\r\n                        margin=\"normal\"\r\n                        name=\"bankName\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        fullWidth\r\n                        value={values.bankName}\r\n                        variant=\"outlined\"\r\n                        disabled={values.bankingType === \"PAPER CHECK\"}\r\n                        error={Boolean(touched.bankName && errors.bankName)}\r\n                        helperText={touched.bankName && errors.bankName}\r\n                      />\r\n                      <CustomInputTextField\r\n                        attribute=\"Account Number\"\r\n                        is_required={false}\r\n                        margin=\"normal\"\r\n                        name=\"accountNumber\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        fullWidth\r\n                        value={values.accountNumber}\r\n                        variant=\"outlined\"\r\n                        disabled={values.bankingType === \"PAPER CHECK\"}\r\n                        error={Boolean(\r\n                          touched.accountNumber && errors.accountNumber\r\n                        )}\r\n                        helperText={\r\n                          touched.accountNumber && errors.accountNumber\r\n                        }\r\n                      />\r\n\r\n                      <CustomInputTextField\r\n                        attribute=\"Routing Number\"\r\n                        is_required={false}\r\n                        margin=\"normal\"\r\n                        name=\"routingNumber\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        fullWidth\r\n                        value={values.routingNumber}\r\n                        variant=\"outlined\"\r\n                        disabled={values.bankingType === \"PAPER CHECK\"}\r\n                        error={Boolean(\r\n                          touched.routingNumber && errors.routingNumber\r\n                        )}\r\n                        helperText={\r\n                          touched.routingNumber && errors.routingNumber\r\n                        }\r\n                      />\r\n                      <CustomInputTextField\r\n                        attribute=\"Account Type\"\r\n                        is_required={false}\r\n                        margin=\"normal\"\r\n                        name=\"accountType\"\r\n                        select\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        fullWidth\r\n                        value={values.accountType}\r\n                        variant=\"outlined\"\r\n                        disabled={values.bankingType === \"PAPER CHECK\"}\r\n                        error={Boolean(\r\n                          touched.accountType && errors.accountType\r\n                        )}\r\n                        helperText={touched.accountType && errors.accountType}\r\n                      >\r\n                        <MenuItem value=\"SAVINGS\">Savings</MenuItem>\r\n                        <MenuItem value=\"CHECKING\">Checking</MenuItem>\r\n                      </CustomInputTextField>\r\n                      <CustomInputTextField\r\n                        attribute=\"Ownership\"\r\n                        is_required={false}\r\n                        margin=\"normal\"\r\n                        name=\"ownership\"\r\n                        select\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        fullWidth\r\n                        value={values.ownership}\r\n                        variant=\"outlined\"\r\n                        disabled={values.bankingType === \"PAPER CHECK\"}\r\n                        error={Boolean(touched.ownership && errors.ownership)}\r\n                        helperText={touched.ownership && errors.ownership}\r\n                      >\r\n                        <MenuItem value=\"TAXPAYER\">Tax Payer</MenuItem>\r\n                        <MenuItem value=\"SPOUSE\">Spouse</MenuItem>\r\n                        <MenuItem value=\"JOINT\">Joint</MenuItem>\r\n                      </CustomInputTextField>\r\n                    </Grid>\r\n                    <Grid item lg={6} sm={6} xs={12}>\r\n                      <CustomInputTextField\r\n                        attribute=\"Account Holder Name\"\r\n                        is_required={false}\r\n                        margin=\"normal\"\r\n                        name=\"accountHolderName\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        fullWidth\r\n                        value={values.accountHolderName}\r\n                        variant=\"outlined\"\r\n                        disabled={values.bankingType === \"PAPER CHECK\"}\r\n                        error={Boolean(\r\n                          touched.accountHolderName && errors.accountHolderName\r\n                        )}\r\n                        helperText={\r\n                          touched.accountHolderName && errors.accountHolderName\r\n                        }\r\n                      />\r\n\r\n                      <CustomInputTextField\r\n                        attribute=\"Confirm Account Number\"\r\n                        is_required={false}\r\n                        margin=\"normal\"\r\n                        name=\"confirmAccountNumber\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        fullWidth\r\n                        value={values.confirmAccountNumber}\r\n                        variant=\"outlined\"\r\n                        disabled={values.bankingType === \"PAPER CHECK\"}\r\n                        error={Boolean(\r\n                          touched.confirmAccountNumber &&\r\n                            errors.confirmAccountNumber\r\n                        )}\r\n                        helperText={\r\n                          touched.confirmAccountNumber &&\r\n                          errors.confirmAccountNumber\r\n                        }\r\n                      />\r\n                      <CustomInputTextField\r\n                        attribute=\"Confirm Routing Number\"\r\n                        is_required={false}\r\n                        margin=\"normal\"\r\n                        name=\"confirmRoutingNumber\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        fullWidth\r\n                        value={values.confirmRoutingNumber}\r\n                        variant=\"outlined\"\r\n                        disabled={values.bankingType === \"PAPER CHECK\"}\r\n                        error={Boolean(\r\n                          touched.confirmRoutingNumber &&\r\n                            errors.confirmRoutingNumber\r\n                        )}\r\n                        helperText={\r\n                          touched.confirmRoutingNumber &&\r\n                          errors.confirmRoutingNumber\r\n                        }\r\n                      />\r\n                      <CustomInputTextField\r\n                        attribute=\"Confirm Account Type\"\r\n                        is_required={false}\r\n                        margin=\"normal\"\r\n                        name=\"confirmAccountType\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        select\r\n                        fullWidth\r\n                        value={values.confirmAccountType}\r\n                        variant=\"outlined\"\r\n                        disabled={values.bankingType === \"PAPER CHECK\"}\r\n                        error={Boolean(\r\n                          touched.confirmAccountType &&\r\n                            errors.confirmAccountType\r\n                        )}\r\n                        helperText={\r\n                          touched.confirmAccountType &&\r\n                          errors.confirmAccountType\r\n                        }\r\n                      >\r\n                        <MenuItem value=\"SAVINGS\">Savings</MenuItem>\r\n                        <MenuItem value=\"CHECKING\">Checking</MenuItem>\r\n                      </CustomInputTextField>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    paddingBottom: { xs: \"20px\" },\r\n                    marginTop: { xs: \"20px\" },\r\n                  }}\r\n                >\r\n                  <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                    Save\r\n                  </Button>\r\n                </Box>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        )}\r\n        <Grid item xs={12}>\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              margin: { xs: \"8px 0\", sm: \"26px 0 20px\" },\r\n            }}\r\n          >\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={() => setValue(1)}\r\n              startIcon={<ArrowBackIosIcon />}\r\n              color=\"primary\"\r\n              sx={{ margin: \"0 10px\", display: \"flex\", alignItems: \"center\" }}\r\n            >\r\n              Back\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={() => setValue(3)}\r\n              endIcon={<ArrowForwardIosIcon />}\r\n              color=\"primary\"\r\n              sx={{ margin: \"0 10px\", display: \"flex\", alignItems: \"center\" }}\r\n            >\r\n              Next\r\n            </Button>\r\n          </Box>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BankDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Link,\r\n  Avatar,\r\n  Typography,\r\n  Button,\r\n  Container,\r\n  Card,\r\n  CardContent,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableHead,\r\n  TableCell,\r\n  TextField,\r\n  Radio,\r\n  RadioGroup,\r\n  FormLabel,\r\n  FormControlLabel,\r\n  FormControl,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\r\nimport { GetApp, CloudUpload, FilterAltOffSharp } from \"@mui/icons-material\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport Api from \"../../../components/Api\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  privateApiGET,\r\n  privateApiPOST,\r\n} from \"../../../components/PrivateRoute\";\r\nimport CustomAlert from \"../../../components/CustomAlert\";\r\n\r\nexport const customTextStyles = makeStyles((theme) => ({\r\n  tableHeader: {\r\n    fontSize: \"16px\",\r\n    fontWeight: 600,\r\n    lineHeight: \"22px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  tableData: {\r\n    fontSize: \"16px\",\r\n    fontWeight: 400,\r\n    lineHeight: \"23px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      // marginBottom: \"8px\",\r\n      display: \"none\",\r\n    },\r\n  },\r\n  headerText: {\r\n    fontSize: \"24px\",\r\n    fontWeight: \"600\",\r\n    marginTop: \"32px\",\r\n    marginBottom: \"16px\",\r\n    color: \"#2069DB\",\r\n  },\r\n  confirmButton: {\r\n    fontSize: \"14px\",\r\n    fontWeight: \"600\",\r\n    lineHeight: \"19px\",\r\n    color: \"#FFFFFF\",\r\n    padding: \"10px 40px 9px\",\r\n    marginBottom: \"4px\",\r\n  },\r\n  mobileViewTableCellValue: {\r\n    color: \"rgb(71, 71, 71)\",\r\n    fontSize: \"14px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"19px\",\r\n  },\r\n  mobileView: {\r\n    borderRadius: \"4px\",\r\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\r\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\r\n    cursor: \"pointer\",\r\n    border: \"none !important\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  mobileViewTableCellHeader: {\r\n    color: \"rgb(245, 166, 35)\",\r\n    fontSize: \"10px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"14px\",\r\n  },\r\n}));\r\n\r\nconst TaxReturns = ({ open, setValue }) => {\r\n  const customStyles = customTextStyles();\r\n  const params = useParams();\r\n  const [showAlert, setShowAlert] = useState({\r\n    isAlert: false,\r\n    alertTitle: \"\",\r\n    alertText: \"\",\r\n    severity: \"\",\r\n  });\r\n  const role = useSelector((state) => state.app.role);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [state, setState] = useState({\r\n    isImport: false,\r\n    isImpoFormSubmitting: false,\r\n    selectedFile: {},\r\n    remarks: \"\",\r\n    isMyTaxDocsLoading: false,\r\n    myTaxDocs: [],\r\n  });\r\n\r\n  const handleDownloadFile = (file) => {\r\n    setIsLoading(true);\r\n\r\n    let payload = {\r\n      file_name: file,\r\n      id: params.id,\r\n      type: \"returns\",\r\n    };\r\n\r\n    privateApiPOST(Api.downloadTaxDocsFile, payload, { responseType: \"blob\" })\r\n      .then((res) => {\r\n        const { status, data } = res;\r\n        if (status === 200) {\r\n          setIsLoading(false);\r\n          const url = window.URL.createObjectURL(new Blob([data]));\r\n          const anchor = document.createElement(\"a\");\r\n          anchor.href = url;\r\n          anchor.setAttribute(\"download\", file);\r\n          document.body.appendChild(anchor);\r\n          anchor.click();\r\n        } else {\r\n          setIsLoading(false);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"handleDownloadFile--->\", err);\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleDeleteFile = (id, file) => {\r\n    setIsLoading(true);\r\n\r\n    let payload = {\r\n      file_id: id,\r\n      file_name: file,\r\n      id: params.id,\r\n      type: \"returns\",\r\n    };\r\n\r\n    privateApiPOST(Api.deleteTaxDocsFile, payload)\r\n      .then((res) => {\r\n        const { status, data } = res;\r\n        if (status === 200) {\r\n          setShowAlert({\r\n            isAlert: true,\r\n            severity: \"success\",\r\n            alertText: data?.[\"message\"],\r\n          });\r\n          setIsLoading(false);\r\n          handleFetchMyTaxDocs();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"handleDeleteFile--->\", err);\r\n        setShowAlert({\r\n          isAlert: true,\r\n          severity: \"error\",\r\n          alertText: data?.[\"message\"],\r\n        });\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  //CLICK - Upload input file\r\n  const handleUploadClick = (e) => {\r\n    let file = e.target.files[0];\r\n    if (file) {\r\n      setState((prev) => ({\r\n        ...prev,\r\n        selectedFile: file,\r\n      }));\r\n    }\r\n  };\r\n\r\n  //SUBMIT - Import form\r\n  const handleUploadTaxDocs = () => {\r\n    if (!state.selectedFile.name) {\r\n      setShowAlert({\r\n        isAlert: true,\r\n        severity: \"warning\",\r\n        alertText: \"Please choose file to import\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    setState((prev) => ({\r\n      ...prev,\r\n      isImpoFormSubmitting: true,\r\n    }));\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"upload\", state.selectedFile);\r\n    formData.append(\"id\", params.id);\r\n    formData.append(\"type\", \"returns\");\r\n    formData.append(\"remarks\", state.remarks);\r\n\r\n    const token = sessionStorage.getItem(\"token\");\r\n    axios\r\n      .post(Api.uploadTaxDocs, formData, {\r\n        headers: {\r\n          \"content-type\": \"multipart/form-data\",\r\n          Authorization: `Token ${token}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        const { status, data } = res;\r\n        if (status === 200) {\r\n          setShowAlert({\r\n            isAlert: true,\r\n            severity: \"success\",\r\n            alertText: data?.[\"message\"],\r\n          });\r\n          setState((prev) => ({\r\n            ...prev,\r\n            selectedFile: {},\r\n            isImpoFormSubmitting: false,\r\n            isImport: false,\r\n            remarks: \"\",\r\n          }));\r\n          handleFetchMyTaxDocs();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"handleUploadTaxDocs--->\", error);\r\n        const { data } = error.response;\r\n        setShowAlert({\r\n          isAlert: true,\r\n          severity: \"error\",\r\n          alertText: data?.[\"message\"],\r\n        });\r\n\r\n        setState((prev) => ({\r\n          ...prev,\r\n          selectedFile: {},\r\n          isImpoFormSubmitting: false,\r\n          isImport: false,\r\n          remarks: \"\",\r\n        }));\r\n      });\r\n  };\r\n\r\n  const handleFetchMyTaxDocs = () => {\r\n    setState((prev) => ({ ...prev, isMyTaxDocsLoading: true }));\r\n    let payload = { id: params.id, type: \"returns\" };\r\n    privateApiPOST(Api.uploadTaxDocs, payload)\r\n      .then((response) => {\r\n        const { status, data } = response;\r\n        if (status === 200) {\r\n          console.log(\"data\", data);\r\n          setState((prev) => ({\r\n            ...prev,\r\n            isMyTaxDocsLoading: false,\r\n            myTaxDocs: data?.data,\r\n          }));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n        setState((prev) => ({ ...prev, isMyTaxDocsLoading: false }));\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      handleFetchMyTaxDocs();\r\n    }\r\n  }, []);\r\n  return (\r\n    <Box\r\n      sx={{\r\n        padding: \"20px 0 5px\",\r\n        border: { xs: \"none\", sm: \"1px solid #3A97BB\" },\r\n      }}\r\n    >\r\n      {showAlert.isAlert && (\r\n        <CustomAlert\r\n          open={showAlert.isAlert}\r\n          severity={showAlert.severity}\r\n          alertTitle={showAlert.alertTitle}\r\n          alertText={showAlert.alertText}\r\n          onClose={() =>\r\n            setShowAlert({\r\n              isAlert: false,\r\n              alertTitle: \"\",\r\n              alertText: \"\",\r\n              severity: \"\",\r\n            })\r\n          }\r\n        />\r\n      )}\r\n      <Container maxWidth=\"lg\">\r\n        {role === \"ADMIN\" ? (\r\n          <Box\r\n            sx={{\r\n              // padding: \"20px 0 5px\",\r\n              // border: { xs: \"none\", sm: \"1px solid #3A97BB\" },\r\n              minHeight: { xs: \"auto\", sm: \"400px\" },\r\n            }}\r\n          >\r\n            <Typography variant=\"h4\" sx={{ marginLeft: \"10px\" }}>\r\n              Attach Client Tax Returns:\r\n            </Typography>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                margin: \"20px 0\",\r\n              }}\r\n            >\r\n              <Typography sx={{ marginRight: \"24px\" }}>Upload File</Typography>\r\n              <Box sx={{ marginRight: \"20px\" }}>\r\n                <input\r\n                  required\r\n                  id=\"import-file-button\"\r\n                  type=\"file\"\r\n                  onChange={handleUploadClick}\r\n                  accept=\".xlsx\"\r\n                  style={{ opacity: 0, visibility: \"hidden\", width: \"1px\" }}\r\n                />\r\n                <label htmlFor=\"import-file-button\">\r\n                  <Button\r\n                    startIcon={<CloudUploadIcon />}\r\n                    component=\"span\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Choose File\r\n                  </Button>\r\n                </label>\r\n                <Typography sx={{ marginTop: \"8px\", fontStyle: \"italic\" }}>\r\n                  {state.selectedFile.name}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                margin: \"20px 0\",\r\n              }}\r\n            >\r\n              <Typography sx={{ marginRight: \"24px\" }}>Remarks</Typography>\r\n              <TextField\r\n                size=\"large\"\r\n                name=\"remarks\"\r\n                value={state.remarks}\r\n                onChange={(e) =>\r\n                  setState((prev) => ({ ...prev, remarks: e.target.value }))\r\n                }\r\n              />\r\n            </Box>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                margin: \"20px 0\",\r\n              }}\r\n            >\r\n              <Button\r\n                onClick={handleUploadTaxDocs}\r\n                sx={{ marginBottom: \"10px\" }}\r\n              >\r\n                Upload Tax Returns\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        ) : null}\r\n        <Box\r\n          sx={{\r\n            minHeight: { xs: \"auto\", sm: role === \"ADMIN\" ? \"400px\" : \"800px\" },\r\n          }}\r\n        >\r\n          <TableContainer sx={{ marginTop: \"32px\" }}>\r\n            <Typography variant=\"h4\" sx={{ marginLeft: \"10px\" }}>\r\n              Tax Return Document List:\r\n            </Typography>\r\n            <Table\r\n              sx={{\r\n                borderCollapse: \"collapse\",\r\n                marginTop: \"30px\",\r\n              }}\r\n              aria-label=\"Place Order Series Table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className={customStyles.tableHeader}>ID</TableCell>\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    Document Name\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    uploaded on\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    Remarks\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    Actions\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {state.myTaxDocs.length > 0 &&\r\n                  state.myTaxDocs.map((row, index) => (\r\n                    <TableRow key={index}>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        {row.id}\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        {row.file_name.replace(/^[^_]*_([^_]*_)/, \"\")}\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        {row.upload_time}\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        {row.remarks}\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.buttons}>\r\n                        <Box\r\n                          sx={{\r\n                            display: \"flex\",\r\n                            flexWrap: \"wrap\",\r\n                            justifyContent: \"space-between\",\r\n                          }}\r\n                        >\r\n                          <Button\r\n                            disabled={isLoading}\r\n                            startIcon={<GetApp />}\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            onClick={() => {\r\n                              handleDownloadFile(row.file_name);\r\n                            }}\r\n                          >\r\n                            Download{\" \"}\r\n                          </Button>\r\n                          <Button\r\n                            disabled={isLoading}\r\n                            startIcon={<DeleteIcon />}\r\n                            size=\"small\"\r\n                            onClick={() => {\r\n                              handleDeleteFile(row.id, row.file_name);\r\n                            }}\r\n                            sx={{\r\n                              display: role === \"ADMIN\" ? \"flex\" : \"none\",\r\n                            }}\r\n                          >\r\n                            Delete{\" \"}\r\n                          </Button>\r\n                        </Box>\r\n                      </TableCell>\r\n\r\n                      <TableCell className={customStyles.mobileView}>\r\n                        <Box\r\n                          sx={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            marginTop: \"16px\",\r\n                          }}\r\n                        >\r\n                          <Box sx={{ marginTop: \"3px\" }}>\r\n                            <Typography\r\n                              className={customStyles.mobileViewTableCellHeader}\r\n                            >\r\n                              File Name\r\n                            </Typography>\r\n\r\n                            <Typography\r\n                              className={customStyles.mobileViewTableCellValue}\r\n                            >\r\n                              {row.file_name.replace(/^[^_]*_([^_]*_)/, \"\")}\r\n                            </Typography>\r\n                          </Box>\r\n                          <Box sx={{ marginTop: \"3px\" }}>\r\n                            <Typography\r\n                              className={customStyles.mobileViewTableCellHeader}\r\n                            >\r\n                              Upload Time\r\n                            </Typography>\r\n\r\n                            <Typography\r\n                              className={customStyles.mobileViewTableCellValue}\r\n                            >\r\n                              {row.upload_time}\r\n                            </Typography>\r\n                          </Box>\r\n\r\n                          <Box sx={{ marginTop: \"3px\" }}>\r\n                            <Typography\r\n                              className={customStyles.mobileViewTableCellHeader}\r\n                            >\r\n                              Remarks\r\n                            </Typography>\r\n\r\n                            <Typography\r\n                              className={customStyles.mobileViewTableCellValue}\r\n                            >\r\n                              {row.remarks}\r\n                            </Typography>\r\n                          </Box>\r\n\r\n                          <Box\r\n                            sx={{\r\n                              display: \"flex\",\r\n                              flexWrap: \"wrap\",\r\n                              justifyContent: \"space-between\",\r\n                              marginTop: \"16px\",\r\n                            }}\r\n                          >\r\n                            <Button\r\n                              disabled={isLoading}\r\n                              startIcon={<GetApp />}\r\n                              size=\"small\"\r\n                              variant=\"outlined\"\r\n                              onClick={() => {\r\n                                handleDownloadFile(row.file_name);\r\n                              }}\r\n                            >\r\n                              Download{\" \"}\r\n                              {isLoading && (\r\n                                <CircularProgress sx={{ ml: 1 }} size={14} />\r\n                              )}\r\n                            </Button>\r\n                            <Button\r\n                              disabled={isLoading}\r\n                              startIcon={<DeleteIcon />}\r\n                              size=\"small\"\r\n                              onClick={() => {\r\n                                handleDeleteFile(row.file_name);\r\n                              }}\r\n                              sx={{\r\n                                display: role === \"ADMIN\" ? \"flex\" : \"none\",\r\n                              }}\r\n                            >\r\n                              Delete{\" \"}\r\n                              {isLoading && (\r\n                                <CircularProgress sx={{ ml: 1 }} size={14} />\r\n                              )}\r\n                            </Button>\r\n                          </Box>\r\n                        </Box>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n            {state.myTaxDocs.length === 0 && (\r\n              <Typography\r\n                variant=\"h5\"\r\n                sx={{ textAlign: \"center\", margin: \"10px 0\" }}\r\n              >\r\n                No TaxReturns Found\r\n              </Typography>\r\n            )}\r\n          </TableContainer>\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TaxReturns;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  Typography,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableHead,\r\n  TableCell,\r\n  CircularProgress,\r\n  Container,\r\n  Paper,\r\n} from \"@mui/material\";\r\nimport ArrowBackIosIcon from \"@mui/icons-material/ArrowBackIos\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport { Card, CardContent, Link } from \"@mui/material\";\r\n\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\r\nimport { GetApp, CloudUpload, FilterAltOffSharp } from \"@mui/icons-material\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport {\r\n  privateApiGET,\r\n  privateApiPOST,\r\n} from \"../../../components/PrivateRoute\";\r\nimport Api from \"../../../components/Api\";\r\nimport CustomAlert from \"../../../components/CustomAlert\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport const customTextStyles = makeStyles((theme) => ({\r\n  tableHeader: {\r\n    fontSize: \"16px\",\r\n    fontWeight: 600,\r\n    lineHeight: \"22px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      // marginBottom: \"8px\",\r\n      display: \"none\",\r\n    },\r\n  },\r\n  tableData: {\r\n    fontSize: \"16px\",\r\n    fontWeight: 400,\r\n    lineHeight: \"23px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  headerText: {\r\n    fontSize: \"24px\",\r\n    fontWeight: \"600\",\r\n    marginTop: \"32px\",\r\n    marginBottom: \"16px\",\r\n    color: \"#2069DB\",\r\n  },\r\n  confirmButton: {\r\n    fontSize: \"14px\",\r\n    fontWeight: \"600\",\r\n    lineHeight: \"19px\",\r\n    color: \"#FFFFFF\",\r\n    padding: \"10px 40px 9px\",\r\n    marginBottom: \"4px\",\r\n  },\r\n  mobileViewTableCellValue: {\r\n    color: \"rgb(71, 71, 71)\",\r\n    fontSize: \"14px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"19px\",\r\n  },\r\n  mobileView: {\r\n    borderRadius: \"4px\",\r\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\r\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\r\n    cursor: \"pointer\",\r\n    border: \"none !important\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  mobileViewTableCellHeader: {\r\n    color: \"rgb(245, 166, 35)\",\r\n    fontSize: \"10px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"14px\",\r\n  },\r\n  buttons: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  alertCard: {\r\n    border: \"1px solid #000000\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  alertIcon: {\r\n    color: \"#EB3414\",\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  root: {\r\n    color: \"#11a63d\",\r\n    fontSize: \"1.0rem\",\r\n    marginLeft: \"10px\",\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"inherit\",\r\n    color: \"primary\",\r\n  },\r\n  info: {\r\n    color: \"green\",\r\n    fontSize: \"1.5rem\",\r\n    border: \"1px solid #000000\",\r\n    marginTop: \"10px\",\r\n  },\r\n}));\r\n\r\nconst UploadTaxDocs = ({ open, setValue, handleActiveTabChange, id }) => {\r\n  const customStyles = customTextStyles();\r\n  const params = useParams();\r\n  const role = useSelector((state) => state.app.role);\r\n  const [showAlert, setShowAlert] = useState({\r\n    isAlert: false,\r\n    alertTitle: \"\",\r\n    alertText: \"\",\r\n    severity: \"\",\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [state, setState] = useState({\r\n    isImport: false,\r\n    isImpoFormSubmitting: false,\r\n    selectedFile: {},\r\n    isMyTaxDocsLoading: false,\r\n    myTaxDocs: [],\r\n  });\r\n\r\n  const handleDownloadFile = (file) => {\r\n    setIsLoading(true);\r\n\r\n    let payload = {\r\n      file_name: file,\r\n      id: id,\r\n      type: \"docs\",\r\n    };\r\n\r\n    privateApiPOST(Api.downloadTaxDocsFile, payload, { responseType: \"blob\" })\r\n      .then((res) => {\r\n        const { status, data } = res;\r\n        if (status === 200) {\r\n          setIsLoading(false);\r\n          const url = window.URL.createObjectURL(new Blob([data]));\r\n          const anchor = document.createElement(\"a\");\r\n          anchor.href = url;\r\n          anchor.setAttribute(\"download\", file);\r\n          document.body.appendChild(anchor);\r\n          anchor.click();\r\n        } else {\r\n          setIsLoading(false);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"handleDownloadFile--->\", err);\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleDeleteFile = (id, file) => {\r\n    setIsLoading(true);\r\n    let payload = {\r\n      file_id: id,\r\n      file_name: file,\r\n      id: params.id,\r\n      type: \"docs\",\r\n    };\r\n    privateApiPOST(Api.deleteTaxDocsFile, payload)\r\n      .then((res) => {\r\n        const { status, data } = res;\r\n        if (status === 200) {\r\n          setShowAlert({\r\n            isAlert: true,\r\n            severity: \"success\",\r\n            alertText: data?.[\"message\"],\r\n          });\r\n          setIsLoading(false);\r\n          handleFetchMyTaxDocs();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"handleDeleteFile--->\", err);\r\n        setShowAlert({\r\n          isAlert: true,\r\n          severity: \"error\",\r\n          alertText: data?.[\"message\"],\r\n        });\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  //CLICK - Upload input file\r\n  const handleUploadClick = (e) => {\r\n    let file = e.target.files[0];\r\n    if (file) {\r\n      setState((prev) => ({\r\n        ...prev,\r\n        selectedFile: file,\r\n      }));\r\n    }\r\n  };\r\n\r\n  //SUBMIT - Import form\r\n  const handleUploadTaxDocs = () => {\r\n    if (!state.selectedFile.name) {\r\n      setShowAlert({\r\n        isAlert: true,\r\n        severity: \"warning\",\r\n        alertText: \"Please choose file to import\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    setState((prev) => ({\r\n      ...prev,\r\n      isImpoFormSubmitting: true,\r\n    }));\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"upload\", state.selectedFile);\r\n    formData.append(\"id\", id);\r\n    formData.append(\"type\", \"docs\");\r\n\r\n    const token = sessionStorage.getItem(\"token\");\r\n    axios\r\n      .post(Api.uploadTaxDocs, formData, {\r\n        headers: {\r\n          \"content-type\": \"multipart/form-data\",\r\n          Authorization: `Token ${token}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        const { status, data } = res;\r\n        if (status === 200) {\r\n          setShowAlert({\r\n            isAlert: true,\r\n            severity: \"success\",\r\n            alertText: data?.[\"message\"],\r\n          });\r\n          setState((prev) => ({\r\n            ...prev,\r\n            selectedFile: {},\r\n            isImpoFormSubmitting: false,\r\n            isImport: false,\r\n          }));\r\n          handleFetchMyTaxDocs();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"handleUploadTaxDocs--->\", error);\r\n        const { data } = error.response;\r\n        setShowAlert({\r\n          isAlert: true,\r\n          severity: \"error\",\r\n          alertText: data?.[\"message\"],\r\n        });\r\n\r\n        setState((prev) => ({\r\n          ...prev,\r\n          selectedFile: {},\r\n          isImpoFormSubmitting: false,\r\n          isImport: false,\r\n        }));\r\n      });\r\n  };\r\n\r\n  const handleFetchMyTaxDocs = () => {\r\n    setState((prev) => ({ ...prev, isMyTaxDocsLoading: true }));\r\n    let payload = { id: id, type: \"docs\" };\r\n    privateApiPOST(Api.uploadTaxDocs, payload)\r\n      .then((response) => {\r\n        const { status, data } = response;\r\n        if (status === 200) {\r\n          console.log(\"data\", data);\r\n          setState((prev) => ({\r\n            ...prev,\r\n            isMyTaxDocsLoading: false,\r\n            myTaxDocs: data?.data,\r\n          }));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n        setState((prev) => ({ ...prev, isMyTaxDocsLoading: false }));\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      handleFetchMyTaxDocs();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        padding: \"20px 0 5px\",\r\n        border: { xs: \"none\", sm: \"1px solid #3A97BB\" },\r\n        minHeight: { xs: \"auto\", sm: \"800px\" },\r\n      }}\r\n    >\r\n      {\" \"}\r\n      <Container maxWidth=\"lg\">\r\n        {showAlert.isAlert && (\r\n          <CustomAlert\r\n            open={showAlert.isAlert}\r\n            severity={showAlert.severity}\r\n            alertTitle={showAlert.alertTitle}\r\n            alertText={showAlert.alertText}\r\n            onClose={() =>\r\n              setShowAlert({\r\n                isAlert: false,\r\n                alertTitle: \"\",\r\n                alertText: \"\",\r\n                severity: \"\",\r\n              })\r\n            }\r\n          />\r\n        )}\r\n        <Card className={customStyles.alertCard}>\r\n          <CardContent>\r\n            <Typography sx={{ marginBottom: \"10px\", color: \"#11a63d\" }}>\r\n              Alerts\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              <span className={customStyles.alertIcon}>!&nbsp;</span>\r\n              Information / Documents submitted here will be secured.\r\n            </Typography>\r\n            <br />\r\n            <Typography variant=\"body2\">\r\n              <span className={customStyles.alertIcon}>!&nbsp;</span>\r\n              Please contact our Team if any issues in uploading documents\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Typography className={customStyles.root}>\r\n          If needed, use the following links to download the required documents:\r\n          <br />\r\n          <Link\r\n            href=\"/static/img/1099_NEC_Expenses_Tax_Information.xlsx\"\r\n            className={customStyles.link}\r\n          >\r\n            1099 NEC Expenses Tax Information\r\n          </Link>\r\n          <br />\r\n          <Link\r\n            href=\"/static/img/City_Tax_Return_Information.xlsx\"\r\n            className={customStyles.link}\r\n          >\r\n            City Tax Return Information\r\n          </Link>\r\n          <br />\r\n          <Link\r\n            href=\"/static/img/Crypto_Information.xls\"\r\n            className={customStyles.link}\r\n          >\r\n            Crypto Information\r\n          </Link>\r\n          <br />\r\n          <Link\r\n            href=\"/static/img/FBAR_Information_2023.xls\"\r\n            className={customStyles.link}\r\n          >\r\n            FBAR Information\r\n          </Link>\r\n          <br />\r\n          <Link\r\n            href=\"/static/img/ITIN_Information.xls\"\r\n            className={customStyles.link}\r\n          >\r\n            ITN Information\r\n          </Link>\r\n          <br />\r\n          <Link\r\n            href=\"/static/img/Rental_Property_Details.xls\"\r\n            className={customStyles.link}\r\n          >\r\n            Rental Property Details\r\n          </Link>\r\n          <br />\r\n          After downloading, please fill/complete these documents and upload\r\n          them in the attachment section.\r\n        </Typography>\r\n        <Paper elevation={3} className={customStyles.info}>\r\n          <Table width=\"100%\">\r\n            <TableBody>\r\n              <TableRow valign=\"top\">\r\n                <TableCell align=\"left\" width=\"20%\">\r\n                  Addition Information\r\n                </TableCell>\r\n                <TableCell width=\"5%\"> - </TableCell>\r\n                <TableCell align=\"left\" width=\"75%\">\r\n                  If you want to provide any additional information to our Tax\r\n                  Consultant, please discuss during the Tax Interview.\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          sx={{ marginTop: { xs: \"20px\" } }}\r\n        >\r\n          <Box sx={{ marginRight: \"20px\" }}>\r\n            <input\r\n              required\r\n              id=\"import-file-button\"\r\n              type=\"file\"\r\n              onChange={handleUploadClick}\r\n              accept=\".xlsx\"\r\n              style={{ opacity: 0, visibility: \"hidden\", width: \"1px\" }}\r\n            />\r\n            <label htmlFor=\"import-file-button\">\r\n              <Button\r\n                startIcon={<CloudUploadIcon />}\r\n                component=\"span\"\r\n                variant=\"contained\"\r\n              >\r\n                Choose File\r\n              </Button>\r\n            </label>\r\n            <Typography sx={{ marginTop: \"8px\", fontStyle: \"italic\" }}>\r\n              {state.selectedFile.name}\r\n            </Typography>\r\n          </Box>\r\n          <Button onClick={handleUploadTaxDocs} sx={{ marginBottom: \"10px\" }}>\r\n            Upload\r\n          </Button>\r\n        </Box>\r\n        <Box>\r\n          {state.isMyTaxDocsLoading ? (\r\n            <CircularProgress />\r\n          ) : (\r\n            <TableContainer sx={{ marginTop: \"32px\" }}>\r\n              <Table\r\n                sx={{\r\n                  borderCollapse: \"collapse\",\r\n                }}\r\n                aria-label=\"Place Order Series Table\"\r\n              >\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell className={customStyles.tableHeader}>\r\n                      File Name\r\n                    </TableCell>\r\n                    <TableCell className={customStyles.tableHeader}>\r\n                      Upload Time\r\n                    </TableCell>\r\n                    <TableCell className={customStyles.tableHeader}>\r\n                      File Size\r\n                    </TableCell>\r\n                    <TableCell className={customStyles.tableHeader}>\r\n                      Actions\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {state.myTaxDocs.length > 0 &&\r\n                    state.myTaxDocs.map((row, index) => (\r\n                      <TableRow key={index}>\r\n                        <TableCell className={customStyles.tableData}>\r\n                          {row.file_name.replace(/^[^_]*_([^_]*_)/, \"\")}\r\n                        </TableCell>\r\n                        <TableCell className={customStyles.tableData}>\r\n                          {row.upload_time}\r\n                        </TableCell>\r\n                        <TableCell className={customStyles.tableData}>\r\n                          {row.file_size}\r\n                        </TableCell>\r\n                        <TableCell className={customStyles.buttons}>\r\n                          <Box\r\n                            sx={{\r\n                              display: \"flex\",\r\n                              flexWrap: \"nowrap\",\r\n                              justifyContent: \"space-between\",\r\n                            }}\r\n                          >\r\n                            <Button\r\n                              disabled={isLoading}\r\n                              startIcon={<GetApp />}\r\n                              size=\"small\"\r\n                              variant=\"outlined\"\r\n                              onClick={() => {\r\n                                handleDownloadFile(row.file_name);\r\n                              }}\r\n                            >\r\n                              Downloa\r\n                            </Button>\r\n                            <Button\r\n                              disabled={isLoading}\r\n                              startIcon={<DeleteIcon />}\r\n                              size=\"small\"\r\n                              onClick={() => {\r\n                                handleDeleteFile(row.id, row.file_name);\r\n                              }}\r\n                            >\r\n                              Delete\r\n                            </Button>\r\n                          </Box>\r\n                        </TableCell>\r\n\r\n                        <TableCell className={customStyles.mobileView}>\r\n                          <Box\r\n                            sx={{\r\n                              display: \"flex\",\r\n                              flexDirection: \"column\",\r\n                              marginTop: \"16px\",\r\n                            }}\r\n                          >\r\n                            <Box sx={{ marginTop: \"3px\" }}>\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellHeader\r\n                                }\r\n                              >\r\n                                File Name\r\n                              </Typography>\r\n\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellValue\r\n                                }\r\n                              >\r\n                                {row.file_name.replace(/^[^_]*_([^_]*_)/, \"\")}\r\n                              </Typography>\r\n                            </Box>\r\n                            <Box sx={{ marginTop: \"3px\" }}>\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellHeader\r\n                                }\r\n                              >\r\n                                Upload Time\r\n                              </Typography>\r\n\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellValue\r\n                                }\r\n                              >\r\n                                {row.upload_time}\r\n                              </Typography>\r\n                            </Box>\r\n\r\n                            <Box sx={{ marginTop: \"3px\" }}>\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellHeader\r\n                                }\r\n                              >\r\n                                File Size\r\n                              </Typography>\r\n\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellValue\r\n                                }\r\n                              >\r\n                                {row.file_size}\r\n                              </Typography>\r\n                            </Box>\r\n\r\n                            <Box\r\n                              sx={{\r\n                                display: \"flex\",\r\n                                flexWrap: \"wrap\",\r\n                                justifyContent: \"space-between\",\r\n                                marginTop: \"16px\",\r\n                              }}\r\n                            >\r\n                              <Button\r\n                                disabled={isLoading}\r\n                                startIcon={<GetApp />}\r\n                                size=\"small\"\r\n                                variant=\"outlined\"\r\n                                onClick={() => {\r\n                                  handleDownloadFile(row.file_name);\r\n                                }}\r\n                              >\r\n                                Download{\" \"}\r\n                                {isLoading && (\r\n                                  <CircularProgress sx={{ ml: 1 }} size={14} />\r\n                                )}\r\n                              </Button>\r\n                              <Button\r\n                                disabled={isLoading}\r\n                                startIcon={<DeleteIcon />}\r\n                                size=\"small\"\r\n                                onClick={() => {\r\n                                  handleDeleteFile(row.file_name);\r\n                                }}\r\n                              >\r\n                                Delete{\" \"}\r\n                                {isLoading && (\r\n                                  <CircularProgress sx={{ ml: 1 }} size={14} />\r\n                                )}\r\n                              </Button>\r\n                            </Box>\r\n                          </Box>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n              </Table>\r\n              {state.myTaxDocs.length === 0 && (\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  sx={{ textAlign: \"center\", margin: \"10px 0\" }}\r\n                >\r\n                  No TaxDocs Found\r\n                </Typography>\r\n              )}\r\n            </TableContainer>\r\n          )}\r\n        </Box>\r\n        <Grid item xs={12}>\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              margin: { xs: \"8px 0\", sm: \"26px 0 20px\" },\r\n            }}\r\n          >\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={() => setValue(2)}\r\n              startIcon={<ArrowBackIosIcon />}\r\n              color=\"primary\"\r\n              sx={{ margin: \"0 10px\", display: \"flex\", alignItems: \"center\" }}\r\n            >\r\n              Back\r\n            </Button>\r\n            {role === \"CLIENT\" && (\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => handleActiveTabChange(\"Confirm Details\")}\r\n                color=\"primary\"\r\n                sx={{ margin: \"0 10px\", display: \"flex\", alignItems: \"center\" }}\r\n              >\r\n                Confirm Details\r\n              </Button>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UploadTaxDocs;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport config from \"../../config\";\r\n// Material UI\r\nimport { Grid, Box, Avatar, Typography, Tabs, Tab } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport FilerDeatils from \"./Forms/FilerDetails\";\r\nimport IncomeDetails from \"./Forms/IncomeDetails\";\r\nimport BankDetails from \"./Forms/BankDetails\";\r\nimport TaxReturns from \"./Forms/TaxReturns\";\r\nimport UploadTaxDocs from \"./Forms/TaxDocs\";\r\n\r\nexport const customTextStyles = makeStyles((theme) => ({\r\n  accordion: {\r\n    marginBottom: \"8px\",\r\n    borderRadius: \"10px\",\r\n    \"&.MuiPaper-elevation\": {\r\n      boxShadow: \"none !important\",\r\n    },\r\n    \"&:before\": {\r\n      backgroundColor: \"transparent !important\",\r\n    },\r\n  },\r\n  accordionHeader: {\r\n    opacity: 1,\r\n    paddingLeft: \"12px\",\r\n    paddingTop: \"8px\",\r\n    paddingBottom: \"8px\",\r\n    maxHeight: \"60px\",\r\n  },\r\n  accordionHeaderText: {\r\n    fontSize: \"16px\",\r\n    lineHeight: \"24px\",\r\n    color: \"#474747\",\r\n  },\r\n  accordionColumn: {\r\n    marginTop: \"24px\",\r\n  },\r\n  accordionColumnHeaderText: {\r\n    fontSize: \"16px\",\r\n    lineHeight: \"24px\",\r\n    fontWeight: \"600\",\r\n    marginTop: \"10px\",\r\n    marginBottom: \"4px\",\r\n  },\r\n  accordionColumnText: {\r\n    fontSize: \"13px\",\r\n    lineHeight: \"19px\",\r\n    fontWeight: \"400\",\r\n  },\r\n  footerText: {\r\n    opacity: 0.8,\r\n    fontSize: \"11px\",\r\n    fontWeight: 400,\r\n    lineHeight: \"19px\",\r\n    marginTop: \"26px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  collpaseIcon: {\r\n    // height: \"9px\",\r\n    // width: \"9px\",\r\n    opacity: 1,\r\n    color: \"#474747\",\r\n  },\r\n}));\r\n\r\nconst TabsDesktop = ({\r\n  value,\r\n  setValue,\r\n  handleChange,\r\n  handleActiveTabChange,\r\n  data,\r\n  handleFetchData,\r\n  handleDownloadTemplate,\r\n}) => {\r\n  const params = useParams();\r\n  const customTextClasses = customTextStyles();\r\n\r\n  function CustomTabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && <Box>{children}</Box>}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  CustomTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n  };\r\n  function a11yProps(index) {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      \"aria-controls\": `simple-tabpanel-${index}`,\r\n    };\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        width: \"100%\",\r\n        marginBottom: \"64px\",\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          borderBottom: 1,\r\n          borderColor: \"divider\",\r\n          margin: \"8px\",\r\n        }}\r\n      >\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"basic tabs example\"\r\n        >\r\n          <Tab\r\n            label=\"Filer Details\"\r\n            className={customTextClasses.tabHeaderText}\r\n            {...a11yProps(0)}\r\n          />\r\n          <Tab\r\n            label=\"Income Details\"\r\n            className={customTextClasses.tabHeaderText}\r\n            {...a11yProps(1)}\r\n          />\r\n          <Tab\r\n            label=\"Bank Details\"\r\n            className={customTextClasses.tabHeaderText}\r\n            {...a11yProps(2)}\r\n          />\r\n          <Tab\r\n            label=\"Upload Tax Docs\"\r\n            className={customTextClasses.tabHeaderText}\r\n            {...a11yProps(3)}\r\n          />\r\n          <Tab\r\n            label=\"Tax Returns\"\r\n            className={customTextClasses.tabHeaderText}\r\n            {...a11yProps(3)}\r\n          />\r\n        </Tabs>\r\n      </Box>\r\n\r\n      <CustomTabPanel value={value} index={0}>\r\n        <FilerDeatils\r\n          open={value === 0}\r\n          setValue={setValue}\r\n          id={data[\"id\"]}\r\n          personalDetails={data[\"personalDetails\"]}\r\n          contactDetails={data[\"contactDetails\"]}\r\n          spouseDetails={data[\"spouseDetails\"]}\r\n          incomeDetails={data[\"incomeDetails\"]}\r\n          providedLivingSupport={data[\"providedLivingSupport\"]}\r\n          handleFetchData={handleFetchData}\r\n          handleDownloadTemplate={handleDownloadTemplate}\r\n        />\r\n      </CustomTabPanel>\r\n      <CustomTabPanel value={value} index={1}>\r\n        <IncomeDetails\r\n          open={value === 1}\r\n          setValue={setValue}\r\n          id={data[\"id\"]}\r\n          data={data[\"incomeDetails\"]}\r\n          handleFetchData={handleFetchData}\r\n          handleDownloadTemplate={handleDownloadTemplate}\r\n        />\r\n      </CustomTabPanel>\r\n      <CustomTabPanel value={value} index={2}>\r\n        <BankDetails\r\n          open={value === 2}\r\n          setValue={setValue}\r\n          id={data[\"id\"]}\r\n          data={data[\"bankDetails\"]}\r\n          handleFetchData={handleFetchData}\r\n        />\r\n      </CustomTabPanel>\r\n      <CustomTabPanel value={value} index={3}>\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            <Box>\r\n              <UploadTaxDocs\r\n                open={value === 3}\r\n                setValue={setValue}\r\n                handleActiveTabChange={handleActiveTabChange}\r\n                id={data[\"id\"]}\r\n              />\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </CustomTabPanel>\r\n      <CustomTabPanel value={value} index={4}>\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            <Box>\r\n              <TaxReturns open={value === 4} id={data[\"id\"]} />\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </CustomTabPanel>\r\n    </Box>\r\n  );\r\n};\r\nexport default TabsDesktop;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Page from \"../../../components/Page\";\r\nimport {\r\n  Grid,\r\n  Container,\r\n  Box,\r\n  CircularProgress,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport TabsDesktop from \"../TabsDesktop\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\nimport Api from \"../../../components/Api\";\r\nimport {\r\n  privateApiGET,\r\n  privateApiPOST,\r\n} from \"../../../components/PrivateRoute\";\r\n\r\nexport const customTextStyles = makeStyles((theme) => ({\r\n  tabButton: {\r\n    display: \"block\",\r\n    width: \"100%\",\r\n    paddingLeft: \"15px\",\r\n    textAlign: \"left\",\r\n    fontWeight: \"500\",\r\n    fontSize: \"16px\",\r\n    lineHeight: \"24px\",\r\n  },\r\n}));\r\n\r\nconst AdminTaxFillingPage = () => {\r\n  const params = useParams();\r\n  const customStyles = customTextStyles();\r\n  const [data, setData] = useState({});\r\n  const [isLoadingSpin, setIsLoadingSpin] = useState(true);\r\n\r\n  const [tabsDesktopValue, setTabsDesktopValue] = useState(\r\n    parseInt(params.action)\r\n  );\r\n\r\n  const handleTabsDesktopChange = (event, newValue) => {\r\n    setTabsDesktopValue(newValue);\r\n  };\r\n\r\n  const handleFetchTaxFilingDetails = () => {\r\n    setIsLoadingSpin(true);\r\n    let payload = { id: params.id };\r\n    privateApiPOST(Api.taxFiling, payload)\r\n      .then((response) => {\r\n        const { status, data } = response;\r\n        if (status === 200) {\r\n          console.log(\"data\", data);\r\n          setData(data?.data);\r\n          setIsLoadingSpin(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n        setIsLoadingSpin(false);\r\n      });\r\n  };\r\n\r\n  const handleDownloadTemplate = (file) => {\r\n    let payload = {\r\n      file_name: file,\r\n    };\r\n\r\n    privateApiPOST(Api.templateDownload, payload, { responseType: \"blob\" })\r\n      .then((res) => {\r\n        const { status, data } = res;\r\n        if (status === 200) {\r\n          const url = window.URL.createObjectURL(new Blob([data]));\r\n          const anchor = document.createElement(\"a\");\r\n          anchor.href = url;\r\n          anchor.setAttribute(\"download\", file);\r\n          document.body.appendChild(anchor);\r\n          anchor.click();\r\n        } else {\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"handleDownloadFile--->\", err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleFetchTaxFilingDetails();\r\n  }, []);\r\n\r\n  return (\r\n    <Page title={\"Tax Filing\"}>\r\n      <Box>\r\n        <Container maxWidth=\"lg\">\r\n          <Box sx={{ display: { xs: \"none\", sm: \"block\" } }}>\r\n            {isLoadingSpin ? (\r\n              <Box\r\n                display=\"flex\"\r\n                height=\"100%\"\r\n                width=\"100%\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                sx={{\r\n                  position: \"absolute\",\r\n                  zIndex: \"10\",\r\n                  left: 0,\r\n                  top: \"60%\",\r\n                }}\r\n              >\r\n                <CircularProgress size={30} />\r\n              </Box>\r\n            ) : data ? (\r\n              <Box\r\n                sx={{\r\n                  backgroundColor: \"rgba(255,255,255,1)\",\r\n                  boxShadow: \"rgba(100, 100, 111, 0.2) 0px 7px 29px 0px\",\r\n                  borderRadius: \"4px\",\r\n                  padding: \"20px 10px\",\r\n                  height: \"800px\", // Adjust the height as needed\r\n                  overflow: \"auto\", // Add overflow to enable scrolling\r\n                  maxHeight: \"800px\", // Add a maximum height to prevent content from overflowing\r\n                }}\r\n              >\r\n                <PerfectScrollbar>\r\n                  <Typography\r\n                    variant=\"h3\"\r\n                    sx={{\r\n                      marginLeft: \"20px\",\r\n                    }}\r\n                  >\r\n                    Tax-Filing For Year - {params.year}\r\n                  </Typography>\r\n\r\n                  <TabsDesktop\r\n                    value={tabsDesktopValue}\r\n                    setValue={setTabsDesktopValue}\r\n                    handleChange={handleTabsDesktopChange}\r\n                    data={data}\r\n                    handleFetchData={handleFetchTaxFilingDetails}\r\n                    handleDownloadTemplate={handleDownloadTemplate}\r\n                  />\r\n                </PerfectScrollbar>\r\n              </Box>\r\n            ) : null}\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default AdminTaxFillingPage;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  Box,\r\n  DialogActions,\r\n  DialogContent,\r\n  CircularProgress,\r\n  DialogTitle,\r\n  IconButton,\r\n  Typography,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nconst customTextStyles = makeStyles((theme) => ({\r\n  dialogBox: {\r\n    borderRadius: \"10px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      borderRadius: \"20px 20px 0px 0px\",\r\n      border: \"1px solid rgba(151,151,151, 1)\",\r\n      boxShadow: \"0px -3px 8px rgba(0,0,0, 0.1)\",\r\n    },\r\n  },\r\n  boldText: {\r\n    fontSize: \"18px\",\r\n    fontWeight: \"600\",\r\n    lineHeight: \"24px\",\r\n    marginBottom: \"7px\",\r\n  },\r\n\r\n  normalText: {\r\n    fontSize: \"14px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"22px\",\r\n  },\r\n  headerText: {\r\n    fontSize: \"16px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"23px\",\r\n  },\r\n  mainText: {\r\n    opacity: 1,\r\n    color: \"rgba(71,71,71,1)\",\r\n    fontSize: \"24px\",\r\n    fontWeight: \"400\",\r\n    textAlign: \"center\",\r\n    lineHeight: \"33px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      fontSize: \"20px\",\r\n      lineHeight: \"27px\",\r\n      marginLeft: \"8px\",\r\n      marginRight: \"7px\",\r\n    },\r\n  },\r\n  paper: {\r\n    overflowY: \"unset\",\r\n  },\r\n  customizedButton: {\r\n    position: \"absolute\",\r\n    left: \"97.5%\",\r\n    top: \"-4%\",\r\n    backgroundColor: \"#F5A623\",\r\n    color: \"#FFFFFF\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      left: \"93%\",\r\n      top: \"-5%\",\r\n    },\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.secondary.light,\r\n    },\r\n  },\r\n  confirmButton: {\r\n    fontSize: \"14px\",\r\n    fontWeight: \"600\",\r\n    lineHeight: \"19px\",\r\n    backgroundColor: \"#FFFFFF\",\r\n    padding: \"10px 40px 9px\",\r\n    marginBottom: \"4px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#FFFFFF\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst ConfirmedClientConfirmationDialogBox = ({ open, handleClose }) => {\r\n  const customStyles = customTextStyles();\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      scroll=\"paper\"\r\n      aria-labelledby=\"scroll-dialog-title\"\r\n      aria-describedby=\"scroll-dialog-description\"\r\n      classes={{ paper: customStyles.paper }}\r\n      className={customStyles.dialogBox}\r\n    >\r\n      <DialogTitle\r\n        id=\"scroll-dialog-title\"\r\n        sx={{ backgroundColor: \"rgb(193, 210, 231)\" }}\r\n      >\r\n        <Typography\r\n          sx={{ fontSize: \"16px\", fontWeight: 600, color: \"rgb(21, 66, 139)\" }}\r\n        >\r\n          Confirmed Client\r\n        </Typography>\r\n      </DialogTitle>\r\n      <DialogContent\r\n        dividers={false}\r\n        sx={{ backgroundColor: \"rgb(193, 210, 231)\" }}\r\n      >\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={handleClose}\r\n          className={customStyles.customizedButton}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n        <Typography sx={{ margin: \"5px 0\" }}>\r\n          Become a confirmed client by paying advance filing fee and we will\r\n          complete your filing in 24 hours!!\r\n        </Typography>\r\n        <Typography sx={{ margin: \"10px 0\", color: \"#11a63d\" }}>\r\n          How to become a confirmed client?\r\n        </Typography>\r\n        <Typography> - Upload all your tax related documents</Typography>\r\n        <Typography sx={{ color: \"#11a63d\" }}>\r\n          - Pay minimum standard filing fee of $50**{\" \"}\r\n          <Box component=\"span\" color=\"#474747 !important\">\r\n            ( visit \"Pay Now\" section to make the payment)\r\n          </Box>\r\n        </Typography>\r\n        <Typography>\r\n          - Send us an email confirming your advance fee payment\r\n        </Typography>\r\n        <Typography>\r\n          {\" \"}\r\n          - We will call you and complete your estimates (for both standard and\r\n          itemized filing)\r\n        </Typography>\r\n        <Typography sx={{ color: \"#11a63d\" }}>\r\n          {\" \"}\r\n          - If you decide to go with itemized filing, standard filing fee will\r\n          be deducted from your itemized filing fee\r\n        </Typography>\r\n        <Typography sx={{ marginTop: \"10px\" }}>\r\n          * For missing information/complex returns, the estimated completion\r\n          time can be greater but we will let you know in advance.\r\n        </Typography>\r\n        <Typography>\r\n          ** Minimum Standard filing fee is for 1040 EZ returns with 1 state\r\n        </Typography>\r\n      </DialogContent>\r\n      <DialogActions\r\n        sx={{ justifyContent: \"center\", backgroundColor: \"rgb(193, 210, 231)\" }}\r\n      >\r\n        <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <Button\r\n            variant=\"text\"\r\n            className={customStyles.confirmButton}\r\n            onClick={handleClose}\r\n            sx={{ marginRight: \"15px\", color: \"#474747 !important\" }}\r\n          >\r\n            Ok\r\n          </Button>\r\n        </Box>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ConfirmedClientConfirmationDialogBox;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Box,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  MenuItem,\r\n  CircularProgress,\r\n  Chip,\r\n  IconButton,\r\n  Avatar,\r\n} from \"@mui/material\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CustomAlert from \"../../../components/CustomAlert\";\r\n\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport Api from \"../../../components/Api\";\r\nimport {\r\n  privateApiGET,\r\n  privateApiPOST,\r\n} from \"../../../components/PrivateRoute\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport CustomInputTextField from \"../../../components/CustomInputField\";\r\nimport { thousands_separators } from \"../../../utils/index\";\r\nimport ConfirmedClientConfirmationDialogBox from \"../ConfirmClientDialogBox\";\r\nimport CustomDatePicker from \"../../../components/DatePicker\";\r\n\r\nconst customTextStyles = makeStyles((theme) => ({\r\n  tableHeader: {\r\n    fontSize: \"16px\",\r\n    fontWeight: 600,\r\n    lineHeight: \"22px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      // marginBottom: \"8px\",\r\n      display: \"none\",\r\n    },\r\n  },\r\n  tableData: {\r\n    fontSize: \"16px\",\r\n    fontWeight: 400,\r\n    lineHeight: \"23px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  mobileViewTableCellValue: {\r\n    color: \"rgb(71, 71, 71)\",\r\n    fontSize: \"14px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"19px\",\r\n  },\r\n  mobileView: {\r\n    borderRadius: \"4px\",\r\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\r\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\r\n    cursor: \"pointer\",\r\n    border: \"none !important\",\r\n    marginBottom: \"20px\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  mobileViewTableCellHeader: {\r\n    color: \"rgb(245, 166, 35)\",\r\n    fontSize: \"10px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"14px\",\r\n  },\r\n  buttons: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  date: Yup.date().required(\"Date is required\"),\r\n  time: Yup.string().required(\"Time is required\"),\r\n  timezone: Yup.string().required(\"Timezone is required\"),\r\n});\r\n\r\nconst PickAppointment = ({ open, id }) => {\r\n  const customStyles = customTextStyles();\r\n  const [isPickAppointmentDetailsLoading, setIsPickAppointmentDetailsLoading] =\r\n    useState(false);\r\n  const state = useSelector((state) => state.app);\r\n  const [\r\n    isConfirmedClientConfirmationDialogBoxOpen,\r\n    setIsConfirmedClientConfirmationDialogBoxOpen,\r\n  ] = useState(false);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      date: \"\",\r\n      time: \"23:00\",\r\n      timezone: \"America/Chicago\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      setIsPickAppointmentDetailsLoading(true);\r\n      privateApiPOST(Api.bookAppointment, { id: id, ...values })\r\n        .then((response) => {\r\n          const { status, data } = response;\r\n          if (status === 200) {\r\n            console.log(\"data\", data);\r\n            setShowAlert({\r\n              isAlert: true,\r\n              alertText: data?.message,\r\n              severity: \"success\",\r\n            });\r\n            formik.resetForm();\r\n            handleFetchAppointmentDetails();\r\n          }\r\n          setIsPickAppointmentDetailsLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error\", error);\r\n          if (error.response.status === 400 || error.response.status === 401) {\r\n            setShowAlert({\r\n              isAlert: true,\r\n              alertText: error.response.data?.message,\r\n              severity: \"error\",\r\n              alertTitle: \"Error\",\r\n            });\r\n          } else {\r\n            setShowAlert({\r\n              isAlert: true,\r\n              alertText: \"Something went wrong\",\r\n              severity: \"error\",\r\n              alertTitle: \"Error\",\r\n            });\r\n          }\r\n          setIsPickAppointmentDetailsLoading(false);\r\n        });\r\n    },\r\n  });\r\n\r\n  const [appointmentDetails, setAppointmentDetails] = useState([]);\r\n\r\n  const [showAlert, setShowAlert] = useState({\r\n    isAlert: false,\r\n    alertTitle: \"\",\r\n    alertText: \"\",\r\n    severity: \"\",\r\n  });\r\n\r\n  const handleCancelAppointment = (appointmentId) => {\r\n    setIsPickAppointmentDetailsLoading(true);\r\n    let payload = { id: id, appointmentId: appointmentId };\r\n    privateApiPOST(Api.deleteAppointment, payload)\r\n      .then((response) => {\r\n        const { status, data } = response;\r\n        if (status === 200) {\r\n          console.log(\"data\", data);\r\n          setShowAlert({\r\n            isAlert: true,\r\n            alertText: \"Appointment Cancelled Successfully\",\r\n            severity: \"success\",\r\n          });\r\n        }\r\n        setIsPickAppointmentDetailsLoading(false);\r\n        handleFetchAppointmentDetails();\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n        setShowAlert({\r\n          isAlert: true,\r\n          severity: \"error\",\r\n          alertText: data?.[\"message\"],\r\n        });\r\n        setIsPickAppointmentDetailsLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleFetchAppointmentDetails = () => {\r\n    setIsPickAppointmentDetailsLoading(true);\r\n    let payload = { id: id };\r\n    privateApiPOST(Api.appointmentDetails, payload)\r\n      .then((response) => {\r\n        const { status, data } = response;\r\n        if (status === 200) {\r\n          console.log(\"data\", data);\r\n          setIsPickAppointmentDetailsLoading(false);\r\n          setAppointmentDetails(data?.data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n        if (error.response.status === 400 || error.response.status === 401) {\r\n          setShowAlert({\r\n            isAlert: true,\r\n            alertText: error.response.data?.message,\r\n            severity: \"error\",\r\n            alertTitle: \"Error\",\r\n          });\r\n        } else {\r\n          setShowAlert({\r\n            isAlert: true,\r\n            alertText: \"Something went wrong\",\r\n            severity: \"error\",\r\n            alertTitle: \"Error\",\r\n          });\r\n        }\r\n        setIsPickAppointmentDetailsLoading(false);\r\n      });\r\n  };\r\n\r\n  const showMsg = () => {\r\n    // Add your showMsg function logic here\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (sessionStorage.getItem(\"token\") && open) {\r\n      handleFetchAppointmentDetails();\r\n    }\r\n  }, []);\r\n\r\n  const generateTimeOptions = () => {\r\n    const timeOptions = [];\r\n    for (let hours = 11; hours <= 23; hours++) {\r\n      for (let minutes = 0; minutes < 60; minutes += 30) {\r\n        const hourStr = String(hours).padStart(2, \"0\");\r\n        const minuteStr = String(minutes).padStart(2, \"0\");\r\n        const timeOption = `${hourStr}:${minuteStr}`;\r\n        timeOptions.push(timeOption);\r\n      }\r\n    }\r\n    return timeOptions;\r\n  };\r\n\r\n  const timeOptions = generateTimeOptions();\r\n\r\n  const handleCloseConfirmedClientConfirmationDialogBoxOpen = () => {\r\n    setIsConfirmedClientConfirmationDialogBoxOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        padding: \"20px 0 5px\",\r\n        border: { xs: \"none\", sm: \"1px solid #3A97BB\" },\r\n        minHeight: { xs: \"auto\", sm: \"800px\" },\r\n      }}\r\n    >\r\n      {showAlert.isAlert ? (\r\n        <CustomAlert\r\n          open={showAlert.isAlert}\r\n          severity={showAlert.severity}\r\n          alertTitle={showAlert.alertTitle}\r\n          alertText={showAlert.alertText}\r\n          onClose={() =>\r\n            setShowAlert({\r\n              isAlert: false,\r\n              alertTitle: \"\",\r\n              alertText: \"\",\r\n              severity: \"\",\r\n            })\r\n          }\r\n        />\r\n      ) : null}\r\n      <Container maxWidth=\"lg\">\r\n        <Typography variant=\"h5\">\r\n          Tax Notes Interview - Schedule your date:\r\n        </Typography>\r\n        <Box\r\n          sx={{\r\n            display: { xs: \"block\", sm: \"flex\" },\r\n            flexWrap: \"wrap\",\r\n            justifyContent: \"space-around\",\r\n            marginTop: \"30px\",\r\n          }}\r\n        >\r\n          <Box sx={{ width: { xs: \"100%\", sm: \"35%\" } }}>\r\n            <CustomInputTextField\r\n              attributeMarginTop=\"12px\"\r\n              attribute=\"Client Name\"\r\n              is_required={false}\r\n              fullWidth\r\n              // label=\"Name\"\r\n              name=\"name\"\r\n              value={`${state.first_name} ${state.last_name}`}\r\n              variant=\"outlined\"\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n          </Box>\r\n\r\n          <Box sx={{ width: { xs: \"100%\", sm: \"35%\" } }}>\r\n            <CustomInputTextField\r\n              attributeMarginTop=\"12px\"\r\n              attribute={\"Phone Number\"}\r\n              is_required={false}\r\n              fullWidth\r\n              // label=\"Phone Number\"\r\n              name=\"phone_no\"\r\n              value={state ? state.phone_no : \"\"}\r\n              variant=\"outlined\"\r\n              InputProps={{\r\n                readOnly: true,\r\n              }}\r\n            />\r\n          </Box>\r\n        </Box>\r\n        <Typography variant=\"body1\" color=\"#11a63d\" sx={{ marginTop: \"30px\" }}>\r\n          Become a confirmed client by making an advance fee payment. Same day\r\n          tax filing available for Confirmed Clients.\r\n        </Typography>\r\n        <br />\r\n        <Typography variant=\"body1\" color=\"green\" sx={{ marginTop: \"10px\" }}>\r\n          How to become a Confirmed Client?&nbsp;&nbsp;&nbsp;\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => setIsConfirmedClientConfirmationDialogBoxOpen(true)}\r\n            sx={{ marginTop: { xs: \"10px\" } }}\r\n          >\r\n            CLICK HERE\r\n          </Button>\r\n        </Typography>\r\n\r\n        <Typography variant=\"body1\" color=\"#11a63d\" sx={{ marginTop: \"30px\" }}>\r\n          {`We will call you anytime between 11.00 AM CST to 11.30 PM CST on your appointment date.`}\r\n        </Typography>\r\n        <Typography variant=\"body1\" color=\"#11a63d\" sx={{ marginLeft: \"10px\" }}>\r\n          {`- We try to match your preferred time. Unfortunately, it is not a guaranteed time.`}\r\n        </Typography>\r\n        <Typography variant=\"body1\" color=\"#11a63d\" sx={{ marginTop: \"30px\" }}>\r\n          Please pick your availability between{\" \"}\r\n          <Typography variant=\"body1\" color=\"primary\" component=\"span\">\r\n            01/11/2024 to 04/18/2024\r\n          </Typography>\r\n        </Typography>\r\n        <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\r\n          <Box\r\n            sx={{\r\n              marginTop: \"30px\",\r\n            }}\r\n          >\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={4}>\r\n                <CustomDatePicker\r\n                  name=\"date\"\r\n                  label=\"Date\"\r\n                  value={formik.values.date}\r\n                  setFieldValue={formik.setFieldValue}\r\n                  error={formik.touched.date && Boolean(formik.errors.date)}\r\n                  helperText={formik.touched.date && formik.errors.date}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={5}>\r\n                <CustomInputTextField\r\n                  attributeMarginTop=\"12px\"\r\n                  attribute=\"Preferrable Time\"\r\n                  is_required={false}\r\n                  select\r\n                  value={formik.values.time}\r\n                  onChange={(e) => formik.setFieldValue(\"time\", e.target.value)}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  required\r\n                  error={formik.touched.time && Boolean(formik.errors.time)}\r\n                  helperText={formik.touched.time && formik.errors.time}\r\n                >\r\n                  {timeOptions.map((option) => (\r\n                    <MenuItem key={option} value={option}>\r\n                      {option}\r\n                    </MenuItem>\r\n                  ))}\r\n                </CustomInputTextField>\r\n              </Grid>\r\n              <Grid item xs={12} sm={3}>\r\n                <CustomInputTextField\r\n                  attributeMarginTop=\"12px\"\r\n                  attribute=\"Time Zone\"\r\n                  is_required={false}\r\n                  select\r\n                  value={formik.values.timezone}\r\n                  onChange={(e) =>\r\n                    formik.setFieldValue(\"timezone\", e.target.value)\r\n                  }\r\n                  fullWidth\r\n                  required\r\n                  error={\r\n                    formik.touched.timezone && Boolean(formik.errors.timezone)\r\n                  }\r\n                  helperText={formik.touched.timezone && formik.errors.timezone}\r\n                >\r\n                  <MenuItem value=\"America/Chicago\">CST</MenuItem>\r\n                  <MenuItem value=\"EST\">EST</MenuItem>\r\n                  {/* Add more time zones as needed */}\r\n                </CustomInputTextField>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n          <Typography\r\n            variant=\"body1\"\r\n            color=\"#11a63d\"\r\n            sx={{ marginTop: \"30px\" }}\r\n          >\r\n            Maximum number of appointments you can have is \"ONE\". If you already\r\n            have an appointment, delete it before scheduling a new appointment\r\n          </Typography>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={showMsg} // Make sure to handle this separately if needed\r\n            sx={{ display: \"block\", margin: \"0 auto\", marginTop: \"20px\" }}\r\n          >\r\n            SUBMIT\r\n          </Button>\r\n        </form>\r\n        <Box>\r\n          {isPickAppointmentDetailsLoading ? (\r\n            <CircularProgress />\r\n          ) : (\r\n            <TableContainer\r\n              sx={{\r\n                marginTop: \"32px\",\r\n                paddingBottom: { xs: \"10px\", sm: \"0px\" },\r\n              }}\r\n            >\r\n              <Table\r\n                sx={{\r\n                  borderCollapse: \"collapse\",\r\n                }}\r\n                aria-label=\"Place Order Series Table\"\r\n              >\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell className={customStyles.tableHeader}>\r\n                      Date\r\n                    </TableCell>\r\n                    <TableCell className={customStyles.tableHeader}>\r\n                      Start Time\r\n                    </TableCell>\r\n                    <TableCell className={customStyles.tableHeader}>\r\n                      End Time\r\n                    </TableCell>\r\n                    <TableCell className={customStyles.tableHeader}>\r\n                      Status\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {appointmentDetails.length > 0 &&\r\n                    appointmentDetails.map((row, index) => (\r\n                      <TableRow key={index}>\r\n                        <TableCell className={customStyles.tableData}>\r\n                          {row.date}\r\n                        </TableCell>\r\n                        <TableCell className={customStyles.tableData}>\r\n                          {row.start_time}\r\n                        </TableCell>\r\n                        <TableCell className={customStyles.tableData}>\r\n                          {row.end_time}\r\n                        </TableCell>\r\n                        <TableCell className={customStyles.tableData}>\r\n                          <Box\r\n                            sx={{\r\n                              display: \"flex\",\r\n                              flexWrap: \"wrap\",\r\n                              marginTop: \"8px\",\r\n                              alignItems: \"center\",\r\n                              marginBottom: {\r\n                                xs: row.status !== \"BOOKED\" ? \"14px\" : 0,\r\n                                sm: 0,\r\n                              },\r\n                            }}\r\n                          >\r\n                            <Chip\r\n                              label={row[\"status\"]}\r\n                              size=\"small\"\r\n                              color={\r\n                                row.status === \"BOOKED\"\r\n                                  ? \"info\"\r\n                                  : row.status === \"CANCELLED\"\r\n                                  ? \"error\"\r\n                                  : \"success\"\r\n                              }\r\n                            />\r\n\r\n                            <IconButton\r\n                              disabled={isPickAppointmentDetailsLoading}\r\n                              sx={{\r\n                                height: \"40px\",\r\n                                width: \"40px\",\r\n                                visibility:\r\n                                  row.status === \"BOOKED\"\r\n                                    ? \"visible\"\r\n                                    : \"hidden\",\r\n                                onCursor: \"pointer\",\r\n                                display: { xs: \"none\", sm: \"flex\" },\r\n                              }}\r\n                              onClick={() => handleCancelAppointment(row.id)}\r\n                            >\r\n                              <Avatar\r\n                                alt=\"delete\"\r\n                                src=\"/static/img/deleteIcon.svg\"\r\n                                sx={{ height: \"24px\", width: \"24px\" }}\r\n                              />\r\n                            </IconButton>\r\n                          </Box>\r\n                        </TableCell>\r\n\r\n                        <TableCell className={customStyles.mobileView}>\r\n                          <Box>\r\n                            <Box\r\n                              sx={{\r\n                                display: \"flex\",\r\n                                flexWrap: \"wrap\",\r\n                                justifyContent: \"space-between\",\r\n                                marginTop: \"16px\",\r\n                              }}\r\n                            >\r\n                              <Box sx={{ marginTop: \"3px\" }}>\r\n                                <Typography\r\n                                  className={\r\n                                    customStyles.mobileViewTableCellHeader\r\n                                  }\r\n                                >\r\n                                  Date\r\n                                </Typography>\r\n\r\n                                <Typography\r\n                                  className={\r\n                                    customStyles.mobileViewTableCellValue\r\n                                  }\r\n                                >\r\n                                  {row.date}\r\n                                </Typography>\r\n                              </Box>\r\n                              <Box sx={{ marginTop: \"3px\" }}>\r\n                                <Typography\r\n                                  className={\r\n                                    customStyles.mobileViewTableCellHeader\r\n                                  }\r\n                                >\r\n                                  Status\r\n                                </Typography>\r\n\r\n                                <Typography\r\n                                  className={\r\n                                    customStyles.mobileViewTableCellValue\r\n                                  }\r\n                                >\r\n                                  {row.status}\r\n                                </Typography>\r\n                              </Box>\r\n                              <Box sx={{ marginTop: \"3px\" }}>\r\n                                <Typography\r\n                                  className={\r\n                                    customStyles.mobileViewTableCellHeader\r\n                                  }\r\n                                >\r\n                                  Start Time\r\n                                </Typography>\r\n\r\n                                <Typography\r\n                                  className={\r\n                                    customStyles.mobileViewTableCellValue\r\n                                  }\r\n                                >\r\n                                  {row.start_time}\r\n                                </Typography>\r\n                              </Box>\r\n                            </Box>\r\n                            <Box\r\n                              sx={{\r\n                                display: \"flex\",\r\n                                flexWrap: \"wrap\",\r\n                                justifyContent: \"space-between\",\r\n                                marginTop: \"16px\",\r\n                              }}\r\n                            >\r\n                              <Box sx={{ marginTop: \"3px\" }}>\r\n                                <Typography\r\n                                  className={\r\n                                    customStyles.mobileViewTableCellHeader\r\n                                  }\r\n                                >\r\n                                  End Time\r\n                                </Typography>\r\n\r\n                                <Typography\r\n                                  className={\r\n                                    customStyles.mobileViewTableCellValue\r\n                                  }\r\n                                >\r\n                                  {row.end_time}\r\n                                </Typography>\r\n                              </Box>\r\n                              <Box\r\n                              // sx={{\r\n                              //   display: \"flex\",\r\n                              //   justifyContent: \"center\", // Center the button horizontally\r\n                              //   alignItems: \"center\",\r\n                              // }}\r\n                              >\r\n                                <Button\r\n                                  disabled={isPickAppointmentDetailsLoading}\r\n                                  startIcon={<DeleteIcon />}\r\n                                  size=\"small\"\r\n                                  onClick={() => {\r\n                                    handleCancelAppointment(row.id);\r\n                                  }}\r\n                                  sx={{\r\n                                    visibility:\r\n                                      row.status === \"BOOKED\"\r\n                                        ? \"visible\"\r\n                                        : \"hidden\",\r\n                                  }}\r\n                                >\r\n                                  Delete{\" \"}\r\n                                  {isPickAppointmentDetailsLoading && (\r\n                                    <CircularProgress\r\n                                      sx={{ ml: 1 }}\r\n                                      size={14}\r\n                                    />\r\n                                  )}\r\n                                </Button>\r\n                              </Box>\r\n                            </Box>\r\n                          </Box>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n              </Table>\r\n              {appointmentDetails.length === 0 && (\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  sx={{ textAlign: \"center\", margin: \"10px 0\" }}\r\n                >\r\n                  No Appointments Found\r\n                </Typography>\r\n              )}\r\n            </TableContainer>\r\n          )}\r\n        </Box>\r\n      </Container>\r\n      <ConfirmedClientConfirmationDialogBox\r\n        open={isConfirmedClientConfirmationDialogBoxOpen}\r\n        handleClose={handleCloseConfirmedClientConfirmationDialogBoxOpen}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PickAppointment;\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Container,\r\n} from \"@mui/material\";\r\n\r\nconst PayPalPayment = () => {\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Grid spacing={2} container justifyContent=\"center\" alignItems=\"center\">\r\n        <Grid item xs={12} sm={7}>\r\n          <Box\r\n            id=\"ppdiv\"\r\n            name=\"ppdiv\"\r\n            sx={{\r\n              fontSize: 12,\r\n              fontFamily: \"Verdana\",\r\n              display: \"block\",\r\n              p: \"20px\", // Padding\r\n              border: \"1px solid grey\", // Border style\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"body1\"\r\n              color=\"#11a63d\"\r\n              sx={{ marginBottom: \"20px\" }}\r\n            >\r\n              P.S: If you choose this Payment option (PayPal), your tax filing\r\n              fee includes a 3% service charge.\r\n            </Typography>\r\n            <Typography variant=\"body1\" sx={{ marginBottom: \"20px\" }}>\r\n              <span id=\"scsppt\">\r\n                Your Service Fee amount (including 3% service charge)\r\n              </span>\r\n            </Typography>\r\n            <Typography variant=\"body1\" sx={{ marginBottom: \"20px\" }}>\r\n              If your payment is successful, you'll receive an automatic email\r\n              confirmation from \"PayPal.\"\r\n            </Typography>\r\n            <form\r\n              autoComplete=\"off\"\r\n              onSubmit={handleSubmit}\r\n              // action=\"https://www.paypal.com/cgi-bin/webscr\" method=\"post\"\r\n            >\r\n              <input type=\"hidden\" name=\"cmd\" value=\"_xclick\" />\r\n              <input type=\"hidden\" name=\"business\" value=\"4KKFRTPBL3E8E\" />\r\n              <input type=\"hidden\" name=\"lc\" value=\"US\" />\r\n              <input\r\n                type=\"hidden\"\r\n                name=\"item_name\"\r\n                value=\"Tax Consultation Fee\"\r\n              />\r\n              <input type=\"hidden\" name=\"currency_code\" value=\"USD\" />\r\n              <input type=\"hidden\" name=\"button_subtype\" value=\"services\" />\r\n              <input type=\"hidden\" name=\"no_note\" value=\"0\" />\r\n              <input\r\n                type=\"hidden\"\r\n                name=\"cn\"\r\n                value=\"Add special instructions to the seller:\"\r\n              />\r\n              <input type=\"hidden\" name=\"no_shipping\" value=\"1\" />\r\n              <input type=\"hidden\" name=\"rm\" value=\"1\" />\r\n              <input\r\n                type=\"hidden\"\r\n                name=\"return\"\r\n                value=\"https://www.Onecall Tax Services.com/payment_sucess\"\r\n              />\r\n              <input\r\n                type=\"hidden\"\r\n                name=\"bn\"\r\n                value=\"PP-BuyNowBF:btn_paynowCC_LG.gif:NonHosted\"\r\n              />\r\n              <TextField\r\n                label=\"Enter amount Here\"\r\n                type=\"text\"\r\n                id=\"pp_amount\"\r\n                name=\"amount\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                sx={{\r\n                  mt: \"20px\",\r\n                  width: \"50%\",\r\n                  display: \"block\",\r\n                  ml: { xs: \"20px\", sm: \"0px\" },\r\n                }} // Adjust the margin-top as needed\r\n              />\r\n              <Button type=\"submit\">\r\n                <img\r\n                  src=\"https://www.paypalobjects.com/en_US/i/btn/btn_paynowCC_LG.gif\"\r\n                  border=\"0\"\r\n                  name=\"submit\"\r\n                  alt=\"PayPal - The safer, easier way to pay online!\"\r\n                />\r\n              </Button>\r\n              <img\r\n                alt=\"\"\r\n                border=\"0\"\r\n                src=\"https://www.paypalobjects.com/en_US/i/scr/pixel.gif\"\r\n                width=\"1\"\r\n                height=\"1\"\r\n              />\r\n            </form>\r\n            <Typography color=\"#11a63d\">\r\n              We will send your tax filing copies with instructions with in 2\r\n              business days.\r\n            </Typography>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PayPalPayment;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  MenuItem,\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { statesNames, countryCode } from \"../../../constants\";\r\nimport Api from \"../../../components/Api\";\r\nimport {\r\n  privateApiGET,\r\n  privateApiPOST,\r\n} from \"../../../components/PrivateRoute\";\r\nimport CustomInputTextField from \"../../../components/CustomInputField\";\r\nimport { CustomLabel } from \"./FilerDetails\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  tableHeader: {\r\n    fontSize: \"16px\",\r\n    fontWeight: \"600\",\r\n    lineHeight: \"22px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  tableData: {\r\n    fontSize: \"16px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"23px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      // marginBottom: \"8px\",\r\n      display: \"none\",\r\n    },\r\n  },\r\n  mobileViewTableCellValue: {\r\n    color: \"rgb(71, 71, 71)\",\r\n    fontSize: \"14px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"19px\",\r\n  },\r\n  mobileView: {\r\n    borderRadius: \"4px\",\r\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\r\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\r\n    cursor: \"pointer\",\r\n    border: \"none !important\",\r\n    marginBottom: \"20px\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  mobileViewTableCellHeader: {\r\n    color: \"rgb(245, 166, 35)\",\r\n    fontSize: \"10px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"14px\",\r\n  },\r\n  buttons: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst ConfirmDetails = ({\r\n  open,\r\n  id,\r\n  personalDetails,\r\n  contactDetails,\r\n  spouseDetails,\r\n  incomeDetails,\r\n  providedLivingSupport,\r\n  bankDetails,\r\n  handlePickAppointment,\r\n  dependantDetails,\r\n}) => {\r\n  const customStyles = useStyles();\r\n  const stateOptions = statesNames;\r\n  const countryCodes = countryCode;\r\n\r\n  const transform = (input) => {\r\n    if (input === undefined || input === null) {\r\n      return \"\";\r\n    }\r\n\r\n    if (input.includes(\"-\")) {\r\n      return input;\r\n    }\r\n\r\n    const rawSsn = input.replace(/-/g, \"\"); // Remove hyphens\r\n    const formattedSsn = rawSsn\r\n      .replace(/\\D/g, \"\") // Remove non-digits\r\n      .replace(/(\\d{3})(\\d{2})(\\d{4})/, \"$1-$2-$3\"); // Format as 123-45-6789\r\n    return formattedSsn;\r\n  };\r\n\r\n  const formatPhoneNumber = (phoneNumber) => {\r\n    if (phoneNumber === undefined || phoneNumber === null) {\r\n      return \"\";\r\n    }\r\n\r\n    if (phoneNumber.includes(\"-\")) {\r\n      return phoneNumber;\r\n    }\r\n\r\n    // Remove non-numeric characters from the phone number\r\n    const numericOnly = phoneNumber.replace(/\\D/g, \"\");\r\n\r\n    // Use regex to capture groups of digits in the desired format\r\n    const formattedNumber = numericOnly.replace(\r\n      /(\\d{3})(\\d{3})(\\d{4})/,\r\n      \"($1)-$2-$3\"\r\n    );\r\n\r\n    return formattedNumber;\r\n  };\r\n\r\n  const [formData, setFormData] = useState({\r\n    // Personal Details\r\n\r\n    firstName: personalDetails[\"firstName\"],\r\n    middleName: personalDetails[\"middleName\"],\r\n    lastName: personalDetails[\"lastName\"],\r\n    ssn: personalDetails[\"ssn\"],\r\n    dateOfBirth: personalDetails[\"dateOfBirth\"],\r\n    gender: personalDetails[\"gender\"],\r\n    occupation: personalDetails[\"occupation\"],\r\n    residentialStatus: personalDetails[\"residentialStatus\"],\r\n    email: personalDetails[\"email\"],\r\n\r\n    // Contact Details\r\n    street: contactDetails[\"street\"],\r\n    apartment: contactDetails[\"apartment\"],\r\n    city: contactDetails[\"city\"],\r\n    state: contactDetails[\"state\"],\r\n    zipCode: contactDetails[\"zipCode\"],\r\n    country: contactDetails[\"country\"],\r\n    primaryCountryCode: contactDetails[\"primaryCountryCode\"],\r\n    primaryPhoneNumber: contactDetails[\"primaryPhoneNumber\"],\r\n    secondaryCountryCode: contactDetails[\"secondaryCountryCode\"],\r\n    secondaryPhoneNumber: contactDetails[\"secondaryPhoneNumber\"],\r\n    contactEmail: contactDetails[\"contactEmail\"],\r\n\r\n    taxFiledLastYear: incomeDetails[\"taxFiledLastYear\"], // Set an initial value for taxFiledLastYear\r\n\r\n    // additional Spouse Details (Initially hidden)\r\n    taxPayerStatus: personalDetails[\"taxPayerStatus\"], // Default to \"No\" (Single)\r\n    spouseFirstName: spouseDetails[\"spouseFirstName\"],\r\n    spouseMiddleInitial: spouseDetails[\"spouseMiddleInitial\"],\r\n    spouseLastName: spouseDetails[\"spouseLastName\"],\r\n    spouseSsnOrItin: spouseDetails[\"spouseSsnOrItin\"],\r\n    spouseApplyForItin: spouseDetails[\"spouseApplyForItin\"], // Default to \"No\"\r\n    spouseDateOfBirth: spouseDetails[\"spouseDateOfBirth\"],\r\n    spouseGender: spouseDetails[\"spouseGender\"],\r\n    spouseOccupation: spouseDetails[\"spouseOccupation\"],\r\n    spouseResidentialStatus: spouseDetails[\"spouseResidentialStatus\"],\r\n    spouseEmail: spouseDetails[\"spouseEmail\"],\r\n\r\n    providedLivingSupport: providedLivingSupport,\r\n\r\n    //Income Details\r\n    interestIncome: incomeDetails[\"interestIncome\"],\r\n    dividendIncome: incomeDetails[\"dividendIncome\"],\r\n    soldStocks: incomeDetails[\"soldStocks\"],\r\n    soldCrypto: incomeDetails[\"soldCrypto\"],\r\n    foreignIncome: incomeDetails[\"foreignIncome\"],\r\n    retirementAccounts: incomeDetails[\"retirementAccounts\"],\r\n    stateTaxRefund: incomeDetails[\"stateTaxRefund\"],\r\n    foreignBankAccount: incomeDetails[\"foreignBankAccount\"],\r\n    foreignAssets: incomeDetails[\"foreignAssets\"],\r\n    rentalIncome: incomeDetails[\"rentalIncome\"],\r\n    income1099: incomeDetails[\"income1099\"],\r\n    otherIncomeDetails: incomeDetails[\"otherIncomeDetails\"],\r\n    addAdditionalInformation: false,\r\n\r\n    //Bank Details\r\n    bankingType: bankDetails[\"bankingType\"],\r\n    bankName: bankDetails[\"bankName\"],\r\n    accountHolderName: bankDetails[\"accountHolderName\"],\r\n    ownership: bankDetails[\"ownership\"],\r\n    routingNumber: bankDetails[\"routingNumber\"],\r\n    confirmRoutingNumber: bankDetails[\"confirmRoutingNumber\"],\r\n    accountNumber: bankDetails[\"accountNumber\"],\r\n    confirmAccountNumber: bankDetails[\"confirmAccountNumber\"],\r\n    accountType: bankDetails[\"accountType\"],\r\n    confirmAccountType: bankDetails[\"confirmAccountType\"],\r\n  });\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        padding: \"20px 0 5px\",\r\n        border: { xs: \"none\", sm: \"1px solid #3A97BB\" },\r\n        minHeight: { xs: \"auto\", sm: \"800px\" },\r\n      }}\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={2}>\r\n          <Grid item lg={6} sm={6} xs={12}>\r\n            <Box className={customStyles.leftSide}>\r\n              <Typography variant=\"h4\" sx={{ marginBottom: \"36px\" }}>\r\n                Personal Details\r\n              </Typography>\r\n\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  flexWrap: \"wrap\",\r\n                  justifyContent: \"space-between\",\r\n                  maxWidth: \"96%\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  color=\"textSecondary\"\r\n                  sx={{ marginTop: \"20px\", maxWidth: \"25%\" }}\r\n                >\r\n                  Taxpayer Name\r\n                  <font color=\"#11a63d\" size=\"2\">\r\n                    (As Per SSN):\r\n                  </font>\r\n                </Typography>\r\n\r\n                <Box>\r\n                  <CustomInputTextField\r\n                    disabled\r\n                    attribute=\"First Name\"\r\n                    attributeTextAlign=\"right\"\r\n                    is_required={true}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    name=\"firstName\"\r\n                    value={formData.firstName}\r\n                    variant=\"outlined\"\r\n                  />\r\n\r\n                  <CustomInputTextField\r\n                    disabled\r\n                    attribute=\"Middle Initial\"\r\n                    attributeTextAlign=\"right\"\r\n                    is_required={false}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    name=\"middleName\"\r\n                    value={formData.middleName}\r\n                    variant=\"outlined\"\r\n                  />\r\n                  <CustomInputTextField\r\n                    disabled\r\n                    attribute=\"Last Name\"\r\n                    attributeTextAlign=\"right\"\r\n                    is_required={true}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    name=\"lastName\"\r\n                    value={formData.lastName}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Box>\r\n              </Box>\r\n\r\n              <CustomInputTextField\r\n                disabled\r\n                attribute=\"SSN\"\r\n                attributeTextAlign=\"right\"\r\n                is_required={true}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                name=\"ssn\"\r\n                value={transform(formData.ssn)}\r\n                variant=\"outlined\"\r\n              />\r\n              <Grid item xs={12}>\r\n                <Grid container>\r\n                  <Grid item xs={10}>\r\n                    <CustomInputTextField\r\n                      disabled\r\n                      attribute=\"Date of Birth\"\r\n                      attributeTextAlign=\"right\"\r\n                      is_required={true}\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      name=\"dateOfBirth\"\r\n                      value={formData.dateOfBirth}\r\n                      variant=\"outlined\"\r\n                      InputLabelProps={{\r\n                        shrink: true, // This is important for the label to behave correctly\r\n                      }}\r\n                      InputProps={{\r\n                        style: {\r\n                          color: \"black\", // Customize the label color\r\n                        },\r\n                      }}\r\n                      inputProps={{\r\n                        // To disable the default placeholder\r\n                        placeholder: \"\",\r\n                        // Other attributes you might need\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={2} sx={{ margin: \"auto 0\" }}>\r\n                    <Typography\r\n                      variant=\"h6\"\r\n                      sx={{\r\n                        color: \"#11a63d\",\r\n                        whiteSpace: \"nowrap\",\r\n                        marginLeft: \"-20px\",\r\n                      }}\r\n                    >\r\n                      [MM/DD/YYYY]\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <CustomInputTextField\r\n                disabled\r\n                attribute=\"Gender\"\r\n                attributeTextAlign=\"right\"\r\n                is_required={true}\r\n                select\r\n                fullWidth\r\n                margin=\"normal\"\r\n                name=\"gender\"\r\n                value={formData.gender}\r\n                variant=\"outlined\"\r\n              >\r\n                <MenuItem value=\"MALE\">Male</MenuItem>\r\n                <MenuItem value=\"FEMALE\">Female</MenuItem>\r\n                <MenuItem value=\"Other\">Other</MenuItem>\r\n              </CustomInputTextField>\r\n              <CustomInputTextField\r\n                disabled\r\n                attribute=\"Occupation / Job Title\"\r\n                attributeTextAlign=\"right\"\r\n                is_required={true}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                name=\"occupation\"\r\n                value={formData.occupation}\r\n                variant=\"outlined\"\r\n              />\r\n              <Grid item xs={12}>\r\n                <Grid container>\r\n                  <Grid item xs={10}>\r\n                    <CustomInputTextField\r\n                      disabled\r\n                      attribute=\"Residential Status\"\r\n                      attributeTextAlign=\"right\"\r\n                      is_required={true}\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      name=\"residentialStatus\"\r\n                      value={formData.residentialStatus}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={2} sx={{ margin: \"auto 0\" }}>\r\n                    <Typography\r\n                      variant=\"h5\"\r\n                      sx={{\r\n                        color: \"#11a63d\",\r\n                        whiteSpace: \"nowrap\",\r\n                        marginLeft: \"-20px\",\r\n                      }}\r\n                    >\r\n                      [VISA TYPE]\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </Grid>\r\n\r\n          {/* Right Side - Contact Details */}\r\n          <Grid item lg={6} sm={6} xs={12}>\r\n            <Box className={customStyles.rightSide}>\r\n              <Typography variant=\"h4\" sx={{ marginBottom: \"16px\" }}>\r\n                Contact Details\r\n              </Typography>\r\n              <Typography\r\n                color={\"#11a63d\"}\r\n                sx={{ marginLeft: \"10px\" }}\r\n                variant=\"h5\"\r\n              >\r\n                (Provide U.S current communication Address)\r\n              </Typography>\r\n              <CustomInputTextField\r\n                attribute=\"Street\"\r\n                is_required={true}\r\n                fullWidth\r\n                name=\"street\"\r\n                value={formData.street}\r\n                variant=\"outlined\"\r\n                disabled\r\n              />\r\n              <CustomInputTextField\r\n                attribute=\"Apartment\"\r\n                is_required={true}\r\n                fullWidth\r\n                name=\"apartment\"\r\n                value={formData.apartment}\r\n                variant=\"outlined\"\r\n                disabled\r\n              />\r\n              <CustomInputTextField\r\n                attribute=\"City\"\r\n                is_required={true}\r\n                fullWidth\r\n                name=\"city\"\r\n                value={formData.city}\r\n                variant=\"outlined\"\r\n                disabled\r\n              />\r\n              <CustomInputTextField\r\n                attribute=\"State\"\r\n                is_required={true}\r\n                select\r\n                fullWidth\r\n                name=\"state\"\r\n                value={formData.state}\r\n                variant=\"outlined\"\r\n                disabled\r\n              >\r\n                {stateOptions.map((option) => (\r\n                  <MenuItem key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </CustomInputTextField>\r\n              <CustomInputTextField\r\n                attribute=\"Zip Code\"\r\n                is_required={true}\r\n                fullWidth\r\n                name=\"zipCode\"\r\n                value={formData.zipCode}\r\n                variant=\"outlined\"\r\n                disabled\r\n              />\r\n              <CustomInputTextField\r\n                attribute=\"Country\"\r\n                is_required={true}\r\n                select\r\n                fullWidth\r\n                name=\"country\"\r\n                value={formData.country}\r\n                variant=\"outlined\"\r\n                disabled\r\n              >\r\n                <MenuItem value=\"USA\">USA</MenuItem>\r\n                <MenuItem value=\"Other\">Other</MenuItem>\r\n              </CustomInputTextField>\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  flexWrap: \"wrap\",\r\n                  justifyContent: \"space-between\",\r\n                  alignItems: \"center\",\r\n                  width: \"93%\",\r\n                  margin: \"10px 0\",\r\n                  maxHeight: \"60px\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  variant=\"body1\"\r\n                  sx={{\r\n                    width: { xs: \"30%\", sm: \"120px\" },\r\n                  }}\r\n                >\r\n                  <span>Primary Phone</span>\r\n                  <span\r\n                    style={{\r\n                      color: \"red\",\r\n                      fontSize: \"0.875rem\",\r\n                      marginLeft: \"3px\",\r\n                    }}\r\n                  >\r\n                    *\r\n                  </span>\r\n                  &nbsp;:\r\n                </Typography>\r\n                <TextField\r\n                  attribute=\"Primary Phone\"\r\n                  select\r\n                  name=\"primaryCountryCode\"\r\n                  value={formData.primaryCountryCode}\r\n                  variant=\"outlined\"\r\n                  disabled\r\n                  sx={{\r\n                    width: \"18%\",\r\n                    \"& .MuiOutlinedInput-root\": {\r\n                      \"& fieldset\": {\r\n                        borderRadius: \"2px\",\r\n                      },\r\n                    },\r\n                    \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\":\r\n                      {\r\n                        border: \"0.1px solid #bdbdbd\",\r\n                      },\r\n                    \"& .MuiOutlinedInput-input\": {\r\n                      padding: \"10px\",\r\n                      backgroundColor: \"rgba(255,255,255,1)\",\r\n                    },\r\n                  }}\r\n                >\r\n                  {countryCodes.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n                <TextField\r\n                  name=\"primaryPhoneNumber\"\r\n                  value={formatPhoneNumber(formData.primaryPhoneNumber)}\r\n                  variant=\"outlined\"\r\n                  disabled\r\n                  sx={{\r\n                    width: { xs: \"50%\", sm: \"165px\" },\r\n                    \"& .MuiOutlinedInput-root\": {\r\n                      \"& fieldset\": {\r\n                        borderRadius: \"2px\",\r\n                      },\r\n                    },\r\n                    \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\":\r\n                      {\r\n                        border: \"0.1px solid #bdbdbd\",\r\n                      },\r\n                    \"& .MuiOutlinedInput-input\": {\r\n                      padding: \"10px\",\r\n                      backgroundColor: \"rgba(255,255,255,1)\",\r\n                    },\r\n                  }}\r\n                />\r\n              </Box>\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  flexWrap: \"wrap\",\r\n                  justifyContent: \"space-between\",\r\n                  alignItems: \"center\",\r\n                  width: \"93%\",\r\n                  margin: \"10px 0\",\r\n                  maxHeight: \"60px\",\r\n                }}\r\n              >\r\n                <Typography\r\n                  variant=\"body1\"\r\n                  sx={{\r\n                    width: { xs: \"30%\", sm: \"120px\" },\r\n                  }}\r\n                >\r\n                  <span>Secondary Phone</span>\r\n                  &nbsp;:\r\n                </Typography>\r\n                <TextField\r\n                  name=\"secondaryCountryCode\"\r\n                  value={formData.secondaryCountryCode}\r\n                  variant=\"outlined\"\r\n                  disabled\r\n                  sx={{\r\n                    width: \"18%\",\r\n                    \"& .MuiOutlinedInput-root\": {\r\n                      \"& fieldset\": {\r\n                        borderRadius: \"2px\",\r\n                      },\r\n                    },\r\n                    \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\":\r\n                      {\r\n                        border: \"0.1px solid #bdbdbd\",\r\n                      },\r\n                    \"& .MuiOutlinedInput-input\": {\r\n                      padding: \"10px\",\r\n                      backgroundColor: \"rgba(255,255,255,1)\",\r\n                    },\r\n                  }}\r\n                >\r\n                  {countryCodes.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n                <TextField\r\n                  attribute=\"Secondary Phone\"\r\n                  name=\"secondaryPhoneNumber\"\r\n                  value={formatPhoneNumber(formData.secondaryPhoneNumber)}\r\n                  variant=\"outlined\"\r\n                  disabled\r\n                  sx={{\r\n                    width: { xs: \"50%\", sm: \"165px\" },\r\n                    \"& .MuiOutlinedInput-root\": {\r\n                      \"& fieldset\": {\r\n                        borderRadius: \"2px\",\r\n                      },\r\n                    },\r\n                    \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\":\r\n                      {\r\n                        border: \"0.1px solid #bdbdbd\",\r\n                      },\r\n                    \"& .MuiOutlinedInput-input\": {\r\n                      padding: \"10px\",\r\n                      backgroundColor: \"rgba(255,255,255,1)\",\r\n                    },\r\n                  }}\r\n                />\r\n              </Box>\r\n              <CustomInputTextField\r\n                attribute=\"Email Id\"\r\n                is_required={true}\r\n                fullWidth\r\n                name=\"contactEmail\"\r\n                value={formData.contactEmail}\r\n                variant=\"outlined\"\r\n                disabled\r\n              />\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Box sx={{ margin: \"16px 0\" }}>\r\n            <Grid container spacing={2}>\r\n              <Grid\r\n                item\r\n                xs={10}\r\n                sm={5}\r\n                style={{ display: \"flex\", alignItems: \"center\" }}\r\n              >\r\n                <Typography variant=\"body1\">\r\n                  <CustomLabel\r\n                    label=\"Have you filed your taxes with Onecall Tax Services in the last year?\"\r\n                    required={true}\r\n                  />\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={2} sm={1}>\r\n                <select\r\n                  id=\"taxFiledLastYear\"\r\n                  name=\"taxFiledLastYear\"\r\n                  value={formData.taxFiledLastYear}\r\n                  style={{ width: \"100%\" }}\r\n                  disabled\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  {/* Add an empty option */}\r\n                  <option value={true}>Yes</option>\r\n                  <option value={false}>No</option>\r\n                </select>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Box sx={{ margin: \"16px 0\" }}>\r\n            <Grid container spacing={2}>\r\n              <Grid\r\n                item\r\n                xs={8}\r\n                sm={5}\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <Typography variant=\"body1\">\r\n                  <CustomLabel label=\"Taxpayer Status\" required={true} />\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={4} sm={1}>\r\n                <select\r\n                  id=\"taxPayerStatus\"\r\n                  name=\"taxPayerStatus\"\r\n                  value={formData.taxPayerStatus}\r\n                  style={{ width: \"100%\" }}\r\n                  disabled\r\n                >\r\n                  <option value=\"\">Select Status</option>{\" \"}\r\n                  {/* Add an empty option */}\r\n                  <option value=\"SINGLE\">Single</option>\r\n                  <option value=\"MARRIED\">Married</option>\r\n                </select>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Grid>\r\n        {formData.taxPayerStatus === \"MARRIED\" && (\r\n          <Grid container spacing={2}>\r\n            {/* Left Side - Spouse Details */}\r\n            <Grid item lg={6} sm={6} xs={12}>\r\n              <Typography variant=\"h4\" mb={2}>\r\n                Spouse Details\r\n              </Typography>\r\n              <Grid container spacing={2}>\r\n                <CustomInputTextField\r\n                  attribute=\"First Name\"\r\n                  is_required={true}\r\n                  attributeMarginTop=\"8px\"\r\n                  fullWidth\r\n                  name=\"spouseFirstName\"\r\n                  value={formData.spouseFirstName}\r\n                  variant=\"outlined\"\r\n                  disabled\r\n                />\r\n\r\n                <CustomInputTextField\r\n                  attribute=\"Middle Initial\"\r\n                  is_required={false}\r\n                  attributeMarginTop=\"8px\"\r\n                  fullWidth\r\n                  name=\"spouseMiddleInitial\"\r\n                  value={formData.spouseMiddleInitial}\r\n                  variant=\"outlined\"\r\n                  disabled\r\n                />\r\n\r\n                <CustomInputTextField\r\n                  attribute=\"Last Name\"\r\n                  is_required={true}\r\n                  attributeMarginTop=\"8px\"\r\n                  fullWidth\r\n                  name=\"spouseLastName\"\r\n                  value={formData.spouseLastName}\r\n                  variant=\"outlined\"\r\n                  disabled\r\n                />\r\n\r\n                <CustomInputTextField\r\n                  attribute=\"SSN/ITIN\"\r\n                  is_required={true}\r\n                  attributeMarginTop=\"8px\"\r\n                  fullWidth\r\n                  name=\"spouseSsnOrItin\"\r\n                  value={transform(formData.spouseSsnOrItin)}\r\n                  variant=\"outlined\"\r\n                  disabled\r\n                />\r\n\r\n                <CustomInputTextField\r\n                  attribute=\"Do you want to apply for ITIN?\"\r\n                  is_required={true}\r\n                  attributeMarginTop=\"8px\"\r\n                  select\r\n                  fullWidth\r\n                  name=\"spouseApplyForItin\"\r\n                  value={formData.spouseApplyForItin}\r\n                  variant=\"outlined\"\r\n                  disabled\r\n                >\r\n                  <MenuItem value={false}>No</MenuItem>\r\n                  <MenuItem value={true}>Yes</MenuItem>\r\n                </CustomInputTextField>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* Right Side - Spouse Contact */}\r\n            <Grid item lg={6} sm={6} xs={12}>\r\n              <Typography variant=\"h4\" mb={2}>\r\n                Spouse Contact\r\n              </Typography>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <Grid container>\r\n                    <Grid item xs={10}>\r\n                      <CustomInputTextField\r\n                        disabled\r\n                        attribute=\"Date of Birth\"\r\n                        is_required={true}\r\n                        margin=\"normal\"\r\n                        name=\"spouseDateOfBirth\"\r\n                        fullWidth\r\n                        value={formData.spouseDateOfBirth}\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{\r\n                          shrink: true, // This is important for the label to behave correctly\r\n                        }}\r\n                        InputProps={{\r\n                          style: {\r\n                            color: \"black\", // Customize the label color\r\n                          },\r\n                        }}\r\n                        inputProps={{\r\n                          // To disable the default placeholder\r\n                          placeholder: \"\",\r\n                          // Other attributes you might need\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={2} sx={{ margin: \"auto 0\" }}>\r\n                      <Typography\r\n                        variant=\"h6\"\r\n                        sx={{\r\n                          color: \"#11a63d\",\r\n                          whiteSpace: \"nowrap\",\r\n                          marginLeft: \"-20px\",\r\n                        }}\r\n                      >\r\n                        [MM/DD/YYYY]\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <CustomInputTextField\r\n                  attribute=\"Gender\"\r\n                  is_required={true}\r\n                  attributeMarginTop=\"8px\"\r\n                  select\r\n                  fullWidth\r\n                  name=\"spouseGender\"\r\n                  value={formData.spouseGender}\r\n                  variant=\"outlined\"\r\n                  disabled\r\n                >\r\n                  <MenuItem value=\"MALE\">Male</MenuItem>\r\n                  <MenuItem value=\"FEMALE\">Female</MenuItem>\r\n                  <MenuItem value=\"Other\">Other</MenuItem>\r\n                </CustomInputTextField>\r\n\r\n                <CustomInputTextField\r\n                  attribute=\"Occupation / Job Title\"\r\n                  is_required={true}\r\n                  attributeMarginTop=\"8px\"\r\n                  fullWidth\r\n                  name=\"spouseOccupation\"\r\n                  value={formData.spouseOccupation}\r\n                  variant=\"outlined\"\r\n                  disabled\r\n                />\r\n\r\n                <CustomInputTextField\r\n                  attribute=\"Residential Status\"\r\n                  is_required={true}\r\n                  attributeMarginTop=\"8px\"\r\n                  fullWidth\r\n                  name=\"spouseResidentialStatus\"\r\n                  value={formData.spouseResidentialStatus}\r\n                  variant=\"outlined\"\r\n                  disabled\r\n                />\r\n\r\n                <CustomInputTextField\r\n                  attribute=\"Email Id\"\r\n                  is_required={true}\r\n                  attributeMarginTop=\"8px\"\r\n                  fullWidth\r\n                  name=\"spouseEmail\"\r\n                  value={formData.spouseEmail}\r\n                  variant=\"outlined\"\r\n                  disabled\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n        <Grid container>\r\n          <Grid\r\n            container\r\n            sx={{\r\n              marginTop: \"36px\",\r\n              marginBottom: \"24px\",\r\n            }}\r\n          >\r\n            <Grid\r\n              item\r\n              xs={10}\r\n              sm={9}\r\n              sx={{ display: \"flex\", alignItems: \"center\" }}\r\n            >\r\n              <Typography variant=\"body1\">\r\n                <CustomLabel\r\n                  label=\" Have you (or your spouse, if married) provided living\r\n                        support to your kids and/or dependents during the tax\r\n                        year?\"\r\n                />\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n              <CustomInputTextField\r\n                attribute=\"\"\r\n                is_required={true}\r\n                // label={<CustomLabel label=\"\" />}\r\n                select\r\n                margin=\"normal\"\r\n                name=\"providedLivingSupport\"\r\n                value={formData.providedLivingSupport}\r\n                variant=\"outlined\"\r\n                disabled\r\n              >\r\n                <MenuItem value={true}>Yes</MenuItem>\r\n                <MenuItem value={false}>No</MenuItem>\r\n              </CustomInputTextField>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid>\r\n            <Typography\r\n              variant=\"body1\"\r\n              style={{ color: \"blue\", wordSpacing: \"2px\" }}\r\n            >\r\n              NOTE: Make sure the kids or dependants reported in your (Taxpayer)\r\n              2023 Tax Return are not claimed as dependants in any other 2023\r\n              Individual Tax Returns.\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TableContainer\r\n            sx={{\r\n              marginTop: \"32px\",\r\n              marginBottom: \"16px\",\r\n              paddingBottom: { xs: \"10px\", sm: \"0px\" },\r\n            }}\r\n          >\r\n            <Typography variant=\"h4\">Dependents Details</Typography>\r\n            <Table\r\n              sx={{\r\n                borderCollapse: \"collapse\",\r\n              }}\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    Name\r\n                  </TableCell>\r\n\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    Relationship\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    SSN/ITIN\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    Apply ?\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    DOB\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    Visa Type\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    C.S\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    Months\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {dependantDetails.length > 0 &&\r\n                  dependantDetails.map((row, index) => (\r\n                    <TableRow key={index}>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        {row.additionalFirstName} {row.additionalLastName}\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        {row.additionalRelationship}\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        {transform(row.additionalSsnOrItin)}\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        {row.additionalApplyForItin ? \"YES\" : \"NO\"}\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        {row.additionalDateOfBirth}\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        {row.additionalVisaType}\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        USA\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        {row.additionalStayCount}\r\n                      </TableCell>\r\n\r\n                      <TableCell className={customStyles.mobileView}>\r\n                        <Box>\r\n                          <Box\r\n                            sx={{\r\n                              display: \"flex\",\r\n                              flexWrap: \"wrap\",\r\n                              justifyContent: \"space-between\",\r\n                              marginTop: \"16px\",\r\n                            }}\r\n                          >\r\n                            <Box sx={{ marginTop: \"3px\" }}>\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellHeader\r\n                                }\r\n                              >\r\n                                First Name\r\n                              </Typography>\r\n\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellValue\r\n                                }\r\n                              >\r\n                                {row.additionalFirstName}\r\n                              </Typography>\r\n                            </Box>\r\n                            <Box sx={{ marginTop: \"3px\" }}>\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellHeader\r\n                                }\r\n                              >\r\n                                Last Name\r\n                              </Typography>\r\n\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellValue\r\n                                }\r\n                              >\r\n                                {row.additionalLastName}\r\n                              </Typography>\r\n                            </Box>\r\n                            <Box sx={{ marginTop: \"3px\" }}>\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellHeader\r\n                                }\r\n                              >\r\n                                RelationShip\r\n                              </Typography>\r\n\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellValue\r\n                                }\r\n                              >\r\n                                {row.additionalRelationship}\r\n                              </Typography>\r\n                            </Box>\r\n                          </Box>\r\n                          <Box\r\n                            sx={{\r\n                              display: \"flex\",\r\n                              flexWrap: \"wrap\",\r\n                              justifyContent: \"space-between\",\r\n                              marginTop: \"16px\",\r\n                            }}\r\n                          >\r\n                            <Box sx={{ marginTop: \"3px\" }}>\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellHeader\r\n                                }\r\n                              >\r\n                                Visa Type\r\n                              </Typography>\r\n\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellValue\r\n                                }\r\n                              >\r\n                                {row.additionalVisaType}\r\n                              </Typography>\r\n                            </Box>\r\n\r\n                            <Box sx={{ marginTop: \"3px\" }}>\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellHeader\r\n                                }\r\n                              >\r\n                                SSN/ITIN\r\n                              </Typography>\r\n\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellValue\r\n                                }\r\n                              >\r\n                                {transform(row.additionalSsnOrItin)}\r\n                              </Typography>\r\n                            </Box>\r\n                          </Box>\r\n                        </Box>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n            {dependantDetails.length === 0 && (\r\n              <Typography\r\n                variant=\"h5\"\r\n                sx={{ textAlign: \"center\", margin: \"10px 0\" }}\r\n              >\r\n                No Dependants Found\r\n              </Typography>\r\n            )}\r\n          </TableContainer>\r\n        </Grid>\r\n        <Grid container spacing={2}>\r\n          {/* Interest Income */}\r\n          <Grid item sm={12} xs={12}>\r\n            <FormControl\r\n              component=\"fieldset\"\r\n              sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                flexWrap: \"wrap\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"flex-start\",\r\n              }}\r\n            >\r\n              <FormLabel\r\n                sx={{\r\n                  width: \"550px\", // Set the width here\r\n                }}\r\n              >\r\n                Do you have any Interest Income?\r\n              </FormLabel>\r\n              <RadioGroup\r\n                name=\"interestIncome\"\r\n                value={formData.interestIncome}\r\n                sx={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                }}\r\n              >\r\n                <FormControlLabel\r\n                  value={true}\r\n                  control={<Radio />}\r\n                  label=\"Yes\"\r\n                />\r\n                <FormControlLabel\r\n                  value={false}\r\n                  control={<Radio />}\r\n                  label=\"No\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          {/* Dividend Income */}\r\n          <Grid item sm={12} xs={12}>\r\n            <FormControl\r\n              component=\"fieldset\"\r\n              sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                flexWrap: \"wrap\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"flex-start\",\r\n              }}\r\n            >\r\n              <FormLabel\r\n                sx={{\r\n                  width: \"550px\", // Set the width here\r\n                }}\r\n              >\r\n                Do you have any Dividend Income?\r\n              </FormLabel>\r\n              <RadioGroup\r\n                name=\"dividendIncome\"\r\n                value={formData.dividendIncome}\r\n                disabled\r\n                sx={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                }}\r\n              >\r\n                <FormControlLabel\r\n                  value={true}\r\n                  control={<Radio />}\r\n                  label=\"Yes\"\r\n                />\r\n                <FormControlLabel\r\n                  value={false}\r\n                  control={<Radio />}\r\n                  label=\"No\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          {/* Sold Stocks */}\r\n          <Grid item sm={12} xs={12}>\r\n            <FormControl\r\n              component=\"fieldset\"\r\n              sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                flexWrap: \"wrap\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"flex-start\",\r\n              }}\r\n            >\r\n              <FormLabel\r\n                sx={{\r\n                  width: \"550px\", // Set the width here\r\n                }}\r\n              >\r\n                Did you sell any stocks in 2023?\r\n              </FormLabel>\r\n              <RadioGroup\r\n                name=\"soldStocks\"\r\n                value={formData.soldStocks}\r\n                disabled\r\n                sx={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                }}\r\n              >\r\n                <FormControlLabel\r\n                  value={true}\r\n                  control={<Radio />}\r\n                  label=\"Yes\"\r\n                />\r\n                <FormControlLabel\r\n                  value={false}\r\n                  control={<Radio />}\r\n                  label=\"No\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          {/* Sold Crypto */}\r\n          <Grid item sm={12} xs={12}>\r\n            <FormControl\r\n              component=\"fieldset\"\r\n              sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                flexWrap: \"wrap\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"flex-start\",\r\n              }}\r\n            >\r\n              <FormLabel\r\n                sx={{\r\n                  width: \"550px\", // Set the width here\r\n                }}\r\n              >\r\n                Did you sell any Crypto Currency in 2023?\r\n              </FormLabel>\r\n              <RadioGroup\r\n                name=\"soldCrypto\"\r\n                value={formData.soldCrypto}\r\n                disabled\r\n                sx={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                }}\r\n              >\r\n                <FormControlLabel\r\n                  value={true}\r\n                  control={<Radio />}\r\n                  label=\"Yes\"\r\n                />\r\n                <FormControlLabel\r\n                  value={false}\r\n                  control={<Radio />}\r\n                  label=\"No\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n          {/* Foreign Income */}\r\n          <Grid item sm={12} xs={12}>\r\n            <FormControl\r\n              component=\"fieldset\"\r\n              sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                flexWrap: \"wrap\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"flex-start\",\r\n              }}\r\n            >\r\n              <FormLabel\r\n                sx={{\r\n                  width: \"550px\", // Set the width here\r\n                }}\r\n              >\r\n                Do you have any foreign country income in 2023?\r\n              </FormLabel>\r\n              <RadioGroup\r\n                name=\"foreignIncome\"\r\n                value={formData.foreignIncome}\r\n                disabled\r\n                sx={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                }}\r\n              >\r\n                <FormControlLabel\r\n                  value={true}\r\n                  control={<Radio />}\r\n                  label=\"Yes\"\r\n                />\r\n                <FormControlLabel\r\n                  value={false}\r\n                  control={<Radio />}\r\n                  label=\"No\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          {/* Contributions/Distributions */}\r\n          <Grid item sm={12} xs={12}>\r\n            <FormControl\r\n              component=\"fieldset\"\r\n              sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                flexWrap: \"wrap\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"flex-start\",\r\n              }}\r\n            >\r\n              <FormLabel\r\n                sx={{\r\n                  width: \"550px\", // Set the width here\r\n                }}\r\n              >\r\n                Do you have contributions/distributions to/from retirement\r\n                accounts in year 2023?\r\n              </FormLabel>\r\n              <RadioGroup\r\n                name=\"retirementAccounts\"\r\n                value={formData.retirementAccounts}\r\n                disabled\r\n                sx={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                }}\r\n              >\r\n                <FormControlLabel\r\n                  value={true}\r\n                  control={<Radio />}\r\n                  label=\"Yes\"\r\n                />\r\n                <FormControlLabel\r\n                  value={false}\r\n                  control={<Radio />}\r\n                  label=\"No\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          {/* State Tax Refund */}\r\n          <Grid item sm={12} xs={12}>\r\n            <FormControl\r\n              component=\"fieldset\"\r\n              sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                flexWrap: \"wrap\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"flex-start\",\r\n              }}\r\n            >\r\n              <FormLabel\r\n                sx={{\r\n                  width: \"550px\", // Set the width here\r\n                }}\r\n              >\r\n                Did you get State tax refund(s) in 2023?\r\n              </FormLabel>\r\n              <RadioGroup\r\n                name=\"stateTaxRefund\"\r\n                value={formData.stateTaxRefund}\r\n                disabled\r\n                sx={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                }}\r\n              >\r\n                <FormControlLabel\r\n                  value={true}\r\n                  control={<Radio />}\r\n                  label=\"Yes\"\r\n                />\r\n                <FormControlLabel\r\n                  value={false}\r\n                  control={<Radio />}\r\n                  label=\"No\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          {/* Foreign Bank Account */}\r\n          <Grid item sm={12} xs={12}>\r\n            <FormControl\r\n              component=\"fieldset\"\r\n              sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                flexWrap: \"wrap\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"flex-start\",\r\n              }}\r\n            >\r\n              <FormLabel\r\n                sx={{\r\n                  width: \"550px\", // Set the width here\r\n                }}\r\n              >\r\n                Do you have Account Balance in Foreign banks exceeding more than\r\n                $10,000?\r\n              </FormLabel>\r\n              <RadioGroup\r\n                name=\"foreignBankAccount\"\r\n                value={formData.foreignBankAccount}\r\n                disabled\r\n                sx={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                }}\r\n              >\r\n                <FormControlLabel\r\n                  value={true}\r\n                  control={<Radio />}\r\n                  label=\"Yes\"\r\n                />\r\n                <FormControlLabel\r\n                  value={false}\r\n                  control={<Radio />}\r\n                  label=\"No\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          {/* Foreign Assets */}\r\n          <Grid item sm={12} xs={12}>\r\n            <FormControl\r\n              component=\"fieldset\"\r\n              sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                flexWrap: \"wrap\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"flex-start\",\r\n              }}\r\n            >\r\n              <FormLabel\r\n                sx={{\r\n                  width: \"550px\", // Set the width here\r\n                }}\r\n              >\r\n                Do you have Foreign Assets value more than $50,000 at any time\r\n                during the tax year?\r\n              </FormLabel>\r\n              <RadioGroup\r\n                name=\"foreignAssets\"\r\n                value={formData.foreignAssets}\r\n                disabled\r\n                sx={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                }}\r\n              >\r\n                <FormControlLabel\r\n                  value={true}\r\n                  control={<Radio />}\r\n                  label=\"Yes\"\r\n                />\r\n                <FormControlLabel\r\n                  value={false}\r\n                  control={<Radio />}\r\n                  label=\"No\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          {/* Rental Income */}\r\n          <Grid item sm={12} xs={12}>\r\n            <FormControl\r\n              component=\"fieldset\"\r\n              sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                flexWrap: \"wrap\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"flex-start\",\r\n              }}\r\n            >\r\n              <FormLabel\r\n                sx={{\r\n                  width: \"550px\", // Set the width here\r\n                }}\r\n              >\r\n                Do you have Rental Income in Foreign Country/USA?\r\n              </FormLabel>\r\n              <RadioGroup\r\n                name=\"rentalIncome\"\r\n                value={formData.rentalIncome}\r\n                disabled\r\n                sx={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                }}\r\n              >\r\n                <FormControlLabel\r\n                  value={true}\r\n                  control={<Radio />}\r\n                  label=\"Yes\"\r\n                />\r\n                <FormControlLabel\r\n                  value={false}\r\n                  control={<Radio />}\r\n                  label=\"No\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          {/* 1099-Misc/1099-NEC Income */}\r\n          <Grid item sm={12} xs={12}>\r\n            <FormControl\r\n              component=\"fieldset\"\r\n              sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                flexWrap: \"wrap\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"flex-start\",\r\n              }}\r\n            >\r\n              <FormLabel\r\n                sx={{\r\n                  width: \"550px\", // Set the width here\r\n                }}\r\n              >\r\n                Do you have 1099-Misc/1099-NEC Income in year 2023?\r\n              </FormLabel>\r\n              <RadioGroup\r\n                name=\"income1099\"\r\n                value={formData.income1099}\r\n                disabled\r\n                sx={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                }}\r\n              >\r\n                <FormControlLabel\r\n                  value={true}\r\n                  control={<Radio />}\r\n                  label=\"Yes\"\r\n                />\r\n                <FormControlLabel\r\n                  value={false}\r\n                  control={<Radio />}\r\n                  label=\"No\"\r\n                />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          <Grid\r\n            container\r\n            spacing={2}\r\n            sx={{\r\n              marginTop: \"30px\",\r\n              marginBottom: \"30px\",\r\n              marginLeft: \"0px\",\r\n            }}\r\n          >\r\n            <Grid item xs={12}>\r\n              <TableContainer\r\n                sx={{\r\n                  paddingBottom: { xs: \"10px\", sm: \"0px\" },\r\n                }}\r\n              >\r\n                <Typography variant=\"h4\" sx={{ marginTop: \"20px\" }}>\r\n                  Other Income Details\r\n                </Typography>\r\n                <Table\r\n                  sx={{\r\n                    borderCollapse: \"collapse\",\r\n                  }}\r\n                >\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell className={customStyles.tableHeader}>\r\n                        Income Description\r\n                      </TableCell>\r\n\r\n                      <TableCell className={customStyles.tableHeader}>\r\n                        Income Amount\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {formData.otherIncomeDetails.length > 0 &&\r\n                      formData.otherIncomeDetails.map((row, index) => (\r\n                        <TableRow key={index}>\r\n                          <TableCell className={customStyles.tableData}>\r\n                            {row.incomeDescription}\r\n                          </TableCell>\r\n                          <TableCell className={customStyles.tableData}>\r\n                            {row.incomeAmount}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                  </TableBody>\r\n                </Table>\r\n\r\n                {formData.otherIncomeDetails.length === 0 && (\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    sx={{ textAlign: \"center\", margin: \"5px 0\" }}\r\n                  >\r\n                    No Other Incomes Found\r\n                  </Typography>\r\n                )}\r\n              </TableContainer>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={2} sx={{ marginLeft: \"0px\" }}>\r\n          <Typography variant=\"h4\" sx={{ marginTop: \"30px\" }}>\r\n            Important Note\r\n          </Typography>\r\n          <Typography\r\n            sx={{\r\n              marginTop: \"30px\",\r\n              wordSpacing: \"2px\",\r\n            }}\r\n          >\r\n            The IRS and certain State Revenue Departments facilitate DIRECT\r\n            DEPOSIT / WITHDRAWAL of Tax Refund or Tax Dues on the Tax Returns.\r\n            If you are interested in availing this option, we request you to\r\n            kindly input the following details.\r\n          </Typography>\r\n\r\n          <Grid container sx={{ marginBottom: \"30px\", marginTop: \"30px\" }}>\r\n            <Grid\r\n              item\r\n              xs={10}\r\n              sm={4}\r\n              style={{ display: \"flex\", alignItems: \"center\" }}\r\n            >\r\n              <Typography variant=\"body1\">\r\n                I prefer to receive my tax refunds by way of\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={2} sm={4}>\r\n              <select\r\n                id=\"bankingType\"\r\n                name=\"bankingType\"\r\n                value={formData.bankingType}\r\n                style={{ width: \"100%\" }}\r\n                disabled\r\n              >\r\n                <option value=\"\">Select Option</option>\r\n                <option value=\"DIRECT DEPOSIT INTO MY BANK ACCOUNT\">\r\n                  Direct deposit into my bank account\r\n                </option>\r\n                <option value=\"PAPER CHECK\">Paper Check</option>\r\n              </select>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {formData.bankingType === \"DIRECT DEPOSIT INTO MY BANK ACCOUNT\" && (\r\n          <Grid item xs={12}>\r\n            {/* Additional Fields for Direct Deposit */}\r\n            <Typography\r\n              variant=\"h5\"\r\n              sx={{ marginTop: \"30px\", marginLeft: \"15px\" }}\r\n            >\r\n              Direct Deposit Information\r\n            </Typography>\r\n            <Typography sx={{ marginTop: \"30px\", marginLeft: \"15px\" }}>\r\n              Note : Please understand that there is no risk by entering Bank\r\n              Account and Routing Numbers\r\n            </Typography>\r\n            <Grid\r\n              container\r\n              spacing={2}\r\n              sx={{\r\n                border: \"1px solid #000000\",\r\n                padding: \"20px\",\r\n                marginBottom: \"20px\",\r\n                backgroundColor: \"#C7DFF0\",\r\n              }}\r\n            >\r\n              <Grid item lg={6} sm={6} xs={12}>\r\n                <CustomInputTextField\r\n                  attribute=\"Bank Name\"\r\n                  is_required={false}\r\n                  margin=\"normal\"\r\n                  name=\"bankName\"\r\n                  fullWidth\r\n                  value={formData.bankName}\r\n                  variant=\"outlined\"\r\n                  disabled={formData.bankingType === \"PAPER CHECK\"}\r\n                />\r\n                <CustomInputTextField\r\n                  attribute=\"Account Number\"\r\n                  is_required={false}\r\n                  margin=\"normal\"\r\n                  name=\"accountNumber\"\r\n                  fullWidth\r\n                  value={formData.accountNumber}\r\n                  variant=\"outlined\"\r\n                  disabled={formData.bankingType === \"PAPER CHECK\"}\r\n                />\r\n                <CustomInputTextField\r\n                  attribute=\"Routing Number\"\r\n                  is_required={false}\r\n                  margin=\"normal\"\r\n                  name=\"routingNumber\"\r\n                  fullWidth\r\n                  value={formData.routingNumber}\r\n                  variant=\"outlined\"\r\n                  disabled={formData.bankingType === \"PAPER CHECK\"}\r\n                />\r\n                <CustomInputTextField\r\n                  attribute=\"Account Type\"\r\n                  is_required={false}\r\n                  margin=\"normal\"\r\n                  name=\"accountType\"\r\n                  select\r\n                  fullWidth\r\n                  value={formData.accountType}\r\n                  variant=\"outlined\"\r\n                  disabled={formData.bankingType === \"PAPER CHECK\"}\r\n                >\r\n                  <MenuItem value=\"SAVINGS\">Savings</MenuItem>\r\n                  <MenuItem value=\"CHECKING\">Checking</MenuItem>\r\n                </CustomInputTextField>\r\n                <CustomInputTextField\r\n                  attribute=\"Ownership\"\r\n                  is_required={false}\r\n                  margin=\"normal\"\r\n                  name=\"ownership\"\r\n                  select\r\n                  fullWidth\r\n                  value={formData.ownership}\r\n                  variant=\"outlined\"\r\n                  disabled={formData.bankingType === \"PAPER CHECK\"}\r\n                >\r\n                  <MenuItem value=\"TAXPAYER\">Tax Payer</MenuItem>\r\n                  <MenuItem value=\"SPOUSE\">Spouse</MenuItem>\r\n                  <MenuItem value=\"JOINT\">Joint</MenuItem>\r\n                </CustomInputTextField>\r\n              </Grid>\r\n              <Grid item lg={6} sm={6} xs={12}>\r\n                <CustomInputTextField\r\n                  attribute=\"Account Holder Name\"\r\n                  is_required={false}\r\n                  margin=\"normal\"\r\n                  name=\"accountHolderName\"\r\n                  fullWidth\r\n                  value={formData.accountHolderName}\r\n                  variant=\"outlined\"\r\n                  disabled={formData.bankingType === \"PAPER CHECK\"}\r\n                />\r\n                <CustomInputTextField\r\n                  attribute=\"Confirm Account Number\"\r\n                  is_required={false}\r\n                  margin=\"normal\"\r\n                  name=\"confirmAccountNumber\"\r\n                  fullWidth\r\n                  value={formData.confirmAccountNumber}\r\n                  variant=\"outlined\"\r\n                  disabled={formData.bankingType === \"PAPER CHECK\"}\r\n                />\r\n                <CustomInputTextField\r\n                  attribute=\"Confirm Routing Number\"\r\n                  is_required={false}\r\n                  margin=\"normal\"\r\n                  name=\"confirmRoutingNumber\"\r\n                  fullWidth\r\n                  value={formData.confirmRoutingNumber}\r\n                  variant=\"outlined\"\r\n                  disabled={formData.bankingType === \"PAPER CHECK\"}\r\n                />\r\n                <CustomInputTextField\r\n                  attribute=\"Confirm Account Type\"\r\n                  is_required={false}\r\n                  margin=\"normal\"\r\n                  name=\"confirmAccountType\"\r\n                  select\r\n                  fullWidth\r\n                  value={formData.confirmAccountType}\r\n                  variant=\"outlined\"\r\n                  disabled={formData.bankingType === \"PAPER CHECK\"}\r\n                >\r\n                  <MenuItem value=\"SAVINGS\">Savings</MenuItem>\r\n                  <MenuItem value=\"CHECKING\">Checking</MenuItem>\r\n                </CustomInputTextField>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => handlePickAppointment(\"Pick Appointment\")}\r\n            sx={{ display: { xs: \"none\", sm: \"block\", margin: \"20px 0\" } }}\r\n          >\r\n            Confirm Personal Details To Pick An Appointment\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => handlePickAppointment(\"panel6\")}\r\n            sx={{ display: { xs: \"block\", sm: \"none\" } }}\r\n          >\r\n            Confirm Personal Details To Pick An Appointment\r\n          </Button>\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ConfirmDetails;\r\n","import { Container, Typography, Box, Paper, Grid } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nconst RefundQuote = ({ open }) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        padding: \"20px 0 5px\",\r\n        border: { xs: \"none\", sm: \"1px solid #3A97BB\" },\r\n        minHeight: { xs: \"auto\", sm: \"800px\" },\r\n      }}\r\n    >\r\n      {\" \"}\r\n      <Container maxWidth=\"lg\">\r\n        <Paper elevation={3} style={{ padding: \"16px\" }}>\r\n          <Grid container alignItems=\"center\" justifyContent=\"center\">\r\n            <Grid item>\r\n              <Typography variant=\"h5\" color=\"error\" align=\"center\">\r\n                Refund Quote will be available after a telephone call with Tax\r\n                Consultant.\r\n              </Typography>\r\n              <Box mt={2}>\r\n                <Typography variant=\"h5\" color=\"error\" align=\"center\">\r\n                  You will be receiving an email as soon as the Refund quote is\r\n                  ready.\r\n                </Typography>\r\n              </Box>\r\n              <Box mt={2}>\r\n                <Typography variant=\"h5\" color=\"error\" align=\"center\">\r\n                  Please visit the Refund Quote section later.\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default RefundQuote;\r\n","import React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Accordion from \"@mui/material/Accordion\";\r\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport { Grid, Box, Avatar, Typography } from \"@mui/material\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport BankDetails from \"./Forms/BankDetails\";\r\nimport FilerDetails from \"./Forms/FilerDetails\";\r\nimport IncomeDetails from \"./Forms/IncomeDetails\";\r\nimport PickAppointment from \"./Forms/PickAppointment\";\r\nimport UploadTaxDocs from \"./Forms/TaxDocs\";\r\nimport TaxReturns from \"./Forms/TaxReturns\";\r\nimport PayPalPayment from \"../Home/payPalPayment\";\r\nimport ConfirmDetails from \"./Forms/ConfirmDetails\";\r\nimport RefundQuote from \"./Forms/RefundQuote\";\r\n\r\nconst customTextStyles = makeStyles((theme) => ({\r\n  accordion: {\r\n    marginBottom: \"8px\",\r\n    borderRadius: \"10px\",\r\n    \"&.MuiPaper-elevation\": {\r\n      boxShadow: \"none !important\",\r\n    },\r\n    \"&:before\": {\r\n      backgroundColor: \"transparent !important\",\r\n    },\r\n  },\r\n  accordionHeader: {\r\n    opacity: 1,\r\n    paddingLeft: \"12px\",\r\n    paddingTop: \"8px\",\r\n    paddingBottom: \"8px\",\r\n    maxHeight: \"60px\",\r\n  },\r\n  accordionHeaderText: {\r\n    fontSize: \"16px\",\r\n    lineHeight: \"24px\",\r\n    color: \"#474747\",\r\n  },\r\n  accordionColumn: {\r\n    marginTop: \"24px\",\r\n  },\r\n  accordionColumnHeaderText: {\r\n    fontSize: \"16px\",\r\n    lineHeight: \"24px\",\r\n    fontWeight: \"600\",\r\n    marginTop: \"10px\",\r\n    marginBottom: \"4px\",\r\n  },\r\n  accordionColumnText: {\r\n    fontSize: \"13px\",\r\n    lineHeight: \"19px\",\r\n    fontWeight: \"400\",\r\n  },\r\n  footerText: {\r\n    opacity: 0.8,\r\n    fontSize: \"11px\",\r\n    fontWeight: 400,\r\n    lineHeight: \"19px\",\r\n    marginTop: \"26px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  collpaseIcon: {\r\n    // height: \"9px\",\r\n    // width: \"9px\",\r\n    opacity: 1,\r\n    color: \"#474747\",\r\n  },\r\n}));\r\n\r\nconst BasicAccordion = ({ data, handleFetchData, handleDownloadTemplate }) => {\r\n  const customTextClasses = customTextStyles();\r\n  const params = useParams();\r\n  const [expanded, setExpanded] =\r\n    parseInt(params.action) === 7 ? useState(\"panel7\") : useState(false);\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    console.log(panel);\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  const handlePickAppointment = () => {\r\n    setExpanded(\"panel6\");\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Accordion\r\n        expanded={expanded === \"panel1\"}\r\n        onChange={handleChange(\"panel1\")}\r\n        className={customTextClasses.accordion}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n          className={customTextClasses.accordionHeader}\r\n        >\r\n          <Typography\r\n            className={customTextClasses.accordionHeaderText}\r\n            sx={{ fontWeight: expanded === \"panel1\" ? \"600\" : \"400\" }}\r\n          >\r\n            Filer Details\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <FilerDetails\r\n            open={expanded === \"panel1\"}\r\n            id={data[\"id\"]}\r\n            personalDetails={data[\"personalDetails\"]}\r\n            contactDetails={data[\"contactDetails\"]}\r\n            spouseDetails={data[\"spouseDetails\"]}\r\n            incomeDetails={data[\"incomeDetails\"]}\r\n            providedLivingSupport={data[\"providedLivingSupport\"]}\r\n            handleFetchData={handleFetchData}\r\n            handleDownloadTemplate={handleDownloadTemplate}\r\n          />\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion\r\n        expanded={expanded === \"panel2\"}\r\n        onChange={handleChange(\"panel2\")}\r\n        className={customTextClasses.accordion}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel2a-content\"\r\n          id=\"panel2a-header\"\r\n          className={customTextClasses.accordionHeader}\r\n        >\r\n          <Typography\r\n            className={customTextClasses.accordionHeaderText}\r\n            sx={{ fontWeight: expanded === \"panel2\" ? \"600\" : \"400\" }}\r\n          >\r\n            Income Details\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\r\n          <IncomeDetails\r\n            open={expanded === \"panel2\"}\r\n            id={data[\"id\"]}\r\n            data={data[\"incomeDetails\"]}\r\n            handleFetchData={handleFetchData}\r\n            handleDownloadTemplate={handleDownloadTemplate}\r\n          />\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion\r\n        expanded={expanded === \"panel3\"}\r\n        onChange={handleChange(\"panel3\")}\r\n        className={customTextClasses.accordion}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel3a-content\"\r\n          id=\"panel3a-header\"\r\n          className={customTextClasses.accordionHeader}\r\n        >\r\n          <Typography\r\n            className={customTextClasses.accordionHeaderText}\r\n            sx={{ fontWeight: expanded === \"panel3\" ? \"600\" : \"400\" }}\r\n          >\r\n            Bank Details\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\", paddingLeft: \"0px\" }}>\r\n          <BankDetails\r\n            open={expanded === \"panel3\"}\r\n            id={data[\"id\"]}\r\n            data={data[\"bankDetails\"]}\r\n            handleFetchData={handleFetchData}\r\n          />\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion\r\n        expanded={expanded === \"panel4\"}\r\n        onChange={handleChange(\"panel4\")}\r\n        className={customTextClasses.accordion}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel4a-content\"\r\n          id=\"panel4a-header\"\r\n          className={customTextClasses.accordionHeader}\r\n        >\r\n          Upload Tax Docs\r\n        </AccordionSummary>\r\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\r\n          <UploadTaxDocs open={expanded === \"panel4\"} id={data[\"id\"]} />\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion\r\n        expanded={expanded === \"panel5\"}\r\n        onChange={handleChange(\"panel5\")}\r\n        className={customTextClasses.accordion}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel5a-content\"\r\n          id=\"panel5a-header\"\r\n          className={customTextClasses.accordionHeader}\r\n        >\r\n          <Typography\r\n            className={customTextClasses.accordionHeaderText}\r\n            sx={{ fontWeight: expanded === \"panel5\" ? \"600\" : \"400\" }}\r\n          >\r\n            Confirm Details\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\r\n          <ConfirmDetails\r\n            open={expanded === \"panel5\"}\r\n            id={data[\"id\"]}\r\n            personalDetails={data[\"personalDetails\"]}\r\n            contactDetails={data[\"contactDetails\"]}\r\n            spouseDetails={data[\"spouseDetails\"]}\r\n            providedLivingSupport={data[\"providedLivingSupport\"]}\r\n            incomeDetails={data[\"incomeDetails\"]}\r\n            bankDetails={data[\"bankDetails\"]}\r\n            handlePickAppointment={handlePickAppointment}\r\n            dependantDetails={data[\"dependantDetails\"]}\r\n          />\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion\r\n        expanded={expanded === \"panel6\"}\r\n        onChange={handleChange(\"panel6\")}\r\n        className={customTextClasses.accordion}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel6a-content\"\r\n          id=\"panel6a-header\"\r\n          className={customTextClasses.accordionHeader}\r\n        >\r\n          <Typography\r\n            className={customTextClasses.accordionHeaderText}\r\n            sx={{ fontWeight: expanded === \"panel6\" ? \"600\" : \"400\" }}\r\n          >\r\n            Pick Appointment\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\r\n          <PickAppointment open={expanded === \"panel6\"} id={data[\"id\"]} />\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion\r\n        expanded={expanded === \"panel7\"}\r\n        onChange={handleChange(\"panel7\")}\r\n        className={customTextClasses.accordion}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel7a-content\"\r\n          id=\"panel7a-header\"\r\n          className={customTextClasses.accordionHeader}\r\n        >\r\n          <Typography\r\n            className={customTextClasses.accordionHeaderText}\r\n            sx={{ fontWeight: expanded === \"panel7\" ? \"600\" : \"400\" }}\r\n          >\r\n            Pay Now\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\r\n          <PayPalPayment open={expanded === \"panel7\"} />\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion\r\n        expanded={expanded === \"panel8\"}\r\n        onChange={handleChange(\"panel8\")}\r\n        className={customTextClasses.accordion}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel8a-content\"\r\n          id=\"panel8a-header\"\r\n          className={customTextClasses.accordionHeader}\r\n        >\r\n          <Typography\r\n            className={customTextClasses.accordionHeaderText}\r\n            sx={{ fontWeight: expanded === \"panel8\" ? \"600\" : \"400\" }}\r\n          >\r\n            Tax Return\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\r\n          <TaxReturns open={expanded === \"panel8\"} />\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion\r\n        expanded={expanded === \"panel9\"}\r\n        onChange={handleChange(\"panel9\")}\r\n        className={customTextClasses.accordion}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel9a-content\"\r\n          id=\"panel9a-header\"\r\n          className={customTextClasses.accordionHeader}\r\n        >\r\n          <Typography\r\n            className={customTextClasses.accordionHeaderText}\r\n            sx={{ fontWeight: expanded === \"panel9\" ? \"600\" : \"400\" }}\r\n          >\r\n            Refund Quote\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\r\n          <RefundQuote open={expanded === \"panel9\"} />\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BasicAccordion;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Page from \"../../../components/Page\";\r\nimport {\r\n  Grid,\r\n  Container,\r\n  Box,\r\n  CircularProgress,\r\n  Typography,\r\n  Card,\r\n  Button,\r\n  Avatar,\r\n} from \"@mui/material\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport TabsDesktop from \"../TabsDesktop\";\r\nimport BasicAccordion from \"../AccordionMobile\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport ConfirmDetails from \"../Forms/ConfirmDetails\";\r\nimport PickAppointment from \"../Forms/PickAppointment\";\r\nimport PayPalPayment from \"../../Home/payPalPayment\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\nimport Api from \"../../../components/Api\";\r\nimport {\r\n  privateApiGET,\r\n  privateApiPOST,\r\n} from \"../../../components/PrivateRoute\";\r\nimport RefundQuote from \"../Forms/RefundQuote\";\r\n\r\nexport const customTextStyles = makeStyles((theme) => ({\r\n  tabButton: {\r\n    display: \"block\",\r\n    width: \"100%\",\r\n    paddingLeft: \"15px\",\r\n    textAlign: \"left\",\r\n    fontWeight: \"500\",\r\n    fontSize: \"16px\",\r\n    lineHeight: \"24px\",\r\n  },\r\n}));\r\n\r\nconst ClientTaxFillingPage = () => {\r\n  const params = useParams();\r\n  const customStyles = customTextStyles();\r\n  const [data, setData] = useState({});\r\n  const [isLoadingSpin, setIsLoadingSpin] = useState(true);\r\n  const [isActiveTab, setIsActiveTab] =\r\n    parseInt(params.action) === 7\r\n      ? useState(\"Pay Now\")\r\n      : useState(\"My Details\");\r\n\r\n  const handleActiveTabChange = (tabName) => {\r\n    setIsActiveTab(tabName);\r\n  };\r\n\r\n  const [tabsDesktopValue, setTabsDesktopValue] = useState(\r\n    parseInt(params.action)\r\n  );\r\n\r\n  const handleTabsDesktopChange = (event, newValue) => {\r\n    setTabsDesktopValue(newValue);\r\n  };\r\n\r\n  const handleFetchTaxFilingDetails = () => {\r\n    setIsLoadingSpin(true);\r\n    let payload = { id: params.id };\r\n    privateApiPOST(Api.taxFiling, payload)\r\n      .then((response) => {\r\n        const { status, data } = response;\r\n        if (status === 200) {\r\n          console.log(\"data\", data);\r\n          setData(data?.data);\r\n          setIsLoadingSpin(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n        setIsLoadingSpin(false);\r\n      });\r\n  };\r\n\r\n  const handleDownloadTemplate = (file) => {\r\n    let payload = {\r\n      file_name: file,\r\n    };\r\n\r\n    privateApiPOST(Api.templateDownload, payload, { responseType: \"blob\" })\r\n      .then((res) => {\r\n        const { status, data } = res;\r\n        if (status === 200) {\r\n          const url = window.URL.createObjectURL(new Blob([data]));\r\n          const anchor = document.createElement(\"a\");\r\n          anchor.href = url;\r\n          anchor.setAttribute(\"download\", file);\r\n          document.body.appendChild(anchor);\r\n          anchor.click();\r\n        } else {\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"handleDownloadFile--->\", err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleFetchTaxFilingDetails();\r\n  }, []);\r\n\r\n  return (\r\n    <Page title={\"Tax Filing\"}>\r\n      <Box>\r\n        <Container maxWidth=\"lg\">\r\n          <Box sx={{ display: { xs: \"none\", sm: \"block\" } }}>\r\n            <Grid container>\r\n              <Grid item xs={2}>\r\n                <Card\r\n                  sx={{\r\n                    minHeight: \"240px\",\r\n                    borderRadius: \"2px\",\r\n                  }}\r\n                >\r\n                  {[\r\n                    \"My Details\",\r\n                    \"Confirm Details\",\r\n                    \"Pick Appointment\",\r\n                    \"Refund Quote\",\r\n                    \"Pay Now\",\r\n                  ].map((each, index) =>\r\n                    each === \"Pay Now\" ? (\r\n                      // Conditional rendering for \"Pay Now\" button\r\n                      <Button\r\n                        key={index}\r\n                        onClick={() => handleActiveTabChange(each)}\r\n                      >\r\n                        <img\r\n                          src=\"/static/img/pay_now.jpg\"\r\n                          alt=\"Pay Now\"\r\n                          style={{\r\n                            minWidth: \"100px\",\r\n                            width: \"190px\",\r\n                            height: \"50px\",\r\n                          }}\r\n                        />\r\n                      </Button>\r\n                    ) : (\r\n                      // Conditional rendering for other tabs\r\n                      <Button\r\n                        key={index}\r\n                        onClick={() => handleActiveTabChange(each)}\r\n                        variant={isActiveTab === each ? \"contained\" : \"text\"}\r\n                        className={customStyles.tabButton}\r\n                        sx={{\r\n                          color: isActiveTab === each ? \"#fff\" : \"#474747\",\r\n                        }}\r\n                      >\r\n                        {each}\r\n                      </Button>\r\n                    )\r\n                  )}\r\n                </Card>\r\n              </Grid>\r\n              <Grid item xs={10}>\r\n                {isLoadingSpin ? (\r\n                  <Box\r\n                    display=\"flex\"\r\n                    height=\"100%\"\r\n                    width=\"100%\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                    sx={{\r\n                      position: \"absolute\",\r\n                      zIndex: \"10\",\r\n                      left: 0,\r\n                      top: \"30%\",\r\n                    }}\r\n                  >\r\n                    <CircularProgress size={30} />\r\n                  </Box>\r\n                ) : data ? (\r\n                  <Box\r\n                    sx={{\r\n                      backgroundColor: \"rgba(255,255,255,1)\",\r\n                      boxShadow: \"rgba(100, 100, 111, 0.2) 0px 7px 29px 0px\",\r\n                      borderRadius: \"4px\",\r\n                      padding: \"20px 10px\",\r\n                      height: \"800px\", // Adjust the height as needed\r\n                      overflow: \"auto\", // Add overflow to enable scrolling\r\n                      maxHeight: \"800px\", // Add a maximum height to prevent content from overflowing\r\n                      marginLeft: \"20px\",\r\n                    }}\r\n                  >\r\n                    <PerfectScrollbar>\r\n                      <Typography\r\n                        variant=\"h3\"\r\n                        sx={{\r\n                          marginLeft: \"20px\",\r\n                          marginBottom:\r\n                            isActiveTab === \"My Details\" ? 0 : \"30px\",\r\n                        }}\r\n                      >\r\n                        Tax-Filing For Year - {params.year}\r\n                      </Typography>\r\n\r\n                      {isActiveTab === \"My Details\" && (\r\n                        <Box>\r\n                          <Typography\r\n                            color={\"primary\"}\r\n                            sx={{\r\n                              marginTop: \"10px\",\r\n                              marginLeft: \"auto\",\r\n                              marginRight: \"auto\",\r\n                              textAlign: \"center\",\r\n                            }}\r\n                          >\r\n                            NOTE : ON FILING ALL INFORMATION PLEASE MENTION YOUR\r\n                            AVAILABILITY IN Pick an Appointment PAGE\r\n                          </Typography>\r\n                          <Typography\r\n                            color={\"#11a63d\"}\r\n                            sx={{\r\n                              marginLeft: \"24px\",\r\n                              wordSpacing: \"3px\",\r\n                              marginTop: \"4px\",\r\n                            }}\r\n                          >\r\n                            Taxpayer and spouse's SSN and Date of Birth fields\r\n                            are set to default values. Please don't change them.\r\n                            We will collect these details via phone call at the\r\n                            time of tax filing\r\n                          </Typography>\r\n\r\n                          <TabsDesktop\r\n                            value={tabsDesktopValue}\r\n                            setValue={setTabsDesktopValue}\r\n                            handleChange={handleTabsDesktopChange}\r\n                            handleActiveTabChange={handleActiveTabChange}\r\n                            data={data}\r\n                            handleFetchData={handleFetchTaxFilingDetails}\r\n                            handleDownloadTemplate={handleDownloadTemplate}\r\n                          />\r\n                        </Box>\r\n                      )}\r\n                      {isActiveTab === \"Confirm Details\" && (\r\n                        <ConfirmDetails\r\n                          open={isActiveTab === \"Confirm Details\"}\r\n                          id={data[\"id\"]}\r\n                          personalDetails={data[\"personalDetails\"]}\r\n                          contactDetails={data[\"contactDetails\"]}\r\n                          spouseDetails={data[\"spouseDetails\"]}\r\n                          providedLivingSupport={data[\"providedLivingSupport\"]}\r\n                          incomeDetails={data[\"incomeDetails\"]}\r\n                          bankDetails={data[\"bankDetails\"]}\r\n                          handlePickAppointment={handleActiveTabChange}\r\n                          dependantDetails={data[\"dependantDetails\"]}\r\n                        />\r\n                      )}\r\n                      {isActiveTab === \"Pick Appointment\" && (\r\n                        <PickAppointment\r\n                          open={isActiveTab === \"Pick Appointment\"}\r\n                          id={data[\"id\"]}\r\n                        />\r\n                      )}\r\n                      {isActiveTab === \"Refund Quote\" && (\r\n                        <RefundQuote open={isActiveTab === \"Refund Quote\"} />\r\n                      )}\r\n                      {isActiveTab === \"Pay Now\" && (\r\n                        <PayPalPayment open={isActiveTab === \"Pay Now\"} />\r\n                      )}\r\n                    </PerfectScrollbar>\r\n                  </Box>\r\n                ) : null}\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n          <Box sx={{ display: { xs: \"block\", sm: \"none\" } }}>\r\n            {isLoadingSpin ? (\r\n              <Box\r\n                display=\"flex\"\r\n                height=\"100%\"\r\n                width=\"100%\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                sx={{\r\n                  position: \"absolute\",\r\n                  zIndex: \"10\",\r\n                  left: 0,\r\n                  top: \"70%\",\r\n                }}\r\n              >\r\n                <CircularProgress size={30} />\r\n              </Box>\r\n            ) : data ? (\r\n              <BasicAccordion\r\n                data={data}\r\n                handleFetchData={handleFetchTaxFilingDetails}\r\n                handleDownloadTemplate={handleDownloadTemplate}\r\n              />\r\n            ) : null}\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default ClientTaxFillingPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Page from \"../../components/Page\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport AdminTaxFillingPage from \"./AdminTaxFilingpage\";\r\nimport ClientTaxFillingPage from \"./ClientTaxFilingPage\";\r\n\r\nconst HomePage = () => {\r\n  const state = useSelector((state) => state.app);\r\n\r\n  return (\r\n    <Page title={\"Home\"}>\r\n      {state.role === \"ADMIN\" ? (\r\n        <AdminTaxFillingPage />\r\n      ) : state.role === \"CLIENT\" ? (\r\n        <ClientTaxFillingPage />\r\n      ) : null}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\nimport { Box, Button, Typography } from \"@mui/material\";\r\n\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CustomAlert from \"../../components/CustomAlert\";\r\n\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport Api from \"../../components/Api\";\r\nimport Page from \"../../components/Page\";\r\nimport { setTaxYear } from \"../../redux/app/appSlice\";\r\n\r\nimport CustomInputTextField from \"../../components/CustomInputField\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  // root: {\r\n  //   backgroundColor: theme.palette.background.dark,\r\n  //   height: \"100%\",\r\n  //   paddingBottom: \"0px\",\r\n  //   paddingTop: \"0px\",\r\n  //   position: \"relative\",\r\n  // },\r\n\r\n  // logo: {\r\n  //   width: 150,\r\n  //   padding: 10,\r\n  //   [theme.breakpoints.down(\"sm\")]: {\r\n  //     width: 110,\r\n  //   },\r\n  // },\r\n  submitProgress: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n  mainBlock: {\r\n    // width: \"50vw\",\r\n    // height: \"100vh\",\r\n    // display: \"flex\",\r\n    // flexDirection: \"row\",\r\n    minWidth: \"400px\",\r\n    margin: \"0\",\r\n    padding: \"0\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      // flexDirection: \"column\",\r\n      minWidth: \"300px\",\r\n    },\r\n  },\r\n  // leftSide: {\r\n  //   width: \"70%\",\r\n  //   height: \"100vh\",\r\n  //   position: \"relative\",\r\n  //   backgroundColor: \"#2069D8\",\r\n  //   [theme.breakpoints.down(\"sm\")]: {\r\n  //     width: \"100%\",\r\n  //     height: \"40vh\",\r\n  //     margin: \"0\",\r\n  //   },\r\n  // },\r\n\r\n  avatarLogo: {\r\n    width: 200,\r\n    height: 72,\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"33%\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      left: \"20%\",\r\n      top: \"30%\",\r\n    },\r\n  },\r\n  title: {\r\n    fontFamily: \"Montserrat\",\r\n    fontWeight: \"700\",\r\n    fontSize: \"72px\",\r\n    textAlign: \"center\",\r\n    lineHeight: \"87.7px\",\r\n    color: \"#FFFFFF\",\r\n    margin: \"auto\",\r\n    marginTop: \"50vh\",\r\n    marginBottom: \"auto\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginTop: \"10vh\",\r\n    },\r\n  },\r\n\r\n  rightSide: {\r\n    width: \"100%\",\r\n    height: \"100vh\",\r\n    backgroundColor: \"#F5F5F5\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\", // Center vertically\r\n    alignItems: \"center\", // Center horizontally\r\n    margin: \"0\",\r\n    paddingRight: \"200px\",\r\n    padding: \"0\", // Reset padding\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      paddingLeft: \"244px\", // Adjust padding for medium and larger screens\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\", // Set width to 100%\r\n      paddingLeft: \"0\", // Reset padding\r\n      justifyContent: \"center\", // Center vertically\r\n      alignItems: \"center\", // Center horizontally\r\n      paddingRight: \"0px\",\r\n      marginTop: \"-100px\",\r\n    },\r\n  },\r\n  \"& .css-t7eypm-MuiTypography-root\": {\r\n    fontWeight: \"700\",\r\n  },\r\n}));\r\n\r\nconst LoginView = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [showAlert, setShowAlert] = useState({\r\n    isAlert: false,\r\n    alertTitle: \"\",\r\n    alertText: \"\",\r\n    severity: \"\",\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Box className={classes.mainBlock}>\r\n        {showAlert.isAlert ? (\r\n          <CustomAlert\r\n            open={showAlert.isAlert}\r\n            severity={showAlert.severity}\r\n            alertTitle={showAlert.alertTitle}\r\n            alertText={showAlert.alertText}\r\n            onClose={() =>\r\n              setShowAlert({\r\n                isAlert: false,\r\n                alertTitle: \"\",\r\n                alertText: \"\",\r\n                severity: \"\",\r\n              })\r\n            }\r\n          />\r\n        ) : null}\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          height=\"100%\"\r\n          justifyContent=\"center\"\r\n        >\r\n          {/* <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n              marginBottom={2}\r\n            >\r\n              \r\n            </Box> */}\r\n          <Formik\r\n            initialValues={{\r\n              email: \"\",\r\n              password: \"\",\r\n              // taxYear: \"\",\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              email: Yup.string()\r\n                .email(\"Must be a valid email\")\r\n                .max(255)\r\n                .required(\"Email is required\"),\r\n              password: Yup.string().max(255).required(\"Password is required\"),\r\n              // taxYear: Yup.string()\r\n              //   .max(255)\r\n              //   .required(\"Tax Year is required\"),\r\n            })}\r\n            onSubmit={(values, { setSubmitting, resetForm }) => {\r\n              const url = Api.login;\r\n\r\n              const config = {\r\n                headers: {\r\n                  \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\r\n                },\r\n              };\r\n\r\n              axios\r\n                .post(url, values, config)\r\n                .then((res) => {\r\n                  if (res.status === 200) {\r\n                    window.sessionStorage.setItem(\r\n                      \"token\",\r\n                      res.data?.data?.token\r\n                    );\r\n                    setSubmitting(false);\r\n                    dispatch(setTaxYear(values.taxYear));\r\n                    navigate(\"/\");\r\n                  }\r\n                })\r\n                .catch((error) => {\r\n                  if (error.response.status === 400) {\r\n                    setShowAlert({\r\n                      isAlert: true,\r\n                      alertText: \"Invalid credentials\",\r\n                      severity: \"error\",\r\n                      alertTitle: \"Error\",\r\n                    });\r\n                    setSubmitting(false);\r\n                  } else {\r\n                    setShowAlert({\r\n                      isAlert: true,\r\n                      alertText: \"Something went wrong\",\r\n                      severity: \"error\",\r\n                      alertTitle: \"Error\",\r\n                    });\r\n                    resetForm();\r\n                    setSubmitting(false);\r\n                  }\r\n                });\r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values,\r\n            }) => (\r\n              <form autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                <Box mb={3}>\r\n                  <Typography color=\"textPrimary\" variant=\"h4\">\r\n                    SIGN IN TO YOUR ACCOUNT\r\n                  </Typography>\r\n                </Box>\r\n\r\n                <CustomInputTextField\r\n                  attribute=\"Email Address\"\r\n                  is_required={true}\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  fullWidth\r\n                  helperText={touched.email && errors.email}\r\n                  margin=\"normal\"\r\n                  name=\"email\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  variant=\"outlined\"\r\n                  is_bold={true}\r\n                />\r\n                <CustomInputTextField\r\n                  attribute=\"Password\"\r\n                  is_required={true}\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                  is_bold={true}\r\n                />\r\n                {/* <TextField\r\n                        select\r\n                        error={Boolean(touched.taxYear && errors.taxYear)}\r\n                        helperText={touched.taxYear && errors.taxYear}\r\n                        fullWidth\r\n                        label=\"Tax Year\"\r\n                        margin=\"normal\"\r\n                        name=\"taxYear\" // Change \"taxyear\" to \"taxYear\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.taxYear}\r\n                        variant=\"outlined\"\r\n                      >\r\n                        <MenuItem value=\"currentYear\">Current Year</MenuItem>\r\n                        <MenuItem value=\"AllYears\">All Years</MenuItem>\r\n                      </TextField> */}\r\n                <Box my={2}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Sign in now\r\n                  </Button>\r\n                </Box>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginView;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\nimport { Box, Button, Typography, CircularProgress } from \"@mui/material\";\r\n\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CustomAlert from \"../../components/CustomAlert\";\r\n\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport Api from \"../../components/Api\";\r\nimport Page from \"../../components/Page\";\r\nimport { setTaxYear } from \"../../redux/app/appSlice\";\r\n\r\nimport CustomInputTextField from \"../../components/CustomInputField\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  submitProgress: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n  mainBlock: {\r\n    // width: \"50vw\",\r\n    // height: \"100vh\",\r\n    // display: \"flex\",\r\n    // flexDirection: \"row\",\r\n    minWidth: \"400px\",\r\n    margin: \"0\",\r\n    padding: \"0\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      //   flexDirection: \"column\",\r\n      minWidth: \"300px\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst ForgotPasswordView = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [showAlert, setShowAlert] = useState({\r\n    isAlert: false,\r\n    alertTitle: \"\",\r\n    alertText: \"\",\r\n    severity: \"\",\r\n  });\r\n\r\n  const [isForgotPassword, setIsForgotPassword] = useState(false);\r\n  const [forgotPasswordState, setForgetPasswordState] = useState({ email: \"\" });\r\n  const [isResetPasswordSubmitting, setIsRestPasswordSubmitting] =\r\n    useState(false);\r\n\r\n  const handleForgotPassword = () => {\r\n    const url = Api.forgotPassword;\r\n    setIsRestPasswordSubmitting(true);\r\n    const config = {\r\n      headers: {\r\n        \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(url, forgotPasswordState, config)\r\n      .then((res) => {\r\n        setShowAlert({\r\n          isAlert: true,\r\n          alertText: res.data[\"message\"],\r\n          severity: \"success\",\r\n        });\r\n        setIsForgotPassword(false);\r\n        setIsRestPasswordSubmitting(false);\r\n        setForgetPasswordState({ email: \"\" });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        setShowAlert({\r\n          isAlert: true,\r\n          alertText: error.response.data[\"message\"],\r\n          severity: \"error\",\r\n          alertTitle: \"Error\",\r\n        });\r\n        setIsForgotPassword(false);\r\n        setIsRestPasswordSubmitting(false);\r\n        setForgetPasswordState({ email: \"\" });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.mainBlock}>\r\n      {showAlert.isAlert ? (\r\n        <CustomAlert\r\n          open={showAlert.isAlert}\r\n          severity={showAlert.severity}\r\n          alertTitle={showAlert.alertTitle}\r\n          alertText={showAlert.alertText}\r\n          onClose={() =>\r\n            setShowAlert({\r\n              isAlert: false,\r\n              alertTitle: \"\",\r\n              alertText: \"\",\r\n              severity: \"\",\r\n            })\r\n          }\r\n        />\r\n      ) : null}\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        {/* <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n              marginBottom={2}\r\n            >\r\n              \r\n            </Box> */}\r\n\r\n        <Box mb={3}>\r\n          <Typography color=\"textPrimary\" variant=\"h4\">\r\n            FORGOT PASSWORD?\r\n          </Typography>\r\n        </Box>\r\n\r\n        <CustomInputTextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"name\"\r\n          attribute=\"Email ID (User ID)\"\r\n          is_required={true}\r\n          type=\"email\"\r\n          fullWidth\r\n          autoComplete=\"off\"\r\n          value={forgotPasswordState.email}\r\n          onChange={(e) => setForgetPasswordState({ email: e.target.value })}\r\n          is_bold={true}\r\n        />\r\n\r\n        <Box my={2}>\r\n          <Button\r\n            onClick={handleForgotPassword}\r\n            color=\"primary\"\r\n            disabled={isResetPasswordSubmitting}\r\n            fullWidth\r\n            size=\"large\"\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n          >\r\n            Reset Password\r\n            {isResetPasswordSubmitting && (\r\n              <CircularProgress size={24} className={classes.submitProgress} />\r\n            )}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ForgotPasswordView;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Avatar, Typography, Box, Grid, Container } from \"@mui/material\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport PaidIcon from \"@mui/icons-material/Paid\";\r\nimport ExitToAppIcon from \"@mui/icons-material/ExitToApp\";\r\n\r\n// Your remaining components and code here\r\nimport Page from \"../../components/Page\";\r\nimport LoginView from \"./LoginView\";\r\nimport ForgotPasswordView from \"./ForgotPassword\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  box: {\r\n    border: \"1px solid #000000\",\r\n    padding: \"20px\",\r\n    marginBottom: \"20px\",\r\n    backgroundColor: \"#f7f7f7\",\r\n    // maxHeight: \"50vh\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    minHeight: \"300px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      minHeight: \"280px\",\r\n      padding: \"20px 10px\",\r\n    },\r\n  },\r\n  logoAvatar: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      //   marginLeft: \"200px\",\r\n      marginRight: \"auto\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginLeft: \"auto\",\r\n      marginRight: \"150px\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport const AppBar = () => {\r\n  const customStyles = useStyles();\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        backgroundColor: \"#fafafa\",\r\n        padding: \"5px 20px\",\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: { xs: \"none\", sm: \"block\" },\r\n        }}\r\n      >\r\n        <Box sx={{ display: \"flex\" }}>\r\n          <Avatar\r\n            variant=\"square\"\r\n            src=\"/static/img/onecall-logo.png\"\r\n            sx={{\r\n              height: 50,\r\n              width: 140,\r\n              marginBottom: \"10px\",\r\n            }}\r\n            className={customStyles.logoAvatar}\r\n          />\r\n          <Typography\r\n            variant=\"h6\"\r\n            sx={{\r\n              fontSize: \"16px\",\r\n              marginTop: \"12px\",\r\n              marginLeft: \"20px\",\r\n            }}\r\n          >\r\n            WE MAKE TAX SIMPLE\r\n          </Typography>\r\n        </Box>\r\n        <Typography variant=\"body2\" sx={{ fontSize: \"16px\" }}>\r\n          <strong>Phone:</strong> (201) 277-3977\r\n        </Typography>\r\n        <Typography variant=\"body2\" sx={{ fontSize: \"16px\" }}>\r\n          <strong>E-mail:</strong> support@onecalltaxservices.com\r\n        </Typography>\r\n      </Box>\r\n      <Avatar\r\n        variant=\"square\"\r\n        src=\"/static/img/irs_image.jpg\"\r\n        sx={{\r\n          width: \"81px\",\r\n          height: \"83px\",\r\n          display: { xs: \"none\", sm: \"flex\" },\r\n        }}\r\n      />\r\n\r\n      <Box sx={{ display: { xs: \"block\", sm: \"none\" } }}>\r\n        <Avatar\r\n          variant=\"square\"\r\n          src=\"/static/img/onecall-logo.png\"\r\n          sx={{\r\n            height: 50,\r\n            width: 140,\r\n            marginTop: \"12px\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n          className={customStyles.logoAvatar}\r\n        />\r\n        <Typography\r\n          variant=\"h6\"\r\n          sx={{\r\n            fontSize: \"16px\",\r\n          }}\r\n        >\r\n          WE MAKE TAX SIMPLE\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst Authentication = () => {\r\n  const customStyles = useStyles();\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Page title=\"Login\">\r\n      <Box\r\n        sx={{\r\n          height: \"100vh\",\r\n          backgroundImage: \"url(/static/img/login_bg.png)\",\r\n          paddingTop: \"8%\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundSize: \"100% 100%\",\r\n        }}\r\n      >\r\n        <Container maxWidth=\"lg\">\r\n          <Box sx={{ backgroundColor: \"#fafafa\", padding: \"5px 5px 30px\" }}>\r\n            <AppBar />\r\n            <Box sx={{ padding: { xs: 0, sm: \"20px 30px\" } }}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <Box className={customStyles.box}>\r\n                    <LoginView />\r\n                  </Box>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <Box className={customStyles.box}>\r\n                    <ForgotPasswordView />\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <Typography variant=\"h5\">New Client? Please</Typography>\r\n\r\n                <Avatar\r\n                  onClick={() => navigate(\"/register\")}\r\n                  variant=\"square\"\r\n                  src=\"/static/img/register.png\"\r\n                  sx={{ height: 33, width: 99, marginLeft: \"10px\" }}\r\n                />\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Authentication;\r\n","import React from \"react\";\r\nimport { Box, TextField, Grid, Typography } from \"@mui/material\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst NO_WRAP_ATTRIBUTES = [\r\n  \"Middle Initial\",\r\n  \"Email Address\",\r\n  \"Password\",\r\n  \"Email ID (User ID)\",\r\n  \"Confirm Password\",\r\n  \"Referral ID (Optional)\",\r\n  \"Preferrable Time\",\r\n  \"Time Zone\",\r\n  \"Phone Number\",\r\n];\r\n\r\nconst CustomInputTextField = ({\r\n  attribute,\r\n  is_required,\r\n  is_bold,\r\n  attributeTextAlign,\r\n  attributeMarginTop,\r\n  ...others\r\n}) => {\r\n  return (\r\n    <Grid\r\n      item\r\n      xs={12}\r\n      sx={{\r\n        maxHeight: \"60px\",\r\n      }}\r\n    >\r\n      <Grid container>\r\n        <Grid\r\n          item\r\n          xs={4}\r\n          sx={{ marginTop: attributeMarginTop ? attributeMarginTop : \"24px\" }}\r\n        >\r\n          {/* <Typography\r\n            sx={{\r\n              margin: \"20px 10px\",\r\n              fontSize: \"16px\",\r\n              lineHeight: \"24px\",\r\n              fontWeight: 400,\r\n            }}\r\n          >\r\n            {is_required ? (\r\n              <>\r\n                {attribute}\r\n                <span\r\n                  style={{\r\n                    color: \"red\", // Set color to red\r\n                    fontSize: \"16px\",\r\n                    marginLeft: \"3px\",\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  *\r\n                </span>\r\n              </>\r\n            ) : (\r\n              attribute\r\n            )}\r\n          </Typography> */}\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              marginRight: { xs: 0, sm: attributeTextAlign ? \"5px\" : 0 },\r\n              justifyContent: {\r\n                xs: \"flex-start\",\r\n                sm: attributeTextAlign ? \"flex-end\" : \"flex-start\",\r\n              },\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"body1\"\r\n              sx={{\r\n                ...(is_bold && { fontWeight: 600 }), // Apply fontWeight if is_bold is true\r\n                whiteSpace: NO_WRAP_ATTRIBUTES.includes(attribute)\r\n                  ? \"nowrap\"\r\n                  : \"pre-wrap\",\r\n              }}\r\n            >\r\n              {attribute}\r\n            </Typography>\r\n            {is_required && (\r\n              <Typography\r\n                sx={{\r\n                  color: \"red\",\r\n                  fontSize: \"0.875rem\",\r\n                  marginLeft: \"3px\",\r\n                }}\r\n              >\r\n                *\r\n              </Typography>\r\n            )}\r\n            &nbsp;:\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={attribute === \"Income Amount\" ? 4 : 8}>\r\n          <TextField\r\n            {...others}\r\n            sx={{\r\n              \"& .MuiOutlinedInput-root\": {\r\n                \"& fieldset\": {\r\n                  borderRadius: \"2px\",\r\n                },\r\n              },\r\n              \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n                border: \"0.1px solid #bdbdbd\",\r\n              },\r\n              \"& .MuiOutlinedInput-input\": {\r\n                padding: \"10px\",\r\n                backgroundColor: \"rgba(255,255,255,1)\",\r\n              },\r\n              width: \"90%\",\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nCustomInputTextField.defaultProps = {\r\n  is_bold: false,\r\n};\r\n\r\nCustomInputTextField.prototype = {\r\n  is_required: PropTypes.bool,\r\n  is_bold: PropTypes.bool,\r\n  attribute: PropTypes.string, //['success','warning', 'error']\r\n  attributeTextAlign: PropTypes.string, //['success','warning', 'error']\r\n  attributeMarginTop: PropTypes.string,\r\n};\r\n\r\nexport default CustomInputTextField;\r\n","export const statesNames = [\r\n  { value: \"SELECT\", label: \"SELECT\" },\r\n  { value: \"Alabama\", label: \"Alabama\" },\r\n  { value: \"Alaska\", label: \"Alaska\" },\r\n  { value: \"Arizona\", label: \"Arizona\" },\r\n  { value: \"Arkansas\", label: \"Arkansas\" },\r\n  { value: \"California\", label: \"California\" },\r\n  { value: \"Colorado\", label: \"Colorado\" },\r\n  { value: \"Connecticut\", label: \"Connecticut\" },\r\n  { value: \"Delaware\", label: \"Delaware\" },\r\n  { value: \"Florida\", label: \"Florida\" },\r\n  { value: \"Georgia\", label: \"Georgia\" },\r\n  { value: \"Hawaii\", label: \"Hawaii\" },\r\n  { value: \"Idaho\", label: \"Idaho\" },\r\n  { value: \"Illinois\", label: \"Illinois\" },\r\n  { value: \"Indiana\", label: \"Indiana\" },\r\n  { value: \"Iowa\", label: \"Iowa\" },\r\n  { value: \"Kansas\", label: \"Kansas\" },\r\n  { value: \"Kentucky\", label: \"Kentucky\" },\r\n  { value: \"Louisiana\", label: \"Louisiana\" },\r\n  { value: \"Maine\", label: \"Maine\" },\r\n  { value: \"Maryland\", label: \"Maryland\" },\r\n  { value: \"Massachusetts\", label: \"Massachusetts\" },\r\n  { value: \"Michigan\", label: \"Michigan\" },\r\n  { value: \"Minnesota\", label: \"Minnesota\" },\r\n  { value: \"Mississippi\", label: \"Mississippi\" },\r\n  { value: \"Missouri\", label: \"Missouri\" },\r\n  { value: \"Montana\", label: \"Montana\" },\r\n  { value: \"Nebraska\", label: \"Nebraska\" },\r\n  { value: \"Nevada\", label: \"Nevada\" },\r\n  { value: \"New Hampshire\", label: \"New Hampshire\" },\r\n  { value: \"New Jersey\", label: \"New Jersey\" },\r\n  { value: \"New Mexico\", label: \"New Mexico\" },\r\n  { value: \"New York\", label: \"New York\" },\r\n  { value: \"North Carolina\", label: \"North Carolina\" },\r\n  { value: \"North Dakota\", label: \"North Dakota\" },\r\n  { value: \"Ohio\", label: \"Ohio\" },\r\n  { value: \"Oklahoma\", label: \"Oklahoma\" },\r\n  { value: \"Oregon\", label: \"Oregon\" },\r\n  { value: \"Pennsylvania\", label: \"Pennsylvania\" },\r\n  { value: \"Rhode Island\", label: \"Rhode Island\" },\r\n  { value: \"South Carolina\", label: \"South Carolina\" },\r\n  { value: \"South Dakota\", label: \"South Dakota\" },\r\n  { value: \"Tennessee\", label: \"Tennessee\" },\r\n  { value: \"Texas\", label: \"Texas\" },\r\n  { value: \"Utah\", label: \"Utah\" },\r\n  { value: \"Vermont\", label: \"Vermont\" },\r\n  { value: \"Virginia\", label: \"Virginia\" },\r\n  { value: \"Washington\", label: \"Washington\" },\r\n  { value: \"West Virginia\", label: \"West Virginia\" },\r\n  { value: \"Wisconsin\", label: \"Wisconsin\" },\r\n  { value: \"Wyoming\", label: \"Wyoming\" },\r\n  { value: \"Foreign\", label: \"Foreign\" },\r\n  { value: \"District of Columbia\", label: \"District of Columbia\" },\r\n];\r\n\r\nexport const countryCode = [\r\n  { value: \"Select\", label: \"Select\" },\r\n  { value: \"+91 (India)\", label: \"+91 (India)\" },\r\n  { value: \"+1 (USA / Canada)\", label: \"+1 (USA / Canada)\" },\r\n  { value: \"+44 (U.K)\", label: \"+44 (U.K)\" },\r\n  { value: \"+49 (Germany)\", label: \"+49 (Germany)\" },\r\n  { value: \"+60 (Malaysia)\", label: \"+60 (Malaysia)\" },\r\n  { value: \"+61 (Australia)\", label: \"+61 (Australia)\" },\r\n  { value: \"+65 (Singapore)\", label: \"+65 (Singapore)\" },\r\n  { value: \"+81 (Japan)\", label: \"+81 (Japan)\" },\r\n  { value: \"+86 (China)\", label: \"+86 (China)\" },\r\n  { value: \"Others\", label: \"Others\" },\r\n];\r\nexport const refundTypes = [\r\n  \"FEDERAL REFUND\",\r\n  \"FEDERAL AMENDMENT\",\r\n  \"STATE AMENDMENT\",\r\n  \"FBAR TAX PAYER\",\r\n  \"FBAR SPOUSE\",\r\n  \"FBAR COMBINED\",\r\n  \"CITY FILING 1\",\r\n  \"CITY FILING 2\",\r\n  \"CITY FILING 3\",\r\n  \"CITY FILING 4\",\r\n  \"EXTENSION FILING\",\r\n  \"OTHER\",\r\n  \"ADVANCE PAYMENT\",\r\n  \"REFERRAL DISCOUNT\",\r\n];\r\n\r\nexport const dependantRelationships = [\r\n  \"FATHER\",\r\n  \"MOTHER\",\r\n  \"DAUGHTER\",\r\n  \"SON\",\r\n  \"FATHER IN LAW\",\r\n  \"MOTHER IN LAW\",\r\n  \"OTHER\",\r\n];\r\n\r\nexport const residentialStatus = [\r\n  \"H4\",\r\n  \"US Citizen\",\r\n  \"L2\",\r\n  \"Green Card\",\r\n  \"Other\",\r\n];\r\n","import React, { forwardRef } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Page = forwardRef(({ children, title = \"\", ...rest }, ref) => {\r\n  return (\r\n    <div ref={ref} {...rest}>\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      {children}\r\n    </div>\r\n  );\r\n});\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Page;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { Snackbar } from \"@mui/material\";\r\nimport { Alert, AlertTitle } from \"@mui/material\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(10),\r\n    boxShadow: \"-2px 5px 15px -2px rgba(0,0,0,0.71)\",\r\n  },\r\n  alertContainer: {\r\n    minWidth: 350,\r\n  },\r\n}));\r\n\r\nconst CustomAlert = ({ open, severity, alertTitle, alertText, onClose }) => {\r\n  let vertical = \"top\",\r\n    horizontal = \"right\";\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{ vertical, horizontal }}\r\n      open={open}\r\n      autoHideDuration={6000}\r\n      onClose={onClose}\r\n      className={classes.root}\r\n    >\r\n      <Alert\r\n        severity={severity}\r\n        onClose={onClose}\r\n        className={classes.alertContainer}\r\n      >\r\n        {alertTitle ? <AlertTitle>{alertTitle}</AlertTitle> : null}\r\n        {alertText}!\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nCustomAlert.prototype = {\r\n  open: PropTypes.bool,\r\n  severity: PropTypes.string, //['success','warning', 'error']\r\n  alertText: PropTypes.string,\r\n  alertTitle: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n};\r\n\r\nexport default CustomAlert;\r\n"],"sourceRoot":""}