{"version":3,"sources":["webpack:///./src/utils/index.js","webpack:///./src/views/Home/Admin/SearchClients/SearchFilters/index.js","webpack:///./src/views/Home/Admin/SearchClients/UsersDisplay/index.js","webpack:///./src/views/Home/Admin/SearchClients/UpdateAppointment/index.js","webpack:///./src/views/Home/Admin/SearchClients/Refund/AddRefund/index.js","webpack:///./src/views/Home/Admin/SearchClients/Refund/SummaryRefunds/index.js","webpack:///./src/views/Home/Admin/SearchClients/Refund/index.js","webpack:///./src/views/Home/Admin/SearchClients/index.js","webpack:///./src/views/Home/Admin/AssociatesLIst/index.js","webpack:///./src/views/Home/Admin/AddAssociate/index.js","webpack:///./src/views/Home/Admin/index.js","webpack:///./src/views/Home/Client/index.js","webpack:///./src/views/Home/home.page.js","webpack:///./src/components/CustomInputField.js","webpack:///./src/constants/index.js","webpack:///./src/components/Page.js","webpack:///./src/components/CustomAlert.js"],"names":["capitalizeString","str","charAt","toUpperCase","slice","toLowerCase","SearchFiltersPage","_ref","filters","handleFiltersChange","handleFetchUsers","React","createElement","Box","sx","margin","border","padding","Typography","textAlign","marginBottom","Grid","container","spacing","item","xs","id","name","value","onChange","style","minHeight","criteria","search","maxWidth","year","financialYears","map","each","key","onClick","color","marginTop","customTextStyles","makeStyles","theme","tableHeader","_defineProperty","fontSize","fontWeight","lineHeight","breakpoints","down","display","tableData","headerText","confirmButton","mobileViewTableCellValue","mobileView","borderRadius","boxShadow","backgroundColor","cursor","up","mobileViewTableCellHeader","UsersDisplayPage","data","isUserDetailsLoadingSpin","action","setAction","handleUpdateAppointmentDetails","customStyles","variant","bgcolor","transition","overflow","backgroundImage","height","width","justifyContent","alignItems","position","zIndex","left","top","CircularProgress","size","TableContainer","Table","borderCollapse","TableHead","TableRow","TableCell","className","TableBody","length","row","first_name","last_name","email","phone_no","filing","appointmentDate","appointmentTime","flexWrap","e","marginLeft","flexDirection","_customizedButton","dialogBox","quantityRow","boldText","paymentOption","activePaymentOption","normalText","mainText","opacity","marginRight","paper","overflowY","customizedButton","palette","secondary","light","AppointmentUpdateConfirmationDialogBox","handleDataChange","open","handleClose","handleConfirm","isLoadingSpin","timeOptions","hours","minutes","hourStr","String","padStart","minuteStr","timeOption","concat","push","generateTimeOptions","Dialog","onClose","scroll","classes","DialogTitle","DialogContent","dividers","IconButton","CloseIcon","minWidth","sm","CustomInputTextField","attributeMarginTop","attribute","is_required","type","date","fullWidth","required","select","time","option","MenuItem","DialogActions","Button","textTransform","AddRefundPage","isAddRefundActive","handleChange","handleAddRefund","handleSubmit","handlePageChange","readOnly","event","target","service_type","Avatar","src","refund_type","refundTypes","standard_refund","standard_fee","itemized_refund","itemized_fee","discount","paid_advance","max_itemized_refund","max_itemized_fee","SummaryRefundPage","RefundPage","addRefundData","handleAddRefundDataChange","handleFetchAddRefund","_useState2","_slicedToArray","useState","activeRefundPage","setActiveRefundPage","handleActiveRefundPageChange","SearchClientsPage","_useState4","users","setUsers","navigate","useNavigate","_useState6","setFilters","_useState8","_useState10","isRefundPageOpen","setIsRefundPageOpen","_useState12","refundData","setRefundData","_useState14","_useState16","setIsUserDetailsLoadingSpin","_useState18","isRefundDetailsLoadingSpin","setIsRefundDetailsLoadingSpin","_useState20","_useState22","isAlert","alertTitle","alertText","severity","showAlert","setShowAlert","_useState24","isAppointmentUpdateLoadingSpin","setIsAppointmentUpdateLoadingSpin","_useState26","isAppointmentUpdateConfirmationDialogBoxOpen","setIsAppointmentUpdateConfirmationDialogBoxOpen","_useState28","appointmentId","appointmentDetailsData","setAppointmentDetailsData","_useState30","setIsAddRefundActive","_useState32","setAddRefundData","payload","_objectSpread","privateApiPOST","Api","then","response","status","console","log","error","_error$response$data2","message","handleFetchRefundDetails","refunds","_error$response$data3","handleAppointmentDetailsUpdateDialogBoxClose","reason","prev","useEffect","sessionStorage","getItem","CustomAlert","taxFilingId","taxFilingYear","updateAppointment","deleteAppointment","_error$response$data","_toConsumableArray","label","index","createRefund","_error$response$data4","AssociatesListPage","setIsLoadingSpin","isDeleteLoadingSpin","setIsDeleteLoadingSpin","associateDetails","setAssociateDetails","privateApiGET","paddingTop","paddingBottom","contact_no","code","disabled","startIcon","DeleteIcon","associateId","handleDeleteAssociate","buttons","ml","initialValues","firstName","lastName","contact","associateCode","password","uploadDocsView","manageAppointment","role","validationSchema","Yup","shape","AddAssociatePage","Formik","onSubmit","values","setSubmitting","resetForm","signup","_ref2","errors","touched","handleBlur","Form","onBlur","Boolean","helperText","tabHeader","borderBottom","whiteSpace","tabButton","paddingLeft","AdminHomePage","params","useParams","useSelector","state","app","isMenuOpen","setIsMenuOpen","parseInt","isActiveTab","setIsActiveTab","handleActiveTabChange","tabName","Card","MenuIcon","maxHeight","PerfectScrollbar","ClientHomePage","issue","myServices","setMyServices","taxYearServices","setTaxYearServices","setIsMyServicesLoading","setIsTaxYearsLoading","currSelectedYear","setCurrSelectedYear","useDispatch","handleNavigate","taxYears","Container","Link","to","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","textOverflow","new","handleAddTaxServiceChange","HomePage","Page","title","NO_WRAP_ATTRIBUTES","attributeTextAlign","others","_objectWithoutProperties","_excluded","includes","TextField","_extends","prototype","PropTypes","bool","string","statesNames","countryCode","dependantRelationships","residentialStatus","forwardRef","ref","children","_ref$title","rest","Helmet","propTypes","node","isRequired","useStyles","root","alertContainer","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","AlertTitle","func"],"mappings":"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","file":"home.page.js","sourcesContent":["// Convert number to thousand separated string\r\n// eg: 100000 -> 100,000\r\nexport function thousands_separators(num) {\r\n  if (num) {\r\n    var num_parts = num.toString().split(\".\");\r\n    num_parts[0] = num_parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    return num_parts.join(\".\");\r\n  }\r\n  return num;\r\n}\r\n\r\nexport function formattedPrice(price) {\r\n  return price.toLocaleString(\"en-IN\", {\r\n    style: \"currency\",\r\n    currency: \"INR\",\r\n  });\r\n}\r\n\r\nexport const capitalizeString = (str) => {\r\n  if (str) return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\r\n  else return \"\";\r\n};\r\n","import React from \"react\";\r\nimport { Grid, Box, Typography } from \"@mui/material\";\r\n\r\nimport financialYears from \"../../../../../mock-adapter/financialYears.json\";\r\n\r\nconst SearchFiltersPage = ({\r\n  filters,\r\n  handleFiltersChange,\r\n  handleFetchUsers,\r\n}) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        margin: \"10px\",\r\n        border: \"1px solid #DDDDDD\",\r\n        padding: \"20px 20px 40px\",\r\n      }}\r\n    >\r\n      <Typography sx={{ textAlign: \"center\", marginBottom: \"20px\" }}>\r\n        Search Criteria\r\n      </Typography>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={3}>\r\n          <select\r\n            id=\"name\"\r\n            name=\"name\"\r\n            value={filters.name}\r\n            onChange={handleFiltersChange}\r\n            style={{ minHeight: \"25px\", padding: \"5px\" }}\r\n          >\r\n            <option value=\"All\">All</option>\r\n            <option value=\"Appointment Date\">Appointment Date</option>\r\n            <option value=\"Recent Clients\">Recent Clients</option>\r\n            <option value=\"Last Name\">Last Name</option>\r\n            <option value=\"First Name\">First Name</option>\r\n            <option value=\"Email Id\">Email Id</option>\r\n          </select>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <select\r\n            id=\"criteria\"\r\n            name=\"criteria\"\r\n            value={filters.criteria}\r\n            onChange={handleFiltersChange}\r\n            style={{ minHeight: \"25px\", padding: \"5px\" }}\r\n          >\r\n            {/* Add an empty option */}\r\n            <option value=\"Equals to\">Equals to</option>\r\n            <option value=\"Greater than and Equals to\">\r\n              Greater than and Equals to\r\n            </option>\r\n            <option value=\"Contains\">Contains</option>\r\n          </select>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <input\r\n            name=\"search\"\r\n            onChange={handleFiltersChange}\r\n            value={filters.search}\r\n            style={{\r\n              maxWidth: \"160px\",\r\n              minHeight: \"25px\",\r\n              padding: \"5px\",\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <select\r\n            id=\"year\"\r\n            name=\"year\"\r\n            value={filters.year}\r\n            onChange={handleFiltersChange}\r\n            style={{ minHeight: \"25px\", padding: \"5px\" }}\r\n          >\r\n            {financialYears.map((each, id) => (\r\n              <option key={id} value={each}>\r\n                {each}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n          <button\r\n            onClick={handleFetchUsers}\r\n            style={{ minHeight: \"25px\", padding: \"5px\" }}\r\n          >\r\n            GO\r\n          </button>\r\n        </Grid>\r\n      </Grid>\r\n      <Typography\r\n        color={\"#11a63d\"}\r\n        sx={{\r\n          textAlign: \"center\",\r\n          marginTop: \"2px\",\r\n        }}\r\n      >\r\n        Note : Appointment Date Search format - MM/DD/YYYY\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SearchFiltersPage;\r\n","import React, { useState, useEffect, Component } from \"react\";\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Link,\r\n  Avatar,\r\n  Typography,\r\n  Button,\r\n  Container,\r\n  Card,\r\n  CardContent,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableHead,\r\n  TableCell,\r\n  TextField,\r\n  Radio,\r\n  RadioGroup,\r\n  FormLabel,\r\n  FormControlLabel,\r\n  FormControl,\r\n  CircularProgress,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport CustomAlert from \"../../../../../components/CustomAlert\";\r\n\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport Api from \"../../../../../components/Api\";\r\nimport {\r\n  privateApiGET,\r\n  privateApiPOST,\r\n} from \"../../../../../components/PrivateRoute\";\r\nimport financialYears from \"../../../../../mock-adapter/financialYears.json\";\r\n\r\nexport const customTextStyles = makeStyles((theme) => ({\r\n  tableHeader: {\r\n    fontSize: \"16px\",\r\n    fontWeight: \"700\",\r\n    lineHeight: \"22px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  tableData: {\r\n    fontSize: \"16px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"23px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  headerText: {\r\n    fontSize: \"24px\",\r\n    fontWeight: \"600\",\r\n    marginTop: \"32px\",\r\n    marginBottom: \"16px\",\r\n    color: \"#2069DB\",\r\n  },\r\n  confirmButton: {\r\n    fontSize: \"14px\",\r\n    fontWeight: \"600\",\r\n    lineHeight: \"19px\",\r\n    color: \"#FFFFFF\",\r\n    padding: \"10px 40px 9px\",\r\n    marginBottom: \"4px\",\r\n  },\r\n  mobileViewTableCellValue: {\r\n    color: \"rgb(71, 71, 71)\",\r\n    fontSize: \"14px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"19px\",\r\n  },\r\n  mobileView: {\r\n    borderRadius: \"4px\",\r\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\r\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\r\n    cursor: \"pointer\",\r\n    border: \"none !important\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  mobileViewTableCellHeader: {\r\n    color: \"rgb(245, 166, 35)\",\r\n    fontSize: \"10px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"14px\",\r\n  },\r\n}));\r\n\r\nconst UsersDisplayPage = ({\r\n  data,\r\n  action,\r\n  setAction,\r\n  isUserDetailsLoadingSpin,\r\n  handleUpdateAppointmentDetails,\r\n}) => {\r\n  const customStyles = customTextStyles();\r\n  return (\r\n    <Box>\r\n      <Typography\r\n        variant=\"h3\"\r\n        sx={{\r\n          padding: \"20px\",\r\n          backgroundColor: \"#DDDDDD\",\r\n        }}\r\n      >\r\n        Clients List\r\n      </Typography>\r\n\r\n      <Box\r\n        sx={{\r\n          backgroundColor: \"#fff\",\r\n          marginBottom: \"20px\",\r\n          bgcolor: \"#ffffff\",\r\n          transition: \"box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\r\n          borderRadius: \"6px\",\r\n          // boxShadow: \"0px 2px 8px 0px rgba(99, 99, 99, 0.2)\",\r\n          overflow: \"hidden\",\r\n          color: \"#333333\",\r\n          backgroundImage: \"none\",\r\n        }}\r\n      >\r\n        <Box>\r\n          {isUserDetailsLoadingSpin ? (\r\n            <Box\r\n              display=\"flex\"\r\n              height=\"100%\"\r\n              width=\"100%\"\r\n              justifyContent=\"center\"\r\n              alignItems=\"center\"\r\n              sx={{\r\n                position: \"absolute\",\r\n                zIndex: \"10\",\r\n                left: 0,\r\n                top: \"10%\",\r\n              }}\r\n            >\r\n              <CircularProgress size={30} />\r\n            </Box>\r\n          ) : (\r\n            <TableContainer sx={{ marginTop: \"16px\" }}>\r\n              <Table\r\n                sx={{\r\n                  borderCollapse: \"collapse\",\r\n                }}\r\n                aria-label=\"Place Order Series Table\"\r\n              >\r\n                <TableHead>\r\n                  <TableRow sx={{ backgroundColor: \"#CCEEEE\" }}>\r\n                    <TableCell className={customStyles.tableHeader}>\r\n                      Full Name\r\n                    </TableCell>\r\n                    <TableCell className={customStyles.tableHeader}>\r\n                      Email Id\r\n                    </TableCell>\r\n                    <TableCell className={customStyles.tableHeader}>\r\n                      Contact No\r\n                    </TableCell>\r\n                    <TableCell className={customStyles.tableHeader}>\r\n                      Appointment Date\r\n                    </TableCell>\r\n                    <TableCell className={customStyles.tableHeader}>\r\n                      Appointment Time\r\n                    </TableCell>\r\n                    <TableCell className={customStyles.tableHeader}>\r\n                      Action\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {data.length > 0 &&\r\n                    data.map((row, id) => (\r\n                      <TableRow key={id}>\r\n                        <TableCell className={customStyles.tableData}>\r\n                          {row.first_name} {row.last_name}\r\n                        </TableCell>\r\n\r\n                        <TableCell className={customStyles.tableData}>\r\n                          {row.email}\r\n                        </TableCell>\r\n                        <TableCell className={customStyles.tableData}>\r\n                          {row.phone_no}\r\n                        </TableCell>\r\n                        <TableCell className={customStyles.tableData}>\r\n                          {row.filing.appointmentDate}\r\n                        </TableCell>\r\n                        <TableCell className={customStyles.tableData}>\r\n                          {row.filing.appointmentTime}\r\n                        </TableCell>\r\n                        <TableCell sx={{ display: \"flex\", flexWrap: \"nowrap\" }}>\r\n                          {[\"view\", \"update\", \"delete\", \"refund\"].map(\r\n                            (each, id) => (\r\n                              <button\r\n                                key={id}\r\n                                onClick={(e) =>\r\n                                  handleUpdateAppointmentDetails(row, each)\r\n                                }\r\n                                style={{\r\n                                  minHeight: \"25px\",\r\n                                  padding: \"2px\",\r\n                                  marginLeft: \"5px\",\r\n                                  border: \"1px solid black\",\r\n                                }}\r\n                              >\r\n                                {each}\r\n                              </button>\r\n                            )\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell className={customStyles.mobileView}>\r\n                          <Box>\r\n                            <Box\r\n                              sx={{\r\n                                display: \"flex\",\r\n                                flexDirection: \"column\",\r\n                                marginTop: \"16px\",\r\n                              }}\r\n                            >\r\n                              <Box sx={{ marginTop: \"3px\" }}>\r\n                                <Typography\r\n                                  className={\r\n                                    customStyles.mobileViewTableCellHeader\r\n                                  }\r\n                                >\r\n                                  First Name\r\n                                </Typography>\r\n\r\n                                <Typography\r\n                                  className={\r\n                                    customStyles.mobileViewTableCellValue\r\n                                  }\r\n                                >\r\n                                  {row.first_name} {row.last_name}\r\n                                </Typography>\r\n                              </Box>\r\n                            </Box>\r\n                            <Box\r\n                              sx={{\r\n                                display: \"flex\",\r\n                                flexDirection: \"column\",\r\n                                marginTop: \"16px\",\r\n                              }}\r\n                            >\r\n                              <Box sx={{ marginTop: \"3px\" }}>\r\n                                <Typography\r\n                                  className={\r\n                                    customStyles.mobileViewTableCellHeader\r\n                                  }\r\n                                >\r\n                                  Email Id\r\n                                </Typography>\r\n\r\n                                <Typography\r\n                                  className={\r\n                                    customStyles.mobileViewTableCellValue\r\n                                  }\r\n                                >\r\n                                  {row.email}\r\n                                </Typography>\r\n                              </Box>\r\n                              <Box sx={{ marginTop: \"3px\" }}>\r\n                                <Typography\r\n                                  className={\r\n                                    customStyles.mobileViewTableCellHeader\r\n                                  }\r\n                                >\r\n                                  Phone Number\r\n                                </Typography>\r\n\r\n                                <Typography\r\n                                  className={\r\n                                    customStyles.mobileViewTableCellValue\r\n                                  }\r\n                                >\r\n                                  {row.phone_no}\r\n                                </Typography>\r\n                              </Box>\r\n                            </Box>\r\n                          </Box>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          )}\r\n          {data.length === 0 && !isUserDetailsLoadingSpin && (\r\n            <Typography\r\n              variant=\"h5\"\r\n              sx={{ textAlign: \"center\", margin: \"5px 0\" }}\r\n            >\r\n              No Records Found\r\n            </Typography>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UsersDisplayPage;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  Box,\r\n  DialogActions,\r\n  DialogContent,\r\n  CircularProgress,\r\n  DialogTitle,\r\n  IconButton,\r\n  Typography,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nimport CustomInputTextField from \"../../../../../components/CustomInputField\";\r\n\r\nconst customTextStyles = makeStyles((theme) => ({\r\n  dialogBox: {\r\n    borderRadius: \"10px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      borderRadius: \"20px 20px 0px 0px\",\r\n      border: \"1px solid rgba(151,151,151, 1)\",\r\n      boxShadow: \"0px -3px 8px rgba(0,0,0, 0.1)\",\r\n    },\r\n  },\r\n  quantityRow: {\r\n    margin: \"32px auto\",\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    textAlign: \"left\",\r\n    maxWidth: \"230px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      margin: \"24px 20px 40px\",\r\n    },\r\n  },\r\n  boldText: {\r\n    fontSize: \"18px\",\r\n    fontWeight: \"600\",\r\n    lineHeight: \"24px\",\r\n    marginBottom: \"7px\",\r\n  },\r\n  paymentOption: {\r\n    \"& .MuiFormControlLabel-label\": {\r\n      fontSize: \"14px\",\r\n      fontWeight: \"400\",\r\n      lineHeight: \"19px\",\r\n      marginBottom: \"4px\",\r\n    },\r\n  },\r\n  activePaymentOption: {\r\n    \"& .MuiFormControlLabel-label\": {\r\n      fontSize: \"16px\",\r\n      fontWeight: \"600\",\r\n      lineHeight: \"19px\",\r\n      marginBottom: \"7px\",\r\n    },\r\n  },\r\n  normalText: {\r\n    fontSize: \"14px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"22px\",\r\n  },\r\n  headerText: {\r\n    fontSize: \"16px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"23px\",\r\n  },\r\n  mainText: {\r\n    opacity: 1,\r\n    color: \"rgba(71,71,71,1)\",\r\n    fontSize: \"24px\",\r\n    fontWeight: \"400\",\r\n    textAlign: \"center\",\r\n    lineHeight: \"33px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      fontSize: \"20px\",\r\n      lineHeight: \"27px\",\r\n      marginLeft: \"8px\",\r\n      marginRight: \"7px\",\r\n    },\r\n  },\r\n  paper: {\r\n    overflowY: \"unset\",\r\n  },\r\n  customizedButton: {\r\n    position: \"absolute\",\r\n    left: \"97.5%\",\r\n    top: \"-4%\",\r\n    backgroundColor: \"#F5A623\",\r\n    color: \"#FFFFFF\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      left: \"93%\",\r\n      top: \"-5%\",\r\n    },\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.secondary.light,\r\n    },\r\n  },\r\n  confirmButton: {\r\n    fontSize: \"14px\",\r\n    fontWeight: \"600\",\r\n    lineHeight: \"19px\",\r\n    color: \"#FFFFFF\",\r\n    padding: \"10px 40px 9px\",\r\n    marginBottom: \"4px\",\r\n  },\r\n}));\r\n\r\nconst AppointmentUpdateConfirmationDialogBox = ({\r\n  data,\r\n  handleDataChange,\r\n  open,\r\n  handleClose,\r\n  handleConfirm,\r\n  isLoadingSpin,\r\n}) => {\r\n  const customStyles = customTextStyles();\r\n\r\n  const generateTimeOptions = () => {\r\n    const timeOptions = [];\r\n    for (let hours = 11; hours <= 23; hours++) {\r\n      for (let minutes = 0; minutes < 60; minutes += 30) {\r\n        const hourStr = String(hours).padStart(2, \"0\");\r\n        const minuteStr = String(minutes).padStart(2, \"0\");\r\n        const timeOption = `${hourStr}:${minuteStr}`;\r\n        timeOptions.push(timeOption);\r\n      }\r\n    }\r\n    return timeOptions;\r\n  };\r\n\r\n  const timeOptions = generateTimeOptions();\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      scroll=\"paper\"\r\n      aria-labelledby=\"scroll-dialog-title\"\r\n      aria-describedby=\"scroll-dialog-description\"\r\n      classes={{ paper: customStyles.paper }}\r\n      className={customStyles.dialogBox}\r\n    >\r\n      <DialogTitle id=\"scroll-dialog-title\">\r\n        <Typography\r\n          sx={{ fontSize: \"24px\", fontWeight: 600, color: \"#474747\" }}\r\n        >\r\n          {data.action === \"update\"\r\n            ? \"Update Appointment Details\"\r\n            : \"Delete Appointment\"}\r\n        </Typography>\r\n      </DialogTitle>\r\n      <DialogContent dividers={false}>\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={handleClose}\r\n          className={customStyles.customizedButton}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n        {data.action === \"update\" ? (\r\n          <Box\r\n            sx={{ minWidth: { xs: \"360px\", sm: \"480px\" }, margin: \"30px 20px\" }}\r\n          >\r\n            <Box sx={{ margin: \"4px 0\" }}>\r\n              <CustomInputTextField\r\n                attributeMarginTop=\"12px\"\r\n                attribute=\"Appointment Date\"\r\n                is_required={false}\r\n                type=\"date\"\r\n                name=\"date\"\r\n                value={data.date}\r\n                onChange={handleDataChange}\r\n                fullWidth\r\n                required\r\n              />\r\n            </Box>\r\n            <Box sx={{ margin: \"4px 0\" }}>\r\n              <CustomInputTextField\r\n                attributeMarginTop=\"12px\"\r\n                attribute=\"Appointment Time\"\r\n                is_required={false}\r\n                select\r\n                name=\"time\"\r\n                // label=\"Time\"\r\n                value={data.time}\r\n                onChange={handleDataChange}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                required\r\n              >\r\n                {timeOptions.map((option) => (\r\n                  <MenuItem key={option} value={option}>\r\n                    {option}\r\n                  </MenuItem>\r\n                ))}\r\n              </CustomInputTextField>\r\n            </Box>\r\n          </Box>\r\n        ) : data.action === \"delete\" ? (\r\n          <Box sx={{ margin: { xs: \"0 0 32px\", sm: \"32px 152px 32px\" } }}>\r\n            <Typography className={customStyles.mainText}>\r\n              Are you sure you want to delete your appointment?\r\n            </Typography>\r\n          </Box>\r\n        ) : null}\r\n      </DialogContent>\r\n      <DialogActions sx={{ justifyContent: \"center\" }}>\r\n        <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <Button\r\n            variant=\"text\"\r\n            className={customStyles.confirmButton}\r\n            onClick={handleClose}\r\n            sx={{ marginRight: \"15px\", color: \"#474747 !important\" }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            className={customStyles.confirmButton}\r\n            onClick={handleConfirm}\r\n            sx={{ textTransform: \"uppercase\" }}\r\n          >\r\n            {data.action}\r\n            {isLoadingSpin && (\r\n              <CircularProgress\r\n                size={15}\r\n                color=\"primary\"\r\n                sx={{ marginLeft: \"15px\" }}\r\n              />\r\n            )}\r\n          </Button>\r\n        </Box>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AppointmentUpdateConfirmationDialogBox;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableHead,\r\n  TableCell,\r\n  Avatar,\r\n} from \"@mui/material\";\r\nimport { customTextStyles } from \"../../UsersDisplay\";\r\nimport { refundTypes } from \"../../../../../../constants\";\r\nimport financialYears from \"../../../../../../mock-adapter/financialYears.json\";\r\nimport { capitalizeString } from \"../../../../../../utils\";\r\n\r\nconst AddRefundPage = ({\r\n  data,\r\n  isAddRefundActive,\r\n  handleChange,\r\n  handleAddRefund,\r\n  handleSubmit,\r\n  isLoadingSpin,\r\n  handlePageChange,\r\n}) => {\r\n  const customStyles = customTextStyles();\r\n  return (\r\n    <Box\r\n      sx={{\r\n        padding: \"50px 20px 40px\",\r\n      }}\r\n    >\r\n      <Grid container>\r\n        <Grid item xs={12} sm={3}>\r\n          <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <Typography variant=\"h5\" sx={{ marginRight: \"20px\" }}>\r\n              Cient Name :\r\n            </Typography>\r\n            <input\r\n              name=\"name\"\r\n              readOnly={true}\r\n              value={data[0].name}\r\n              style={{\r\n                maxWidth: \"160px\",\r\n                minHeight: \"25px\",\r\n                padding: \"5px\",\r\n              }}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n          <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <Typography variant=\"h5\" sx={{ marginRight: \"20px\" }}>\r\n              Tax Year :\r\n            </Typography>\r\n            <select\r\n              id=\"year\"\r\n              name=\"year\"\r\n              value={data[0].year}\r\n              onChange={(event) => handleChange(0, \"year\", event.target.value)}\r\n              style={{ minHeight: \"25px\", padding: \"5px\" }}\r\n            >\r\n              {financialYears.map((each, id) => (\r\n                <option key={id} value={each}>\r\n                  {each}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n          <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <Typography variant=\"h5\" sx={{ marginRight: \"20px\" }}>\r\n              Service Type :\r\n            </Typography>\r\n            <select\r\n              id=\"service_type\"\r\n              name=\"service_type\"\r\n              value={data[0].service_type}\r\n              readOnly={true}\r\n              style={{ minHeight: \"25px\", padding: \"5px\" }}\r\n            >\r\n              {/* Add an empty option */}\r\n              <option value=\"REGULAR\">Regular</option>\r\n            </select>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} sm={3}>\r\n          <button\r\n            onClick={handlePageChange}\r\n            style={{ minHeight: \"25px\", padding: \"5px\" }}\r\n          >\r\n            View Refund Summary\r\n          </button>\r\n        </Grid>\r\n      </Grid>\r\n      <Box sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n        <Avatar\r\n          variant=\"square\"\r\n          src=\"/static/img/add_it.gif\"\r\n          onClick={handleAddRefund}\r\n          sx={{ height: \"25px\", width: \"66px\", margin: \"30px 0 20px\" }}\r\n        />\r\n      </Box>\r\n      <Typography variant=\"h5\" sx={{ color: \"red\" }}>\r\n        *Please enter amounts in .00 format\r\n      </Typography>\r\n      <TableContainer sx={{ marginTop: \"16px\" }}>\r\n        <Table\r\n          sx={{\r\n            borderCollapse: \"collapse\",\r\n          }}\r\n          aria-label=\"Place Order Series Table\"\r\n        >\r\n          <TableHead>\r\n            <TableRow sx={{ backgroundColor: \"#C7DFF0\" }}>\r\n              <TableCell className={customStyles.tableHeader}>\r\n                Refund Type\r\n              </TableCell>\r\n              <TableCell className={customStyles.tableHeader}>\r\n                Standard Refund\r\n              </TableCell>\r\n              <TableCell className={customStyles.tableHeader}>\r\n                Standard Fee\r\n              </TableCell>\r\n              <TableCell className={customStyles.tableHeader}>\r\n                Itemized Refund\r\n              </TableCell>\r\n              <TableCell className={customStyles.tableHeader}>\r\n                Itemized Fee\r\n              </TableCell>\r\n              <TableCell className={customStyles.tableHeader}>\r\n                Discount\r\n              </TableCell>\r\n              <TableCell className={customStyles.tableHeader}>\r\n                Paid Advance\r\n              </TableCell>\r\n              <TableCell className={customStyles.tableHeader}>\r\n                Max Itemized Refund\r\n              </TableCell>\r\n              <TableCell className={customStyles.tableHeader}>\r\n                Max Itemized Fee\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {isAddRefundActive &&\r\n              data.length > 0 &&\r\n              data.map((row, id) => (\r\n                <TableRow key={id}>\r\n                  <TableCell className={customStyles.tableData}>\r\n                    <select\r\n                      name=\"refund_type\"\r\n                      onChange={(event) =>\r\n                        handleChange(id, \"refund_type\", event.target.value)\r\n                      }\r\n                      value={row.refund_type}\r\n                      style={{ minHeight: \"25px\", padding: \"5px\" }}\r\n                    >\r\n                      {refundTypes.map((each, id) => (\r\n                        <option key={id} value={each}>\r\n                          {capitalizeString(each)}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableData}>\r\n                    <input\r\n                      name=\"standard_refund\"\r\n                      onChange={(event) =>\r\n                        handleChange(id, \"standard_refund\", event.target.value)\r\n                      }\r\n                      value={row.standard_refund}\r\n                      style={{\r\n                        maxWidth: \"110px\",\r\n                        minHeight: \"25px\",\r\n                        padding: \"5px\",\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableData}>\r\n                    <input\r\n                      name=\"standard_fee\"\r\n                      onChange={(event) =>\r\n                        handleChange(id, \"standard_fee\", event.target.value)\r\n                      }\r\n                      value={row.standard_fee}\r\n                      style={{\r\n                        maxWidth: \"110px\",\r\n                        minHeight: \"25px\",\r\n                        padding: \"5px\",\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableData}>\r\n                    <input\r\n                      name=\"itemized_refund\"\r\n                      onChange={(event) =>\r\n                        handleChange(id, \"itemized_refund\", event.target.value)\r\n                      }\r\n                      value={row.itemized_refund}\r\n                      style={{\r\n                        maxWidth: \"110px\",\r\n                        minHeight: \"25px\",\r\n                        padding: \"5px\",\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableData}>\r\n                    <input\r\n                      name=\"itemized_fee\"\r\n                      onChange={(event) =>\r\n                        handleChange(id, \"itemized_fee\", event.target.value)\r\n                      }\r\n                      value={row.itemized_fee}\r\n                      style={{\r\n                        maxWidth: \"110px\",\r\n                        minHeight: \"25px\",\r\n                        padding: \"5px\",\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableData}>\r\n                    <input\r\n                      name=\"discount\"\r\n                      onChange={(event) =>\r\n                        handleChange(id, \"discount\", event.target.value)\r\n                      }\r\n                      value={row.discount}\r\n                      style={{\r\n                        maxWidth: \"110px\",\r\n                        minHeight: \"25px\",\r\n                        padding: \"5px\",\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableData}>\r\n                    <input\r\n                      name=\"paid_advance\"\r\n                      onChange={(event) =>\r\n                        handleChange(id, \"paid_advance\", event.target.value)\r\n                      }\r\n                      value={row.paid_advance}\r\n                      style={{\r\n                        maxWidth: \"110px\",\r\n                        minHeight: \"25px\",\r\n                        padding: \"5px\",\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableData}>\r\n                    <input\r\n                      name=\"max_itemized_refund\"\r\n                      onChange={(event) =>\r\n                        handleChange(\r\n                          id,\r\n                          \"max_itemized_refund\",\r\n                          event.target.value\r\n                        )\r\n                      }\r\n                      value={row.max_itemized_refund}\r\n                      style={{\r\n                        maxWidth: \"110px\",\r\n                        minHeight: \"25px\",\r\n                        padding: \"5px\",\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableData}>\r\n                    <input\r\n                      name=\"max_itemized_fee\"\r\n                      onChange={(event) =>\r\n                        handleChange(id, \"max_itemized_fee\", event.target.value)\r\n                      }\r\n                      value={row.max_itemized_fee}\r\n                      style={{\r\n                        maxWidth: \"110px\",\r\n                        minHeight: \"25px\",\r\n                        padding: \"5px\",\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Box\r\n        sx={{ display: \"flex\", justifyContent: \"center\", marginTop: \"40px\" }}\r\n      >\r\n        <button\r\n          onClick={() => isAddRefundActive && handleSubmit()}\r\n          style={{ minHeight: \"25px\", padding: \"5px\" }}\r\n        >\r\n          Submit Refund Details\r\n        </button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddRefundPage;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableHead,\r\n  TableCell,\r\n} from \"@mui/material\";\r\nimport { customTextStyles } from \"../../UsersDisplay\";\r\nimport { capitalizeString } from \"../../../../../../utils\";\r\n\r\nconst SummaryRefundPage = ({ data, isLoadingSpin, handlePageChange }) => {\r\n  const customStyles = customTextStyles();\r\n  return (\r\n    <Box\r\n      sx={{\r\n        margin: \"10px\",\r\n        border: \"1px solid #DDDDDD\",\r\n        padding: \"20px 20px 40px\",\r\n      }}\r\n    >\r\n      <Box sx={{ display: \"flex\", justifyContent: \"flex-start\" }}>\r\n        <button\r\n          onClick={handlePageChange}\r\n          style={{ minHeight: \"25px\", padding: \"5px\" }}\r\n        >\r\n          Back to Add Refund\r\n        </button>\r\n      </Box>\r\n\r\n      <TableContainer sx={{ marginTop: \"16px\" }}>\r\n        <Table\r\n          sx={{\r\n            borderCollapse: \"collapse\",\r\n          }}\r\n          aria-label=\"Place Order Series Table\"\r\n        >\r\n          <TableHead>\r\n            <TableRow sx={{ backgroundColor: \"#CCEEEE\" }}>\r\n              <TableCell className={customStyles.tableHeader}>\r\n                Refund Id\r\n              </TableCell>\r\n              <TableCell className={customStyles.tableHeader}>\r\n                Refund Type\r\n              </TableCell>\r\n              <TableCell className={customStyles.tableHeader}>\r\n                Standard Refund\r\n              </TableCell>\r\n              <TableCell className={customStyles.tableHeader}>\r\n                Itemized Refund\r\n              </TableCell>\r\n              <TableCell className={customStyles.tableHeader}>\r\n                Discount\r\n              </TableCell>\r\n              <TableCell className={customStyles.tableHeader}>\r\n                Paid Advance\r\n              </TableCell>\r\n              <TableCell className={customStyles.tableHeader}>\r\n                Remarks\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.length > 0 &&\r\n              data.map((row, id) => (\r\n                <TableRow key={id}>\r\n                  <TableCell className={customStyles.tableData}>\r\n                    {row.id}\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableData}>\r\n                    {capitalizeString(row.refund_type)}\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableData}>\r\n                    {row.standard_refund}\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableData}>\r\n                    {row.itemized_refund}\r\n                  </TableCell>\r\n\r\n                  <TableCell className={customStyles.tableData}>\r\n                    {row.discount}\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableData}>\r\n                    {row.paid_advance}\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableData}></TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SummaryRefundPage;\r\n","import React, { useState } from \"react\";\r\nimport { Grid, Box, Typography } from \"@mui/material\";\r\nimport AddRefundPage from \"./AddRefund\";\r\nimport SummaryRefundPage from \"./SummaryRefunds\";\r\n\r\nconst RefundPage = ({\r\n  open,\r\n  data,\r\n  isAddRefundActive,\r\n  addRefundData,\r\n  handleAddRefund,\r\n  handleAddRefundDataChange,\r\n  handleFetchAddRefund,\r\n  isLoadingSpin,\r\n}) => {\r\n  const [activeRefundPage, setActiveRefundPage] = useState(\"add\");\r\n\r\n  const handleActiveRefundPageChange = () => {\r\n    if (activeRefundPage === \"add\") {\r\n      setActiveRefundPage(\"summary\");\r\n    } else {\r\n      setActiveRefundPage(\"add\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      {open ? (\r\n        <Box\r\n          sx={{\r\n            margin: \"10px\",\r\n          }}\r\n        >\r\n          <Typography\r\n            variant=\"h3\"\r\n            sx={{\r\n              padding: \"20px\",\r\n              backgroundColor: \"#DDDDDD\",\r\n            }}\r\n          >\r\n            Refund Details\r\n          </Typography>\r\n          {activeRefundPage === \"add\" ? (\r\n            <AddRefundPage\r\n              data={addRefundData}\r\n              isAddRefundActive={isAddRefundActive}\r\n              handleAddRefund={handleAddRefund}\r\n              handleChange={handleAddRefundDataChange}\r\n              handleSubmit={handleFetchAddRefund}\r\n              handlePageChange={handleActiveRefundPageChange}\r\n              isLoadingSpin={isLoadingSpin}\r\n            />\r\n          ) : activeRefundPage === \"summary\" ? (\r\n            <SummaryRefundPage\r\n              data={data}\r\n              isLoadingSpin={isLoadingSpin}\r\n              handlePageChange={handleActiveRefundPageChange}\r\n            />\r\n          ) : null}\r\n        </Box>\r\n      ) : null}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default RefundPage;\r\n","import React, { useState, useEffect, Component } from \"react\";\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Link,\r\n  Avatar,\r\n  Typography,\r\n  Button,\r\n  Container,\r\n  Card,\r\n  CardContent,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableHead,\r\n  TableCell,\r\n  TextField,\r\n  Radio,\r\n  RadioGroup,\r\n  FormLabel,\r\n  FormControlLabel,\r\n  FormControl,\r\n  CircularProgress,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport CustomAlert from \"../../../../components/CustomAlert\";\r\n\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport Api from \"../../../../components/Api\";\r\nimport {\r\n  privateApiGET,\r\n  privateApiPOST,\r\n} from \"../../../../components/PrivateRoute\";\r\nimport financialYears from \"../../../../mock-adapter/financialYears.json\";\r\nimport SearchFiltersPage from \"./SearchFilters\";\r\nimport UsersDisplayPage from \"./UsersDisplay\";\r\nimport AppointmentUpdateConfirmationDialogBox from \"./UpdateAppointment\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport RefundPage from \"./Refund\";\r\n\r\nexport const customTextStyles = makeStyles((theme) => ({\r\n  tableHeader: {\r\n    fontSize: \"16px\",\r\n    fontWeight: \"700\",\r\n    lineHeight: \"22px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  tableData: {\r\n    fontSize: \"16px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"23px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  headerText: {\r\n    fontSize: \"24px\",\r\n    fontWeight: \"600\",\r\n    marginTop: \"32px\",\r\n    marginBottom: \"16px\",\r\n    color: \"#2069DB\",\r\n  },\r\n  confirmButton: {\r\n    fontSize: \"14px\",\r\n    fontWeight: \"600\",\r\n    lineHeight: \"19px\",\r\n    color: \"#FFFFFF\",\r\n    padding: \"10px 40px 9px\",\r\n    marginBottom: \"4px\",\r\n  },\r\n  mobileViewTableCellValue: {\r\n    color: \"rgb(71, 71, 71)\",\r\n    fontSize: \"14px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"19px\",\r\n  },\r\n  mobileView: {\r\n    borderRadius: \"4px\",\r\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\r\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\r\n    cursor: \"pointer\",\r\n    border: \"none !important\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  mobileViewTableCellHeader: {\r\n    color: \"rgb(245, 166, 35)\",\r\n    fontSize: \"10px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"14px\",\r\n  },\r\n}));\r\n\r\nconst SearchClientsPage = () => {\r\n  const customStyles = customTextStyles();\r\n  const [isLoadingSpin, setIsLoadingSpin] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  const navigate = useNavigate();\r\n  const [filters, setFilters] = useState({\r\n    name: \"All\",\r\n    criteria: \"Equals to\",\r\n    search: \"\",\r\n    year: \"All\",\r\n  });\r\n  const [action, setAction] = useState({});\r\n\r\n  const [isRefundPageOpen, setIsRefundPageOpen] = useState(false);\r\n  const [refundData, setRefundData] = useState([]);\r\n\r\n  const [isDeleteLoadingSpin, setIsDeleteLoadingSpin] = useState(false);\r\n  const [isUserDetailsLoadingSpin, setIsUserDetailsLoadingSpin] =\r\n    useState(false);\r\n  const [isRefundDetailsLoadingSpin, setIsRefundDetailsLoadingSpin] =\r\n    useState(false);\r\n\r\n  const [associateDetails, setAssociateDetails] = useState([]);\r\n  const [showAlert, setShowAlert] = useState({\r\n    isAlert: false,\r\n    alertTitle: \"\",\r\n    alertText: \"\",\r\n    severity: \"\",\r\n  });\r\n\r\n  const [isAppointmentUpdateLoadingSpin, setIsAppointmentUpdateLoadingSpin] =\r\n    useState(false);\r\n  const [\r\n    isAppointmentUpdateConfirmationDialogBoxOpen,\r\n    setIsAppointmentUpdateConfirmationDialogBoxOpen,\r\n  ] = useState(false);\r\n  const [appointmentDetailsData, setAppointmentDetailsData] = useState({\r\n    appointmentId: \"\",\r\n    date: \"\",\r\n    time: \"\",\r\n    type: \"\",\r\n  });\r\n\r\n  const [isAddRefundActive, setIsAddRefundActive] = useState(false);\r\n  const [addRefundData, setAddRefundData] = useState([\r\n    {\r\n      id: \"\",\r\n      name: \"\",\r\n      year: \"\",\r\n      service_type: \"REGULAR\",\r\n      refund_type: \"FEDERAL REFUND\",\r\n      standard_refund: 0,\r\n      standard_fee: 0,\r\n      itemized_refund: 0,\r\n      itemized_fee: 0,\r\n      discount: 0,\r\n      paid_advance: 0,\r\n      max_itemized_refund: 0,\r\n      max_itemized_fee: 0,\r\n    },\r\n  ]);\r\n\r\n  const handleFiltersChange = (event) => {\r\n    setFilters((prev) => ({\r\n      ...prev,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleAddRefundDataChange = (id, label, value) => {\r\n    console.log(id, label, value);\r\n    if (label === \"year\") {\r\n      {\r\n        console.log(\"year\");\r\n\r\n        addRefundData.map((each, id) =>\r\n          setAddRefundData((prev) => [...prev, { ...prev[id], [label]: value }])\r\n        );\r\n      }\r\n    } else {\r\n      console.log(addRefundData[id]);\r\n      setAddRefundData((prev) =>\r\n        prev.map((item, index) => {\r\n          if (index === id) {\r\n            return { ...item, [label]: value };\r\n          }\r\n          return item;\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleAddOneMoreRefundData = () => {\r\n    if (isAddRefundActive) {\r\n      setAddRefundData((prev) => [\r\n        ...prev,\r\n        {\r\n          ...prev[0],\r\n          refund_type: \"FEDERAL REFUND\",\r\n          standard_refund: 0,\r\n          standard_fee: 0,\r\n          itemized_refund: 0,\r\n          itemized_fee: 0,\r\n          discount: 0,\r\n          paid_advance: 0,\r\n          max_itemized_refund: 0,\r\n          max_itemized_fee: 0,\r\n        },\r\n      ]);\r\n    } else {\r\n      setIsAddRefundActive(true);\r\n    }\r\n  };\r\n\r\n  const handleFetchUpdateAppointment = (payload) => {\r\n    setIsAppointmentUpdateLoadingSpin(true);\r\n    privateApiPOST(\r\n      payload.action === \"update\"\r\n        ? Api.updateAppointment\r\n        : Api.deleteAppointment,\r\n      payload\r\n    )\r\n      .then((response) => {\r\n        const { status, data } = response;\r\n        if (status === 200) {\r\n          console.log(\"data\", data);\r\n          setShowAlert({\r\n            isAlert: true,\r\n            alertText: data?.message,\r\n            severity: \"success\",\r\n          });\r\n        }\r\n        setIsAppointmentUpdateLoadingSpin(false);\r\n        handleAppointmentDetailsUpdateDialogBoxClose();\r\n        handleFetchUsers();\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n        setShowAlert({\r\n          isAlert: true,\r\n          alertText: error.response.data?.message,\r\n          severity: \"error\",\r\n          alertTitle: \"Error\",\r\n        });\r\n        setIsAppointmentUpdateLoadingSpin(false);\r\n        handleAppointmentDetailsUpdateDialogBoxClose();\r\n      });\r\n  };\r\n\r\n  const handleFetchUsers = () => {\r\n    let payload = { ...filters };\r\n    setIsUserDetailsLoadingSpin(true);\r\n    privateApiPOST(Api.users, payload)\r\n      .then((response) => {\r\n        const { status, data } = response;\r\n        if (status === 200) {\r\n          console.log(\"data\", data);\r\n          setUsers(data?.data);\r\n        }\r\n        setIsUserDetailsLoadingSpin(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n        setShowAlert({\r\n          isAlert: true,\r\n          alertText: error.response.data?.message,\r\n          severity: \"error\",\r\n          alertTitle: \"Error\",\r\n        });\r\n        setIsUserDetailsLoadingSpin(false);\r\n      });\r\n  };\r\n\r\n  const handleFetchRefundDetails = (id) => {\r\n    let payload = { id: id };\r\n    setIsRefundDetailsLoadingSpin(true);\r\n    privateApiPOST(Api.refunds, payload)\r\n      .then((response) => {\r\n        const { status, data } = response;\r\n        if (status === 200) {\r\n          console.log(\"data\", data);\r\n          setRefundData(data?.data);\r\n        }\r\n        setIsRefundDetailsLoadingSpin(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n        setShowAlert({\r\n          isAlert: true,\r\n          alertText: error.response.data?.message,\r\n          severity: \"error\",\r\n          alertTitle: \"Error\",\r\n        });\r\n        setIsRefundDetailsLoadingSpin(false);\r\n      });\r\n  };\r\n\r\n  const handleFetchAddRefund = () => {\r\n    setIsRefundDetailsLoadingSpin(true);\r\n    let payload = [...addRefundData];\r\n    privateApiPOST(Api.createRefund, payload)\r\n      .then((response) => {\r\n        const { status, data } = response;\r\n        if (status === 200) {\r\n          console.log(\"data\", data);\r\n          setShowAlert({\r\n            isAlert: true,\r\n            alertText: data?.message,\r\n            severity: \"success\",\r\n          });\r\n          setAddRefundData((prev) => [\r\n            {\r\n              ...prev[0],\r\n              refund_type: \"FEDERAL REFUND\",\r\n              standard_refund: 0,\r\n              standard_fee: 0,\r\n              itemized_refund: 0,\r\n              itemized_fee: 0,\r\n              discount: 0,\r\n              paid_advance: 0,\r\n              max_itemized_refund: 0,\r\n              max_itemized_fee: 0,\r\n            },\r\n          ]);\r\n          setIsAddRefundActive(false);\r\n        }\r\n        setIsRefundDetailsLoadingSpin(false);\r\n        handleFetchRefundDetails(addRefundData[0].id);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n        setShowAlert({\r\n          isAlert: true,\r\n          alertText: error.response.data?.message,\r\n          severity: \"error\",\r\n          alertTitle: \"Error\",\r\n        });\r\n        setIsRefundDetailsLoadingSpin(false);\r\n      });\r\n  };\r\n\r\n  const handleAppointmentDetailsDataChange = (event) => {\r\n    setAppointmentDetailsData((prev) => ({\r\n      ...prev,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleSetAppointmentDetailsUpdateDialogBoxOpen = (data, action) => {\r\n    if (\r\n      (action === \"delete\" &&\r\n        data.filing.appointmentDate &&\r\n        data.filing.appointmentTime) ||\r\n      action === \"update\"\r\n    ) {\r\n      setAppointmentDetailsData((prev) => ({\r\n        ...prev,\r\n        appointmentId: data.filing.appointmentId,\r\n        action: action,\r\n      }));\r\n      setIsAppointmentUpdateConfirmationDialogBoxOpen(true);\r\n    } else if ((!action || action === \"view\") && data.filing.taxFilingId) {\r\n      navigate(\r\n        `/app/tax-filing/${data.filing.taxFilingYear}/${data.filing.taxFilingId}/0`\r\n      );\r\n    } else if (action === \"refund\" && data.id) {\r\n      setIsRefundPageOpen(true);\r\n      setAddRefundData([\r\n        {\r\n          ...addRefundData[0],\r\n          id: data.id,\r\n          name: `${data.first_name} ${data.last_name}`,\r\n          year: \"2023\",\r\n        },\r\n      ]);\r\n      handleFetchRefundDetails(data.id);\r\n    }\r\n  };\r\n\r\n  const handleUpdateAppointmentDetails = () => {\r\n    let data = { ...appointmentDetailsData };\r\n    handleFetchUpdateAppointment(data);\r\n  };\r\n\r\n  const handleAppointmentDetailsUpdateDialogBoxClose = (event, reason) => {\r\n    if (reason && reason == \"backdropClick\") {\r\n      return;\r\n    }\r\n    setAppointmentDetailsData((prev) => ({\r\n      ...prev,\r\n      date: \"\",\r\n      time: \"\",\r\n      appointmentId: \"\",\r\n      type: \"\",\r\n    }));\r\n    setIsAppointmentUpdateConfirmationDialogBoxOpen(false);\r\n    setIsAppointmentUpdateLoadingSpin(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (sessionStorage.getItem(\"token\")) {\r\n      handleFetchUsers();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setIsAddRefundActive(false);\r\n    setIsRefundPageOpen(false);\r\n    setAddRefundData([\r\n      {\r\n        id: \"\",\r\n        name: \"\",\r\n        year: \"\",\r\n        service_type: \"REGULAR\",\r\n        refund_type: \"FEDERAL REFUND\",\r\n        standard_refund: 0,\r\n        standard_fee: 0,\r\n        itemized_refund: 0,\r\n        itemized_fee: 0,\r\n        discount: 0,\r\n        paid_advance: 0,\r\n        max_itemized_refund: 0,\r\n        max_itemized_fee: 0,\r\n      },\r\n    ]);\r\n  }, [users]);\r\n\r\n  console.log(\"refund Data\", addRefundData);\r\n\r\n  return (\r\n    <Box>\r\n      {showAlert.isAlert ? (\r\n        <CustomAlert\r\n          open={showAlert.isAlert}\r\n          severity={showAlert.severity}\r\n          alertTitle={showAlert.alertTitle}\r\n          alertText={showAlert.alertText}\r\n          onClose={() =>\r\n            setShowAlert({\r\n              isAlert: false,\r\n              alertTitle: \"\",\r\n              alertText: \"\",\r\n              severity: \"\",\r\n            })\r\n          }\r\n        />\r\n      ) : null}\r\n\r\n      <SearchFiltersPage\r\n        filters={filters}\r\n        handleFiltersChange={handleFiltersChange}\r\n        handleFetchUsers={handleFetchUsers}\r\n      />\r\n      <UsersDisplayPage\r\n        data={users}\r\n        action={action}\r\n        setAction={setAction}\r\n        isUserDetailsLoadingSpin={isUserDetailsLoadingSpin}\r\n        handleUpdateAppointmentDetails={\r\n          handleSetAppointmentDetailsUpdateDialogBoxOpen\r\n        }\r\n      />\r\n      <AppointmentUpdateConfirmationDialogBox\r\n        data={appointmentDetailsData}\r\n        handleDataChange={handleAppointmentDetailsDataChange}\r\n        open={isAppointmentUpdateConfirmationDialogBoxOpen}\r\n        handleClose={handleAppointmentDetailsUpdateDialogBoxClose}\r\n        handleConfirm={handleUpdateAppointmentDetails}\r\n        isLoadingSpin={isAppointmentUpdateLoadingSpin}\r\n      />\r\n      <RefundPage\r\n        open={isRefundPageOpen}\r\n        data={refundData}\r\n        isAddRefundActive={isAddRefundActive}\r\n        handleAddRefund={handleAddOneMoreRefundData}\r\n        addRefundData={addRefundData}\r\n        handleAddRefundDataChange={handleAddRefundDataChange}\r\n        handleFetchAddRefund={handleFetchAddRefund}\r\n        isLoadingSpin={isRefundDetailsLoadingSpin}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SearchClientsPage;\r\n","import React, { useState, useEffect, Component } from \"react\";\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Link,\r\n  Avatar,\r\n  Typography,\r\n  Button,\r\n  Container,\r\n  Card,\r\n  CardContent,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableHead,\r\n  TableCell,\r\n  TextField,\r\n  Radio,\r\n  RadioGroup,\r\n  FormLabel,\r\n  FormControlLabel,\r\n  FormControl,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport CustomAlert from \"../../../../components/CustomAlert\";\r\n\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport Api from \"../../../../components/Api\";\r\nimport {\r\n  privateApiGET,\r\n  privateApiPOST,\r\n} from \"../../../../components/PrivateRoute\";\r\n\r\nexport const customTextStyles = makeStyles((theme) => ({\r\n  tableHeader: {\r\n    fontSize: \"16px\",\r\n    fontWeight: \"700\",\r\n    lineHeight: \"22px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  tableData: {\r\n    fontSize: \"16px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"23px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  headerText: {\r\n    fontSize: \"24px\",\r\n    fontWeight: \"600\",\r\n    marginTop: \"32px\",\r\n    marginBottom: \"16px\",\r\n    color: \"#2069DB\",\r\n  },\r\n  confirmButton: {\r\n    fontSize: \"14px\",\r\n    fontWeight: \"600\",\r\n    lineHeight: \"19px\",\r\n    color: \"#FFFFFF\",\r\n    padding: \"10px 40px 9px\",\r\n    marginBottom: \"4px\",\r\n  },\r\n  mobileViewTableCellValue: {\r\n    color: \"rgb(71, 71, 71)\",\r\n    fontSize: \"14px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"19px\",\r\n  },\r\n  mobileView: {\r\n    borderRadius: \"4px\",\r\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\r\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\r\n    cursor: \"pointer\",\r\n    border: \"none !important\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  mobileViewTableCellHeader: {\r\n    color: \"rgb(245, 166, 35)\",\r\n    fontSize: \"10px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"14px\",\r\n  },\r\n}));\r\n\r\nconst AssociatesListPage = () => {\r\n  const customStyles = customTextStyles();\r\n  const [isLoadingSpin, setIsLoadingSpin] = useState(false);\r\n  const [isDeleteLoadingSpin, setIsDeleteLoadingSpin] = useState(false);\r\n  const [associateDetails, setAssociateDetails] = useState([]);\r\n  const [showAlert, setShowAlert] = useState({\r\n    isAlert: false,\r\n    alertTitle: \"\",\r\n    alertText: \"\",\r\n    severity: \"\",\r\n  });\r\n\r\n  const handleFetchAssociateDetails = () => {\r\n    setIsLoadingSpin(true);\r\n    privateApiGET(Api.associateDetails)\r\n      .then((response) => {\r\n        const { status, data } = response;\r\n        if (status === 200) {\r\n          console.log(\"data\", data);\r\n          setAssociateDetails(data?.data);\r\n        }\r\n        setIsLoadingSpin(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n        setIsLoadingSpin(false);\r\n      });\r\n  };\r\n\r\n  const handleDeleteAssociate = (id) => {\r\n    let payload = { associateId: id };\r\n    setIsDeleteLoadingSpin(true);\r\n    privateApiPOST(Api.associateDetails, payload)\r\n      .then((response) => {\r\n        const { status, data } = response;\r\n        if (status === 200) {\r\n          console.log(\"data\", data);\r\n          setAssociateDetails(data?.data);\r\n          setShowAlert({\r\n            isAlert: true,\r\n            alertText: data?.message,\r\n            severity: \"success\",\r\n          });\r\n        }\r\n        setIsDeleteLoadingSpin(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n        setShowAlert({\r\n          isAlert: true,\r\n          alertText: error.response.data?.message,\r\n          severity: \"error\",\r\n          alertTitle: \"Error\",\r\n        });\r\n        setIsDeleteLoadingSpin(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (sessionStorage.getItem(\"token\")) {\r\n      handleFetchAssociateDetails();\r\n    }\r\n  }, []);\r\n  console.log(associateDetails);\r\n  return (\r\n    <Box>\r\n      {showAlert.isAlert ? (\r\n        <CustomAlert\r\n          open={showAlert.isAlert}\r\n          severity={showAlert.severity}\r\n          alertTitle={showAlert.alertTitle}\r\n          alertText={showAlert.alertText}\r\n          onClose={() =>\r\n            setShowAlert({\r\n              isAlert: false,\r\n              alertTitle: \"\",\r\n              alertText: \"\",\r\n              severity: \"\",\r\n            })\r\n          }\r\n        />\r\n      ) : null}\r\n      <Typography\r\n        variant=\"h3\"\r\n        sx={{\r\n          padding: \"20px\",\r\n          backgroundColor: \"#DDDDDD\",\r\n        }}\r\n      >\r\n        Associate's List\r\n      </Typography>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: \"#fff\",\r\n          padding: { sm: \"20px\", xs: \"0\" },\r\n          paddingTop: { xs: \"30px\" },\r\n          paddingBottom: { xs: \"20px\" },\r\n          bgcolor: \"#ffffff\",\r\n          transition: \"box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\r\n          borderRadius: \"6px\",\r\n          // boxShadow: \"0px 2px 8px 0px rgba(99, 99, 99, 0.2)\",\r\n          overflow: \"hidden\",\r\n          color: \"#333333\",\r\n          backgroundImage: \"none\",\r\n        }}\r\n      >\r\n        <Box>\r\n          {isLoadingSpin ? (\r\n            <Box\r\n              display=\"flex\"\r\n              height=\"100%\"\r\n              width=\"100%\"\r\n              justifyContent=\"center\"\r\n              alignItems=\"center\"\r\n              sx={{\r\n                position: \"absolute\",\r\n                zIndex: \"10\",\r\n                left: 0,\r\n                top: \"30%\",\r\n              }}\r\n            >\r\n              <CircularProgress size={30} />\r\n            </Box>\r\n          ) : (\r\n            <TableContainer sx={{ marginTop: \"32px\" }}>\r\n              <Table\r\n                sx={{\r\n                  borderCollapse: \"collapse\",\r\n                }}\r\n                aria-label=\"Place Order Series Table\"\r\n              >\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell className={customStyles.tableHeader}>\r\n                      First Name\r\n                    </TableCell>\r\n                    <TableCell className={customStyles.tableHeader}>\r\n                      Last Name\r\n                    </TableCell>\r\n                    <TableCell className={customStyles.tableHeader}>\r\n                      Email Id\r\n                    </TableCell>\r\n                    <TableCell className={customStyles.tableHeader}>\r\n                      Contact No\r\n                    </TableCell>\r\n                    <TableCell className={customStyles.tableHeader}>\r\n                      Associate Code\r\n                    </TableCell>\r\n                    <TableCell className={customStyles.tableHeader}>\r\n                      Action\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {associateDetails.length > 0 &&\r\n                    associateDetails.map((row, id) => (\r\n                      <TableRow key={id}>\r\n                        <TableCell className={customStyles.tableData}>\r\n                          {row.first_name}\r\n                        </TableCell>\r\n                        <TableCell className={customStyles.tableData}>\r\n                          {row.last_name}\r\n                        </TableCell>\r\n                        <TableCell className={customStyles.tableData}>\r\n                          {row.email}\r\n                        </TableCell>\r\n                        <TableCell className={customStyles.tableData}>\r\n                          {row.contact_no}\r\n                        </TableCell>\r\n                        <TableCell className={customStyles.tableData}>\r\n                          {row.code}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <Button\r\n                            disabled={isDeleteLoadingSpin}\r\n                            startIcon={<DeleteIcon />}\r\n                            size=\"small\"\r\n                            onClick={() => {\r\n                              handleDeleteAssociate(row.id);\r\n                            }}\r\n                            className={customStyles.buttons}\r\n                          >\r\n                            Delete{\" \"}\r\n                            {isDeleteLoadingSpin && (\r\n                              <CircularProgress sx={{ ml: 1 }} size={14} />\r\n                            )}\r\n                          </Button>\r\n                        </TableCell>\r\n                        <TableCell className={customStyles.mobileView}>\r\n                          <Box>\r\n                            <Box\r\n                              sx={{\r\n                                display: \"flex\",\r\n                                flexDirection: \"column\",\r\n                                marginTop: \"16px\",\r\n                              }}\r\n                            >\r\n                              <Box sx={{ marginTop: \"3px\" }}>\r\n                                <Typography\r\n                                  className={\r\n                                    customStyles.mobileViewTableCellHeader\r\n                                  }\r\n                                >\r\n                                  First Name\r\n                                </Typography>\r\n\r\n                                <Typography\r\n                                  className={\r\n                                    customStyles.mobileViewTableCellValue\r\n                                  }\r\n                                >\r\n                                  {row.first_name}\r\n                                </Typography>\r\n                              </Box>\r\n                              <Box sx={{ marginTop: \"3px\" }}>\r\n                                <Typography\r\n                                  className={\r\n                                    customStyles.mobileViewTableCellHeader\r\n                                  }\r\n                                >\r\n                                  Last Name\r\n                                </Typography>\r\n\r\n                                <Typography\r\n                                  className={\r\n                                    customStyles.mobileViewTableCellValue\r\n                                  }\r\n                                >\r\n                                  {row.last_name}\r\n                                </Typography>\r\n                              </Box>\r\n                            </Box>\r\n                            <Box\r\n                              sx={{\r\n                                display: \"flex\",\r\n                                flexDirection: \"column\",\r\n                                marginTop: \"16px\",\r\n                              }}\r\n                            >\r\n                              <Box sx={{ marginTop: \"3px\" }}>\r\n                                <Typography\r\n                                  className={\r\n                                    customStyles.mobileViewTableCellHeader\r\n                                  }\r\n                                >\r\n                                  Email Id\r\n                                </Typography>\r\n\r\n                                <Typography\r\n                                  className={\r\n                                    customStyles.mobileViewTableCellValue\r\n                                  }\r\n                                >\r\n                                  {row.email}\r\n                                </Typography>\r\n                              </Box>\r\n                              <Box sx={{ marginTop: \"3px\" }}>\r\n                                <Typography\r\n                                  className={\r\n                                    customStyles.mobileViewTableCellHeader\r\n                                  }\r\n                                >\r\n                                  Phone Number\r\n                                </Typography>\r\n\r\n                                <Typography\r\n                                  className={\r\n                                    customStyles.mobileViewTableCellValue\r\n                                  }\r\n                                >\r\n                                  {row.phone_no}\r\n                                </Typography>\r\n                              </Box>\r\n                            </Box>\r\n                          </Box>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n              </Table>\r\n              {associateDetails.length === 0 && !isLoadingSpin && (\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  sx={{ textAlign: \"center\", margin: \"10px 0\" }}\r\n                >\r\n                  No Records Found\r\n                </Typography>\r\n              )}\r\n            </TableContainer>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AssociatesListPage;\r\n","import React, { useState } from \"react\";\r\nimport Page from \"../../../../components/Page\";\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Container,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Api from \"../../../../components/Api\";\r\nimport { privateApiPOST } from \"../../../../components/PrivateRoute\";\r\nimport CustomInputTextField from \"../../../../components/CustomInputField\";\r\nimport CustomAlert from \"../../../../components/CustomAlert\";\r\n\r\nconst initialValues = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  email: \"\",\r\n  contact: \"\",\r\n  associateCode: \"\",\r\n  password: \"\",\r\n  uploadDocsView: false,\r\n  manageAppointment: false,\r\n  role: \"ADMIN\",\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  firstName: Yup.string().required(\"First Name is required\"),\r\n  lastName: Yup.string().required(\"Last Name is required\"),\r\n  email: Yup.string()\r\n    .email(\"Invalid email format\")\r\n    .required(\"Email is required\"),\r\n  contact: Yup.string().required(\"Contact number is required\"),\r\n  password: Yup.string().required(\"Password is required\"),\r\n  associateCode: Yup.string().required(\"Associate Code is required\"),\r\n  uploadDocsView: Yup.string().required(\"Upload Docs View is required\"),\r\n  manageAppointment: Yup.string().required(\"Manage Appointment is required\"),\r\n});\r\n\r\nconst AddAssociatePage = () => {\r\n  const [isLoadingSpin, setIsLoadingSpin] = useState(false);\r\n  const [showAlert, setShowAlert] = useState({\r\n    isAlert: false,\r\n    alertTitle: \"\",\r\n    alertText: \"\",\r\n    severity: \"\",\r\n  });\r\n\r\n  return (\r\n    <Box>\r\n      {showAlert.isAlert ? (\r\n        <CustomAlert\r\n          open={showAlert.isAlert}\r\n          severity={showAlert.severity}\r\n          alertTitle={showAlert.alertTitle}\r\n          alertText={showAlert.alertText}\r\n          onClose={() =>\r\n            setShowAlert({\r\n              isAlert: false,\r\n              alertTitle: \"\",\r\n              alertText: \"\",\r\n              severity: \"\",\r\n            })\r\n          }\r\n        />\r\n      ) : null}\r\n      <Typography\r\n        variant=\"h3\"\r\n        sx={{\r\n          padding: \"20px\",\r\n          backgroundColor: \"#DDDDDD\",\r\n        }}\r\n      >\r\n        Add Associate\r\n      </Typography>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: \"#fff\",\r\n          padding: { sm: \"30px\", xs: \"0\" },\r\n          paddingTop: { xs: \"30px\" },\r\n          paddingBottom: { xs: \"20px\" },\r\n          bgcolor: \"#ffffff\",\r\n          transition: \"box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\r\n          borderRadius: \"6px\",\r\n          // boxShadow: \"0px 2px 8px 0px rgba(99, 99, 99, 0.2)\",\r\n          overflow: \"hidden\",\r\n          color: \"#333333\",\r\n          backgroundImage: \"none\",\r\n        }}\r\n      >\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(values, { setSubmitting, resetForm }) => {\r\n            setIsLoadingSpin(true);\r\n            setSubmitting(true);\r\n            let payload = { ...values };\r\n            privateApiPOST(Api.signup, payload)\r\n              .then((response) => {\r\n                const { status, data } = response;\r\n                if (status === 200) {\r\n                  console.log(\"data\", data?.data);\r\n                  setShowAlert({\r\n                    isAlert: true,\r\n                    alertText: data?.message,\r\n                    severity: \"success\",\r\n                  });\r\n                  resetForm();\r\n                }\r\n                setSubmitting(false);\r\n                setIsLoadingSpin(false);\r\n              })\r\n              .catch((error) => {\r\n                console.log(\"Error\", error);\r\n                if (\r\n                  error.response.status === 400 ||\r\n                  error.response.status === 401\r\n                ) {\r\n                  setShowAlert({\r\n                    isAlert: true,\r\n                    alertText: error.response.data?.message,\r\n                    severity: \"error\",\r\n                    alertTitle: \"Error\",\r\n                  });\r\n                  setSubmitting(false);\r\n                } else {\r\n                  setShowAlert({\r\n                    isAlert: true,\r\n                    alertText: \"Something went wrong\",\r\n                    severity: \"error\",\r\n                    alertTitle: \"Error\",\r\n                  });\r\n                  resetForm();\r\n                  setSubmitting(false);\r\n                }\r\n                setIsLoadingSpin(false);\r\n              });\r\n          }}\r\n        >\r\n          {({ values, handleChange, errors, touched, handleBlur }) => (\r\n            <Form>\r\n              <Grid container spacing={2} sx={{ marginLeft: \"0px\" }}>\r\n                <Grid\r\n                  container\r\n                  sx={{\r\n                    marginBottom: \"30px\",\r\n                    marginTop: \"30px\",\r\n                  }}\r\n                >\r\n                  <Grid item xs={12} sm={5} sx={{ marginRight: \"20px\" }}>\r\n                    <CustomInputTextField\r\n                      attribute=\"First Name\"\r\n                      margin=\"normal\"\r\n                      name=\"firstName\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      fullWidth\r\n                      value={values.firstName}\r\n                      variant=\"outlined\"\r\n                      error={Boolean(touched.firstName && errors.firstName)}\r\n                      helperText={touched.firstName && errors.firstName}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={5} sx={{ marginRight: \"20px\" }}>\r\n                    <CustomInputTextField\r\n                      attribute=\"Last Name\"\r\n                      margin=\"normal\"\r\n                      name=\"lastName\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      fullWidth\r\n                      value={values.lastName}\r\n                      variant=\"outlined\"\r\n                      error={Boolean(touched.lastName && errors.lastName)}\r\n                      helperText={touched.lastName && errors.lastName}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={5} sx={{ marginRight: \"20px\" }}>\r\n                    <CustomInputTextField\r\n                      attribute=\"Email Id\"\r\n                      margin=\"normal\"\r\n                      name=\"email\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      fullWidth\r\n                      value={values.email}\r\n                      variant=\"outlined\"\r\n                      error={Boolean(touched.email && errors.email)}\r\n                      helperText={touched.email && errors.email}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={5} sx={{ marginRight: \"20px\" }}>\r\n                    <CustomInputTextField\r\n                      attribute=\"Contact No\"\r\n                      margin=\"normal\"\r\n                      name=\"contact\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      fullWidth\r\n                      value={values.contact}\r\n                      variant=\"outlined\"\r\n                      error={Boolean(touched.contact && errors.contact)}\r\n                      helperText={touched.contact && errors.contact}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={5} sx={{ marginRight: \"20px\" }}>\r\n                    <CustomInputTextField\r\n                      attribute=\"Associate Code\"\r\n                      margin=\"normal\"\r\n                      name=\"associateCode\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      fullWidth\r\n                      value={values.associateCode}\r\n                      variant=\"outlined\"\r\n                      error={Boolean(\r\n                        touched.associateCode && errors.associateCode\r\n                      )}\r\n                      helperText={touched.associateCode && errors.associateCode}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={5} sx={{ marginRight: \"20px\" }}>\r\n                    <CustomInputTextField\r\n                      attribute=\"Password\"\r\n                      margin=\"normal\"\r\n                      name=\"password\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      fullWidth\r\n                      value={values.password}\r\n                      variant=\"outlined\"\r\n                      error={Boolean(touched.password && errors.password)}\r\n                      helperText={touched.password && errors.password}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    sm={5}\r\n                    sx={{ marginRight: \"20px\", marginTop: \"24px\" }}\r\n                  >\r\n                    <Grid container>\r\n                      <Grid item xs={10} sm={6}>\r\n                        <Typography variant=\"body1\">\r\n                          Upload Docs View :\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xs={2} sm={3}>\r\n                        <select\r\n                          id=\"uploadDocsView\"\r\n                          name=\"uploadDocsView\"\r\n                          value={values.uploadDocsView}\r\n                          onChange={handleChange}\r\n                          style={{ width: \"100%\" }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {/* Add an empty option */}\r\n                          <option value={true}>Yes</option>\r\n                          <option value={false}>No</option>\r\n                        </select>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    sm={5}\r\n                    sx={{ marginRight: \"20px\", marginTop: \"24px\" }}\r\n                  >\r\n                    <Grid container>\r\n                      <Grid item xs={10} sm={6}>\r\n                        <Typography variant=\"body1\">\r\n                          Manage Appointemnt :\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xs={2} sm={3}>\r\n                        <select\r\n                          id=\"manageAppointment\"\r\n                          name=\"manageAppointment\"\r\n                          value={values.manageAppointment}\r\n                          onChange={handleChange}\r\n                          style={{ width: \"100%\" }}\r\n                        >\r\n                          <option value=\"\">Select</option>\r\n                          {/* Add an empty option */}\r\n                          <option value={true}>Yes</option>\r\n                          <option value={false}>No</option>\r\n                        </select>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid\r\n                  container\r\n                  justifyContent=\"center\" // Center horizontally\r\n                  alignItems=\"center\" // Center vertically\r\n                >\r\n                  <Box\r\n                    sx={{\r\n                      textAlign: \"center\",\r\n                      paddingBottom: { xs: \"20px\" },\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      disabled={isLoadingSpin}\r\n                      sx={{\r\n                        marginRight: { xs: \"0px\", sm: \"130px\" },\r\n                      }}\r\n                    >\r\n                      Create Associate{\"  \"}\r\n                      {isLoadingSpin && (\r\n                        <CircularProgress\r\n                          size={15}\r\n                          color=\"primary\"\r\n                          sx={{ marginLeft: \"15px\" }}\r\n                        />\r\n                      )}\r\n                    </Button>\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddAssociatePage;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\n// Material UI\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Container,\r\n  Card,\r\n  CircularProgress,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\nimport config from \"../../../config\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nimport Api from \"../../../components/Api\";\r\nimport {\r\n  privateApiGET,\r\n  privateApiPOST,\r\n} from \"../../../components/PrivateRoute\";\r\nimport SearchClientsPage from \"./SearchClients\";\r\nimport AssociatesListPage from \"./AssociatesLIst\";\r\nimport AddAssociatePage from \"./AddAssociate\";\r\n\r\nexport const customTextStyles = makeStyles((theme) => ({\r\n  tableHeader: {\r\n    fontSize: \"16px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"23px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  tableData: {\r\n    fontSize: \"16px\",\r\n    fontWeight: \"700\",\r\n    lineHeight: \"22px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      // marginBottom: \"8px\",\r\n      display: \"none\",\r\n    },\r\n  },\r\n  headerText: {\r\n    fontSize: \"24px\",\r\n    fontWeight: \"600\",\r\n    marginTop: \"32px\",\r\n    marginBottom: \"16px\",\r\n    color: \"#2069DB\",\r\n  },\r\n  confirmButton: {\r\n    fontSize: \"14px\",\r\n    fontWeight: \"600\",\r\n    lineHeight: \"19px\",\r\n    color: \"#FFFFFF\",\r\n    padding: \"10px 40px 9px\",\r\n    marginBottom: \"4px\",\r\n  },\r\n  mobileViewTableCellValue: {\r\n    color: \"rgb(71, 71, 71)\",\r\n    fontSize: \"14px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"19px\",\r\n  },\r\n  mobileView: {\r\n    borderRadius: \"4px\",\r\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\r\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\r\n    cursor: \"pointer\",\r\n    border: \"none !important\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  mobileViewTableCellHeader: {\r\n    color: \"rgb(245, 166, 35)\",\r\n    fontSize: \"10px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"14px\",\r\n  },\r\n  tabHeader: {\r\n    fontSize: \"16px\",\r\n    lineHeight: \"24px\",\r\n    fontWeight: 600,\r\n    borderBottom: \"1px solid #DDDDDD\",\r\n    whiteSpace: \"nowrap\",\r\n    padding: \"8px 10px\",\r\n  },\r\n  tabButton: {\r\n    display: \"block\",\r\n    width: \"95%\",\r\n    paddingLeft: \"15px\",\r\n    textAlign: \"left\",\r\n    fontWeight: \"500\",\r\n    fontSize: \"16px\",\r\n    lineHeight: \"24px\",\r\n    margin: \"10px 5px\",\r\n  },\r\n}));\r\n\r\nconst AdminHomePage = () => {\r\n  const customStyles = customTextStyles();\r\n  let navigate = useNavigate();\r\n  const params = useParams();\r\n  const state = useSelector((state) => state.app);\r\n  const [data, setData] = useState({});\r\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\r\n  const [isLoadingSpin, setIsLoadingSpin] = useState(false);\r\n  const [isActiveTab, setIsActiveTab] =\r\n    parseInt(params.action) === 7\r\n      ? useState(\"Pay Now\")\r\n      : useState(\"Search Clients\");\r\n\r\n  const handleActiveTabChange = (tabName) => {\r\n    setIsActiveTab(tabName);\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <Box sx={{ margin: \"0 30px 0 20px\" }}>\r\n      {/* <Container maxWidth=\"lg\"> */}\r\n      <Grid container>\r\n        <Grid item xs={isMenuOpen ? 2 : 1}>\r\n          <Card\r\n            sx={{\r\n              minHeight: isMenuOpen ? \"320px\" : \"50px\",\r\n              borderRadius: \"2px\",\r\n              marginRight: \"10px\",\r\n            }}\r\n          >\r\n            <IconButton onClick={() => setIsMenuOpen(!isMenuOpen)}>\r\n              <MenuIcon />\r\n            </IconButton>\r\n\r\n            {isMenuOpen && (\r\n              <Box>\r\n                <Box\r\n                  sx={{\r\n                    border: \"1px solid #D5D5D5\",\r\n                    margin: \"10px 5px\",\r\n                  }}\r\n                >\r\n                  <Typography className={customStyles.tabHeader}>\r\n                    Manage Client Information\r\n                  </Typography>\r\n                  <Button\r\n                    onClick={() => handleActiveTabChange(\"Search Clients\")}\r\n                    variant={\r\n                      isActiveTab === \"Search Clients\" ? \"contained\" : \"text\"\r\n                    }\r\n                    className={customStyles.tabButton}\r\n                    sx={{\r\n                      color:\r\n                        isActiveTab === \"Search Clients\" ? \"#fff\" : \"#474747\",\r\n                    }}\r\n                  >\r\n                    Search Clients (New)\r\n                  </Button>\r\n                </Box>\r\n                <Box\r\n                  sx={{\r\n                    border: \"1px solid #D5D5D5\",\r\n                    margin: \"30px 5px 10px\",\r\n                  }}\r\n                >\r\n                  <Typography className={customStyles.tabHeader}>\r\n                    Manage Associate Information\r\n                  </Typography>\r\n                  <Button\r\n                    onClick={() => handleActiveTabChange(\"Associates List\")}\r\n                    variant={\r\n                      isActiveTab === \"Associates List\" ? \"contained\" : \"text\"\r\n                    }\r\n                    className={customStyles.tabButton}\r\n                    sx={{\r\n                      color:\r\n                        isActiveTab === \"Associates List\" ? \"#fff\" : \"#474747\",\r\n                    }}\r\n                  >\r\n                    Associates List\r\n                  </Button>\r\n                  <Button\r\n                    onClick={() => handleActiveTabChange(\"Add Associate\")}\r\n                    variant={\r\n                      isActiveTab === \"Add Associate\" ? \"contained\" : \"text\"\r\n                    }\r\n                    className={customStyles.tabButton}\r\n                    sx={{\r\n                      color:\r\n                        isActiveTab === \"Add Associate\" ? \"#fff\" : \"#474747\",\r\n                    }}\r\n                  >\r\n                    Add Associate\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n            )}\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={isMenuOpen ? 10 : 11}>\r\n          {isLoadingSpin ? (\r\n            <Box\r\n              display=\"flex\"\r\n              height=\"100%\"\r\n              width=\"100%\"\r\n              justifyContent=\"center\"\r\n              alignItems=\"center\"\r\n              sx={{\r\n                position: \"absolute\",\r\n                zIndex: \"10\",\r\n                left: 0,\r\n                top: \"30%\",\r\n              }}\r\n            >\r\n              <CircularProgress size={30} />\r\n            </Box>\r\n          ) : data ? (\r\n            <Box\r\n              sx={{\r\n                backgroundColor: \"rgba(255,255,255,1)\",\r\n                boxShadow: \"rgba(100, 100, 111, 0.2) 0px 7px 29px 0px\",\r\n                borderRadius: \"4px\",\r\n                padding: \"20px 10px\",\r\n                height: \"1000px\", // Adjust the height as needed\r\n                overflow: \"auto\", // Add overflow to enable scrolling\r\n                maxHeight: \"1000px\", // Add a maximum height to prevent content from overflowing\r\n              }}\r\n            >\r\n              <PerfectScrollbar>\r\n                {isActiveTab === \"Search Clients\" && <SearchClientsPage />}\r\n                {isActiveTab === \"Associates List\" && <AssociatesListPage />}\r\n                {isActiveTab === \"Add Associate\" && <AddAssociatePage />}\r\n              </PerfectScrollbar>\r\n            </Box>\r\n          ) : null}\r\n        </Grid>\r\n      </Grid>\r\n      {/* </Container> */}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AdminHomePage;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n// Material UI\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Link,\r\n  Avatar,\r\n  Typography,\r\n  Button,\r\n  Container,\r\n  Card,\r\n  CardContent,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableHead,\r\n  TableCell,\r\n  TextField,\r\n  Radio,\r\n  RadioGroup,\r\n  FormLabel,\r\n  FormControlLabel,\r\n  FormControl,\r\n} from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport config from \"../../../config\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport CustomAlert from \"../../../components/CustomAlert\";\r\n\r\nimport Api from \"../../../components/Api\";\r\nimport {\r\n  privateApiGET,\r\n  privateApiPOST,\r\n} from \"../../../components/PrivateRoute\";\r\n\r\nexport const customTextStyles = makeStyles((theme) => ({\r\n  tableHeader: {\r\n    fontSize: \"16px\",\r\n    fontWeight: \"700\",\r\n    lineHeight: \"22px\",\r\n    borderBottom: 0,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  tableData: {\r\n    fontSize: \"16px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"23px\",\r\n    borderBottom: 0,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      // marginBottom: \"8px\",\r\n      display: \"none\",\r\n    },\r\n  },\r\n  headerText: {\r\n    fontSize: \"21px\",\r\n    fontWeight: \"600\",\r\n    marginTop: \"32px\",\r\n    marginBottom: \"16px\",\r\n    color: \"#11a63d\",\r\n  },\r\n  confirmButton: {\r\n    fontSize: \"14px\",\r\n    fontWeight: \"600\",\r\n    lineHeight: \"19px\",\r\n    color: \"#FFFFFF\",\r\n    padding: \"10px 40px 9px\",\r\n    marginBottom: \"4px\",\r\n  },\r\n  mobileViewTableCellValue: {\r\n    color: \"rgb(71, 71, 71)\",\r\n    fontSize: \"14px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"19px\",\r\n  },\r\n  mobileView: {\r\n    borderRadius: \"4px\",\r\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\r\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\r\n    cursor: \"pointer\",\r\n    border: \"none !important\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  mobileViewTableCellHeader: {\r\n    color: \"rgb(245, 166, 35)\",\r\n    fontSize: \"10px\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"14px\",\r\n  },\r\n}));\r\n\r\nconst ClientHomePage = () => {\r\n  const customStyles = customTextStyles();\r\n  let navigate = useNavigate();\r\n  const state = useSelector((state) => state.issue);\r\n  const [myServices, setMyServices] = useState([]);\r\n  const [taxYearServices, setTaxYearServices] = useState([]);\r\n  const [isMyServicesLoading, setIsMyServicesLoading] = useState(false);\r\n  const [isTaxYearsLoading, setIsTaxYearsLoading] = useState(false);\r\n  const [currSelectedYear, setCurrSelectedYear] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const [showAlert, setShowAlert] = useState({\r\n    isAlert: false,\r\n    alertTitle: \"\",\r\n    alertText: \"\",\r\n    severity: \"\",\r\n  });\r\n\r\n  const handleNavigate = (value) => {\r\n    let path = value;\r\n    navigate(path);\r\n  };\r\n\r\n  const handleCurrYearTaxServiceChange = (event) => {\r\n    setCurrSelectedYear(event.target.value);\r\n  };\r\n\r\n  const handleAddTaxServiceChange = () => {\r\n    setIsMyServicesLoading(true);\r\n    let payload = { new: true, year: currSelectedYear };\r\n    privateApiPOST(Api.myServices, payload)\r\n      .then((response) => {\r\n        const { status, data } = response;\r\n        if (status === 200) {\r\n          console.log(\"data\", data);\r\n          setMyServices(data?.data);\r\n          setIsMyServicesLoading(false);\r\n          setCurrSelectedYear(\"\");\r\n          setShowAlert({\r\n            isAlert: true,\r\n            severity: \"success\",\r\n            alertText: data?.[\"message\"],\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n        setIsMyServicesLoading(false);\r\n        const { data } = error.response;\r\n        setShowAlert({\r\n          isAlert: true,\r\n          severity: \"error\",\r\n          alertText: data?.[\"message\"],\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleFetchTaxYearServices = () => {\r\n    setIsTaxYearsLoading(true);\r\n    privateApiGET(Api.taxYears)\r\n      .then((response) => {\r\n        const { status, data } = response;\r\n        if (status === 200) {\r\n          console.log(\"data\", data);\r\n          setTaxYearServices(data?.data);\r\n          setIsTaxYearsLoading(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n        setIsTaxYearsLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleFetchMyServices = () => {\r\n    setIsMyServicesLoading(true);\r\n    privateApiGET(Api.myServices)\r\n      .then((response) => {\r\n        const { status, data } = response;\r\n        if (status === 200) {\r\n          console.log(\"data\", data);\r\n          setMyServices(data?.data);\r\n          setIsMyServicesLoading(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\", error);\r\n        setIsMyServicesLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleFetchTaxYearServices();\r\n    handleFetchMyServices();\r\n  }, []);\r\n\r\n  return (\r\n    <Box>\r\n      <Container maxWidth=\"lg\">\r\n        {showAlert.isAlert && (\r\n          <CustomAlert\r\n            open={showAlert.isAlert}\r\n            severity={showAlert.severity}\r\n            alertTitle={showAlert.alertTitle}\r\n            alertText={showAlert.alertText}\r\n            onClose={() =>\r\n              setShowAlert({\r\n                isAlert: false,\r\n                alertTitle: \"\",\r\n                alertText: \"\",\r\n                severity: \"\",\r\n              })\r\n            }\r\n          />\r\n        )}\r\n        <Box\r\n          sx={{\r\n            border: \"1px solid #D5E1E8\",\r\n            minHeight: \"700px\",\r\n            padding: \"0 10px\",\r\n            marginBottom: \"60px\",\r\n          }}\r\n        >\r\n          <Typography\r\n            sx={{\r\n              color: \"#0060A1\",\r\n              padding: \"15px 20px\",\r\n              fontSize: \"20px\",\r\n              fontWeight: 600,\r\n              lineHeight: \"30px\",\r\n            }}\r\n          >\r\n            Tax Filing Services\r\n          </Typography>\r\n          <Typography\r\n            sx={{\r\n              backgroundColor: \"#C7DFF0\",\r\n              padding: \"15px 20px\",\r\n              fontSize: \"16px\",\r\n              fontWeight: \"24px\",\r\n            }}\r\n          >\r\n            * Click on \"Start Process\" against selected \"Tax Filing\" Service\r\n          </Typography>\r\n          <Typography className={customStyles.headerText} sx={{}}>\r\n            My Selected Services\r\n          </Typography>\r\n          <TableContainer sx={{ marginTop: \"32px\", padding: \"0 20px\" }}>\r\n            <Table\r\n              sx={{\r\n                borderCollapse: \"collapse\",\r\n              }}\r\n              aria-label=\"Place Order Series Table\"\r\n            >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className={customStyles.tableHeader}>ID</TableCell>\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    SERVICE TYPE\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    YEAR\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    STATUS\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    ACTIONS\r\n                  </TableCell>\r\n                  <TableCell className={customStyles.tableHeader}>\r\n                    PAY NOW\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {myServices.length > 0 &&\r\n                  myServices.map((row, index) => (\r\n                    <TableRow key={index}>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        {row.id}\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        {row.service_type}\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        {row.year}\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        {row.status}\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        <Link\r\n                          to={`../tax-filing/${row.year}/${row.id}/0`}\r\n                          onClick={() =>\r\n                            handleNavigate(\r\n                              `../tax-filing/${row.year}/${row.id}/0`\r\n                            )\r\n                          }\r\n                          sx={{ cursor: \"pointer\" }}\r\n                        >\r\n                          Start Process\r\n                        </Link>\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.tableData}>\r\n                        <Link\r\n                          to={`../tax-filing/${row.year}/${row.id}/7`}\r\n                          onClick={() =>\r\n                            handleNavigate(\r\n                              `../tax-filing/${row.year}/${row.id}/7`\r\n                            )\r\n                          }\r\n                          sx={{ cursor: \"pointer\" }}\r\n                        >\r\n                          Pay Now\r\n                        </Link>\r\n                      </TableCell>\r\n                      <TableCell className={customStyles.mobileView}>\r\n                        <Box>\r\n                          <Box\r\n                            sx={{\r\n                              display: \"flex\",\r\n                              flexWrap: \"wrap\",\r\n                              justifyContent: \"space-between\",\r\n                              marginTop: \"16px\",\r\n                            }}\r\n                          >\r\n                            <Box>\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellHeader\r\n                                }\r\n                              >\r\n                                id\r\n                              </Typography>\r\n\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellValue\r\n                                }\r\n                              >\r\n                                {row.id}\r\n                              </Typography>\r\n                            </Box>\r\n                            <Box>\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellHeader\r\n                                }\r\n                              >\r\n                                Year\r\n                              </Typography>\r\n\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellValue\r\n                                }\r\n                              >\r\n                                {row.year}\r\n                              </Typography>\r\n                            </Box>\r\n                            <Box>\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellHeader\r\n                                }\r\n                              >\r\n                                Service Type\r\n                              </Typography>\r\n\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellValue\r\n                                }\r\n                              >\r\n                                {row.service_type}\r\n                              </Typography>\r\n                            </Box>\r\n                          </Box>\r\n                          <Box\r\n                            sx={{\r\n                              display: \"flex\",\r\n                              flexWrap: \"wrap\",\r\n                              justifyContent: \"space-between\",\r\n                              marginTop: \"16px\",\r\n                            }}\r\n                          >\r\n                            <Box>\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellHeader\r\n                                }\r\n                              >\r\n                                Status\r\n                              </Typography>\r\n\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellValue\r\n                                }\r\n                              >\r\n                                {row.status}\r\n                              </Typography>\r\n                            </Box>\r\n                            <Box>\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellHeader\r\n                                }\r\n                              >\r\n                                Actions\r\n                              </Typography>\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellValue\r\n                                }\r\n                              >\r\n                                <Link\r\n                                  to={`../tax-filing/${row.year}/${row.id}/0`}\r\n                                  onClick={() =>\r\n                                    handleNavigate(\r\n                                      `../tax-filing/${row.year}/${row.id}/0`\r\n                                    )\r\n                                  }\r\n                                  sx={{ cursor: \"pointer\" }}\r\n                                >\r\n                                  Start Process\r\n                                </Link>\r\n                              </Typography>\r\n                            </Box>\r\n                            <Box>\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellHeader\r\n                                }\r\n                              >\r\n                                Pay Now\r\n                              </Typography>\r\n                              <Typography\r\n                                className={\r\n                                  customStyles.mobileViewTableCellValue\r\n                                }\r\n                              >\r\n                                <Link\r\n                                  to={`../tax-filing/${row.year}/${row.id}/7`}\r\n                                  onClick={() =>\r\n                                    handleNavigate(\r\n                                      `../tax-filing/${row.year}/${row.id}/7`\r\n                                    )\r\n                                  }\r\n                                  sx={{\r\n                                    cursor: \"pointer\",\r\n                                  }}\r\n                                >\r\n                                  Pay Now\r\n                                </Link>\r\n                              </Typography>\r\n                            </Box>\r\n                          </Box>\r\n                        </Box>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <Box\r\n            sx={{\r\n              marginTop: \"25px\",\r\n            }}\r\n          >\r\n            <FormControl sx={{ width: \"100%\" }}>\r\n              <FormLabel\r\n                id=\"demo-radio-buttons-group-label\"\r\n                className={customStyles.headerText}\r\n              >\r\n                Select Tax Service\r\n              </FormLabel>\r\n              <RadioGroup\r\n                aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                name=\"radio-buttons-group\"\r\n                value={currSelectedYear}\r\n                onChange={handleCurrYearTaxServiceChange}\r\n                color=\"secondary\"\r\n              >\r\n                <Grid container>\r\n                  {taxYearServices.length > 0 &&\r\n                    taxYearServices.map((each, id) => (\r\n                      <Grid\r\n                        item\r\n                        xs={12}\r\n                        sm={6}\r\n                        key={id}\r\n                        sx={{ padding: \"10px 50px\" }}\r\n                      >\r\n                        <FormControlLabel\r\n                          value={each.name}\r\n                          control={<Radio />}\r\n                          label={\r\n                            <div\r\n                              style={{\r\n                                whiteSpace: \"nowrap\",\r\n                                overflow: \"hidden\",\r\n                                textOverflow: \"ellipsis\",\r\n                                width: \"100%\",\r\n                              }}\r\n                            >\r\n                              {`${each.name} - Tax Filing`}\r\n                            </div>\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                    ))}\r\n                </Grid>\r\n              </RadioGroup>\r\n            </FormControl>\r\n            <Button\r\n              onClick={() => currSelectedYear && handleAddTaxServiceChange()}\r\n              variant=\"contained\"\r\n              className={customStyles.confirmButton}\r\n              color=\"secondary\"\r\n              sx={{\r\n                opacity:\r\n                  // isLoadingSpin ||\r\n                  !currSelectedYear ? 0.5 : 1,\r\n                marginLeft: \"12px\",\r\n                marginTop: \"10px\",\r\n                display: \"block\",\r\n              }}\r\n            >\r\n              Add Service{\"  \"}\r\n              {/* {isLoadingSpin && (\r\n                <CircularProgress\r\n                  size={15}\r\n                  color=\"primary\"\r\n                  sx={{ marginLeft: \"15px\" }}\r\n                />\r\n              )} */}\r\n            </Button>\r\n          </Box>\r\n          <Typography variant=\"h4\" sx={{ margin: \"80px 0 20px\" }}>\r\n            You need to logout & login back by selecting Current Year Option\r\n            from Drop down for 2023 Tax Year{\" \"}\r\n          </Typography>\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ClientHomePage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Page from \"../../components/Page\";\r\nimport { Grid, Container, Box, CircularProgress } from \"@mui/material\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport AdminHomePage from \"./Admin\";\r\nimport ClientHomePage from \"./Client\";\r\n\r\nconst HomePage = () => {\r\n  const state = useSelector((state) => state.app);\r\n\r\n  return (\r\n    <Page title={\"Home\"}>\r\n      {state.role === \"ADMIN\" ? (\r\n        <AdminHomePage />\r\n      ) : state.role === \"CLIENT\" ? (\r\n        <ClientHomePage />\r\n      ) : null}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport { Box, TextField, Grid, Typography } from \"@mui/material\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst NO_WRAP_ATTRIBUTES = [\r\n  \"Middle Initial\",\r\n  \"Email Address\",\r\n  \"Password\",\r\n  \"Email ID (User ID)\",\r\n  \"Confirm Password\",\r\n  \"Referral ID (Optional)\",\r\n  \"Preferrable Time\",\r\n  \"Time Zone\",\r\n];\r\n\r\nconst CustomInputTextField = ({\r\n  attribute,\r\n  is_required,\r\n  attributeTextAlign,\r\n  attributeMarginTop,\r\n  ...others\r\n}) => {\r\n  return (\r\n    <Grid\r\n      item\r\n      xs={12}\r\n      sx={{\r\n        maxHeight: \"60px\",\r\n      }}\r\n    >\r\n      <Grid container>\r\n        <Grid\r\n          item\r\n          xs={4}\r\n          sx={{ marginTop: attributeMarginTop ? attributeMarginTop : \"24px\" }}\r\n        >\r\n          {/* <Typography\r\n            sx={{\r\n              margin: \"20px 10px\",\r\n              fontSize: \"16px\",\r\n              lineHeight: \"24px\",\r\n              fontWeight: 400,\r\n            }}\r\n          >\r\n            {is_required ? (\r\n              <>\r\n                {attribute}\r\n                <span\r\n                  style={{\r\n                    color: \"red\", // Set color to red\r\n                    fontSize: \"16px\",\r\n                    marginLeft: \"3px\",\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  *\r\n                </span>\r\n              </>\r\n            ) : (\r\n              attribute\r\n            )}\r\n          </Typography> */}\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              marginRight: { xs: 0, sm: attributeTextAlign ? \"5px\" : 0 },\r\n              justifyContent: {\r\n                xs: \"flex-start\",\r\n                sm: attributeTextAlign ? \"flex-end\" : \"flex-start\",\r\n              },\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"body1\"\r\n              sx={{\r\n                whiteSpace: NO_WRAP_ATTRIBUTES.includes(attribute)\r\n                  ? \"nowrap\"\r\n                  : \"pre-wrap\",\r\n              }}\r\n            >\r\n              {attribute}\r\n            </Typography>\r\n            {is_required && (\r\n              <Typography\r\n                sx={{\r\n                  color: \"red\",\r\n                  fontSize: \"0.875rem\",\r\n                  marginLeft: \"3px\",\r\n                }}\r\n              >\r\n                *\r\n              </Typography>\r\n            )}\r\n            &nbsp;:\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={attribute === \"Income Amount\" ? 4 : 8}>\r\n          <TextField\r\n            {...others}\r\n            sx={{\r\n              \"& .MuiOutlinedInput-root\": {\r\n                \"& fieldset\": {\r\n                  borderRadius: \"2px\",\r\n                },\r\n              },\r\n              \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n                border: \"0.1px solid #bdbdbd\",\r\n              },\r\n              \"& .MuiOutlinedInput-input\": {\r\n                padding: \"10px\",\r\n                backgroundColor: \"rgba(255,255,255,1)\",\r\n              },\r\n              width: \"90%\",\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nCustomInputTextField.prototype = {\r\n  is_required: PropTypes.bool,\r\n  attribute: PropTypes.string, //['success','warning', 'error']\r\n  attributeTextAlign: PropTypes.string, //['success','warning', 'error']\r\n  attributeMarginTop: PropTypes.string,\r\n};\r\n\r\nexport default CustomInputTextField;\r\n","export const statesNames = [\r\n  { value: \"SELECT\", label: \"SELECT\" },\r\n  { value: \"Alabama\", label: \"Alabama\" },\r\n  { value: \"Alaska\", label: \"Alaska\" },\r\n  { value: \"Arizona\", label: \"Arizona\" },\r\n  { value: \"Arkansas\", label: \"Arkansas\" },\r\n  { value: \"California\", label: \"California\" },\r\n  { value: \"Colorado\", label: \"Colorado\" },\r\n  { value: \"Connecticut\", label: \"Connecticut\" },\r\n  { value: \"Delaware\", label: \"Delaware\" },\r\n  { value: \"Florida\", label: \"Florida\" },\r\n  { value: \"Georgia\", label: \"Georgia\" },\r\n  { value: \"Hawaii\", label: \"Hawaii\" },\r\n  { value: \"Idaho\", label: \"Idaho\" },\r\n  { value: \"Illinois\", label: \"Illinois\" },\r\n  { value: \"Indiana\", label: \"Indiana\" },\r\n  { value: \"Iowa\", label: \"Iowa\" },\r\n  { value: \"Kansas\", label: \"Kansas\" },\r\n  { value: \"Kentucky\", label: \"Kentucky\" },\r\n  { value: \"Louisiana\", label: \"Louisiana\" },\r\n  { value: \"Maine\", label: \"Maine\" },\r\n  { value: \"Maryland\", label: \"Maryland\" },\r\n  { value: \"Massachusetts\", label: \"Massachusetts\" },\r\n  { value: \"Michigan\", label: \"Michigan\" },\r\n  { value: \"Minnesota\", label: \"Minnesota\" },\r\n  { value: \"Mississippi\", label: \"Mississippi\" },\r\n  { value: \"Missouri\", label: \"Missouri\" },\r\n  { value: \"Montana\", label: \"Montana\" },\r\n  { value: \"Nebraska\", label: \"Nebraska\" },\r\n  { value: \"Nevada\", label: \"Nevada\" },\r\n  { value: \"New Hampshire\", label: \"New Hampshire\" },\r\n  { value: \"New Jersey\", label: \"New Jersey\" },\r\n  { value: \"New Mexico\", label: \"New Mexico\" },\r\n  { value: \"New York\", label: \"New York\" },\r\n  { value: \"North Carolina\", label: \"North Carolina\" },\r\n  { value: \"North Dakota\", label: \"North Dakota\" },\r\n  { value: \"Ohio\", label: \"Ohio\" },\r\n  { value: \"Oklahoma\", label: \"Oklahoma\" },\r\n  { value: \"Oregon\", label: \"Oregon\" },\r\n  { value: \"Pennsylvania\", label: \"Pennsylvania\" },\r\n  { value: \"Rhode Island\", label: \"Rhode Island\" },\r\n  { value: \"South Carolina\", label: \"South Carolina\" },\r\n  { value: \"South Dakota\", label: \"South Dakota\" },\r\n  { value: \"Tennessee\", label: \"Tennessee\" },\r\n  { value: \"Texas\", label: \"Texas\" },\r\n  { value: \"Utah\", label: \"Utah\" },\r\n  { value: \"Vermont\", label: \"Vermont\" },\r\n  { value: \"Virginia\", label: \"Virginia\" },\r\n  { value: \"Washington\", label: \"Washington\" },\r\n  { value: \"West Virginia\", label: \"West Virginia\" },\r\n  { value: \"Wisconsin\", label: \"Wisconsin\" },\r\n  { value: \"Wyoming\", label: \"Wyoming\" },\r\n  { value: \"Foreign\", label: \"Foreign\" },\r\n  { value: \"District of Columbia\", label: \"District of Columbia\" },\r\n];\r\n\r\nexport const countryCode = [\r\n  { value: \"Select\", label: \"Select\" },\r\n  { value: \"+91 (India)\", label: \"+91 (India)\" },\r\n  { value: \"+1 (USA / Canada)\", label: \"+1 (USA / Canada)\" },\r\n  { value: \"+44 (U.K)\", label: \"+44 (U.K)\" },\r\n  { value: \"+49 (Germany)\", label: \"+49 (Germany)\" },\r\n  { value: \"+60 (Malaysia)\", label: \"+60 (Malaysia)\" },\r\n  { value: \"+61 (Australia)\", label: \"+61 (Australia)\" },\r\n  { value: \"+65 (Singapore)\", label: \"+65 (Singapore)\" },\r\n  { value: \"+81 (Japan)\", label: \"+81 (Japan)\" },\r\n  { value: \"+86 (China)\", label: \"+86 (China)\" },\r\n  { value: \"Others\", label: \"Others\" },\r\n];\r\nexport const refundTypes = [\r\n  \"FEDERAL REFUND\",\r\n  \"FEDERAL AMENDMENT\",\r\n  \"STATE AMENDMENT\",\r\n  \"FBAR TAX PAYER\",\r\n  \"FBAR SPOUSE\",\r\n  \"FBAR COMBINED\",\r\n  \"CITY FILING 1\",\r\n  \"CITY FILING 2\",\r\n  \"CITY FILING 3\",\r\n  \"CITY FILING 4\",\r\n  \"EXTENSION FILING\",\r\n  \"OTHER\",\r\n  \"ADVANCE PAYMENT\",\r\n  \"REFERRAL DISCOUNT\",\r\n];\r\n\r\nexport const dependantRelationships = [\r\n  \"FATHER\",\r\n  \"MOTHER\",\r\n  \"DAUGHTER\",\r\n  \"SON\",\r\n  \"FATHER IN LAW\",\r\n  \"MOTHER IN LAW\",\r\n  \"OTHER\",\r\n];\r\n\r\nexport const residentialStatus = [\r\n  \"H4\",\r\n  \"US Citizen\",\r\n  \"L2\",\r\n  \"Green Card\",\r\n  \"Other\",\r\n];\r\n","import React, { forwardRef } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Page = forwardRef(({ children, title = \"\", ...rest }, ref) => {\r\n  return (\r\n    <div ref={ref} {...rest}>\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      {children}\r\n    </div>\r\n  );\r\n});\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Page;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { Snackbar } from \"@mui/material\";\r\nimport { Alert, AlertTitle } from \"@mui/material\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(10),\r\n    boxShadow: \"-2px 5px 15px -2px rgba(0,0,0,0.71)\",\r\n  },\r\n  alertContainer: {\r\n    minWidth: 350,\r\n  },\r\n}));\r\n\r\nconst CustomAlert = ({ open, severity, alertTitle, alertText, onClose }) => {\r\n  let vertical = \"top\",\r\n    horizontal = \"right\";\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{ vertical, horizontal }}\r\n      open={open}\r\n      autoHideDuration={6000}\r\n      onClose={onClose}\r\n      className={classes.root}\r\n    >\r\n      <Alert\r\n        severity={severity}\r\n        onClose={onClose}\r\n        className={classes.alertContainer}\r\n      >\r\n        {alertTitle ? <AlertTitle>{alertTitle}</AlertTitle> : null}\r\n        {alertText}!\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nCustomAlert.prototype = {\r\n  open: PropTypes.bool,\r\n  severity: PropTypes.string, //['success','warning', 'error']\r\n  alertText: PropTypes.string,\r\n  alertTitle: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n};\r\n\r\nexport default CustomAlert;\r\n"],"sourceRoot":""}