{"version":3,"sources":["webpack:///./src/views/Auth/LoginView.js","webpack:///./src/views/Auth/ForgotPassword.js","webpack:///./src/views/Auth/index.js","webpack:///./src/components/CustomInputField.js","webpack:///./src/views/Auth/ResetPasswordView.js","webpack:///./src/components/Page.js","webpack:///./src/components/CustomAlert.js"],"names":["useStyles","makeStyles","theme","_rightSide","submitProgress","position","top","left","marginTop","marginLeft","mainBlock","_defineProperty","minWidth","margin","padding","breakpoints","down","avatarLogo","width","height","title","fontFamily","fontWeight","fontSize","textAlign","lineHeight","color","marginBottom","rightSide","backgroundColor","display","flexDirection","justifyContent","alignItems","paddingRight","up","paddingLeft","LoginView","classes","navigate","useNavigate","dispatch","useDispatch","_useState2","_slicedToArray","useState","isAlert","alertTitle","alertText","severity","showAlert","setShowAlert","React","createElement","Fragment","Box","className","CustomAlert","open","onClose","Formik","initialValues","email","password","validationSchema","Yup","shape","max","required","onSubmit","values","_ref","setSubmitting","resetForm","url","Api","login","config","headers","Cookies","get","axios","post","then","res","_res$data","status","window","sessionStorage","setItem","data","token","setTaxYear","taxYear","error","response","_ref2","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","autoComplete","mb","Typography","variant","CustomInputTextField","attribute","is_required","Boolean","fullWidth","helperText","name","onBlur","onChange","type","value","is_bold","my","Button","disabled","size","ForgotPasswordView","_useState4","setIsForgotPassword","_useState6","forgotPasswordState","setForgetPasswordState","_useState8","isResetPasswordSubmitting","setIsRestPasswordSubmitting","autoFocus","id","e","target","onClick","forgotPassword","console","log","CircularProgress","_logoAvatar","box","border","minHeight","logoAvatar","marginRight","AppBar","customStyles","sx","xs","sm","Avatar","src","Authentication","Page","backgroundImage","paddingTop","backgroundRepeat","backgroundSize","Container","maxWidth","Grid","container","spacing","item","NO_WRAP_ATTRIBUTES","attributeTextAlign","attributeMarginTop","others","_objectWithoutProperties","_excluded","maxHeight","_objectSpread","whiteSpace","includes","TextField","_extends","borderRadius","defaultProps","prototype","PropTypes","bool","string","root","palette","background","dark","paddingBottom","logo","ResetPasswordView","match","params","useParams","passwordConfirmation","matches","when","is","val","length","oneOf","resetPassword","uidb64","_ref3","Link","component","RouterLink","to","forwardRef","ref","children","_ref$title","rest","Helmet","propTypes","node","isRequired","boxShadow","alertContainer","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","AlertTitle","func"],"mappings":"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","file":"ResetPasswordView.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\nimport { Box, Button, Typography } from \"@mui/material\";\r\n\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CustomAlert from \"../../components/CustomAlert\";\r\n\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport Api from \"../../components/Api\";\r\nimport Page from \"../../components/Page\";\r\nimport { setTaxYear } from \"../../redux/app/appSlice\";\r\n\r\nimport CustomInputTextField from \"../../components/CustomInputField\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  // root: {\r\n  //   backgroundColor: theme.palette.background.dark,\r\n  //   height: \"100%\",\r\n  //   paddingBottom: \"0px\",\r\n  //   paddingTop: \"0px\",\r\n  //   position: \"relative\",\r\n  // },\r\n\r\n  // logo: {\r\n  //   width: 150,\r\n  //   padding: 10,\r\n  //   [theme.breakpoints.down(\"sm\")]: {\r\n  //     width: 110,\r\n  //   },\r\n  // },\r\n  submitProgress: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n  mainBlock: {\r\n    // width: \"50vw\",\r\n    // height: \"100vh\",\r\n    // display: \"flex\",\r\n    // flexDirection: \"row\",\r\n    minWidth: \"400px\",\r\n    margin: \"0\",\r\n    padding: \"0\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      // flexDirection: \"column\",\r\n      minWidth: \"300px\",\r\n    },\r\n  },\r\n  // leftSide: {\r\n  //   width: \"70%\",\r\n  //   height: \"100vh\",\r\n  //   position: \"relative\",\r\n  //   backgroundColor: \"#2069D8\",\r\n  //   [theme.breakpoints.down(\"sm\")]: {\r\n  //     width: \"100%\",\r\n  //     height: \"40vh\",\r\n  //     margin: \"0\",\r\n  //   },\r\n  // },\r\n\r\n  avatarLogo: {\r\n    width: 200,\r\n    height: 72,\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"33%\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      left: \"20%\",\r\n      top: \"30%\",\r\n    },\r\n  },\r\n  title: {\r\n    fontFamily: \"Montserrat\",\r\n    fontWeight: \"700\",\r\n    fontSize: \"72px\",\r\n    textAlign: \"center\",\r\n    lineHeight: \"87.7px\",\r\n    color: \"#FFFFFF\",\r\n    margin: \"auto\",\r\n    marginTop: \"50vh\",\r\n    marginBottom: \"auto\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginTop: \"10vh\",\r\n    },\r\n  },\r\n\r\n  rightSide: {\r\n    width: \"100%\",\r\n    height: \"100vh\",\r\n    backgroundColor: \"#F5F5F5\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\", // Center vertically\r\n    alignItems: \"center\", // Center horizontally\r\n    margin: \"0\",\r\n    paddingRight: \"200px\",\r\n    padding: \"0\", // Reset padding\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      paddingLeft: \"244px\", // Adjust padding for medium and larger screens\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\", // Set width to 100%\r\n      paddingLeft: \"0\", // Reset padding\r\n      justifyContent: \"center\", // Center vertically\r\n      alignItems: \"center\", // Center horizontally\r\n      paddingRight: \"0px\",\r\n      marginTop: \"-100px\",\r\n    },\r\n  },\r\n  \"& .css-t7eypm-MuiTypography-root\": {\r\n    fontWeight: \"700\",\r\n  },\r\n}));\r\n\r\nconst LoginView = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [showAlert, setShowAlert] = useState({\r\n    isAlert: false,\r\n    alertTitle: \"\",\r\n    alertText: \"\",\r\n    severity: \"\",\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Box className={classes.mainBlock}>\r\n        {showAlert.isAlert ? (\r\n          <CustomAlert\r\n            open={showAlert.isAlert}\r\n            severity={showAlert.severity}\r\n            alertTitle={showAlert.alertTitle}\r\n            alertText={showAlert.alertText}\r\n            onClose={() =>\r\n              setShowAlert({\r\n                isAlert: false,\r\n                alertTitle: \"\",\r\n                alertText: \"\",\r\n                severity: \"\",\r\n              })\r\n            }\r\n          />\r\n        ) : null}\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          height=\"100%\"\r\n          justifyContent=\"center\"\r\n        >\r\n          {/* <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n              marginBottom={2}\r\n            >\r\n              \r\n            </Box> */}\r\n          <Formik\r\n            initialValues={{\r\n              email: \"\",\r\n              password: \"\",\r\n              // taxYear: \"\",\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              email: Yup.string()\r\n                .email(\"Must be a valid email\")\r\n                .max(255)\r\n                .required(\"Email is required\"),\r\n              password: Yup.string().max(255).required(\"Password is required\"),\r\n              // taxYear: Yup.string()\r\n              //   .max(255)\r\n              //   .required(\"Tax Year is required\"),\r\n            })}\r\n            onSubmit={(values, { setSubmitting, resetForm }) => {\r\n              const url = Api.login;\r\n\r\n              const config = {\r\n                headers: {\r\n                  \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\r\n                },\r\n              };\r\n\r\n              axios\r\n                .post(url, values, config)\r\n                .then((res) => {\r\n                  if (res.status === 200) {\r\n                    window.sessionStorage.setItem(\r\n                      \"token\",\r\n                      res.data?.data?.token\r\n                    );\r\n                    setSubmitting(false);\r\n                    dispatch(setTaxYear(values.taxYear));\r\n                    navigate(\"/\");\r\n                  }\r\n                })\r\n                .catch((error) => {\r\n                  if (error.response.status === 400) {\r\n                    setShowAlert({\r\n                      isAlert: true,\r\n                      alertText: \"Invalid credentials\",\r\n                      severity: \"error\",\r\n                      alertTitle: \"Error\",\r\n                    });\r\n                    setSubmitting(false);\r\n                  } else {\r\n                    setShowAlert({\r\n                      isAlert: true,\r\n                      alertText: \"Something went wrong\",\r\n                      severity: \"error\",\r\n                      alertTitle: \"Error\",\r\n                    });\r\n                    resetForm();\r\n                    setSubmitting(false);\r\n                  }\r\n                });\r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values,\r\n            }) => (\r\n              <form autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                <Box mb={3}>\r\n                  <Typography color=\"textPrimary\" variant=\"h4\">\r\n                    SIGN IN TO YOUR ACCOUNT\r\n                  </Typography>\r\n                </Box>\r\n\r\n                <CustomInputTextField\r\n                  attribute=\"Email Address\"\r\n                  is_required={true}\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  fullWidth\r\n                  helperText={touched.email && errors.email}\r\n                  margin=\"normal\"\r\n                  name=\"email\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  variant=\"outlined\"\r\n                  is_bold={true}\r\n                />\r\n                <CustomInputTextField\r\n                  attribute=\"Password\"\r\n                  is_required={true}\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                  is_bold={true}\r\n                />\r\n                {/* <TextField\r\n                        select\r\n                        error={Boolean(touched.taxYear && errors.taxYear)}\r\n                        helperText={touched.taxYear && errors.taxYear}\r\n                        fullWidth\r\n                        label=\"Tax Year\"\r\n                        margin=\"normal\"\r\n                        name=\"taxYear\" // Change \"taxyear\" to \"taxYear\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.taxYear}\r\n                        variant=\"outlined\"\r\n                      >\r\n                        <MenuItem value=\"currentYear\">Current Year</MenuItem>\r\n                        <MenuItem value=\"AllYears\">All Years</MenuItem>\r\n                      </TextField> */}\r\n                <Box my={2}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Sign in now\r\n                  </Button>\r\n                </Box>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginView;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\nimport { Box, Button, Typography, CircularProgress } from \"@mui/material\";\r\n\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CustomAlert from \"../../components/CustomAlert\";\r\n\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport Api from \"../../components/Api\";\r\nimport Page from \"../../components/Page\";\r\nimport { setTaxYear } from \"../../redux/app/appSlice\";\r\n\r\nimport CustomInputTextField from \"../../components/CustomInputField\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  submitProgress: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n  mainBlock: {\r\n    // width: \"50vw\",\r\n    // height: \"100vh\",\r\n    // display: \"flex\",\r\n    // flexDirection: \"row\",\r\n    minWidth: \"400px\",\r\n    margin: \"0\",\r\n    padding: \"0\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      //   flexDirection: \"column\",\r\n      minWidth: \"300px\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst ForgotPasswordView = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [showAlert, setShowAlert] = useState({\r\n    isAlert: false,\r\n    alertTitle: \"\",\r\n    alertText: \"\",\r\n    severity: \"\",\r\n  });\r\n\r\n  const [isForgotPassword, setIsForgotPassword] = useState(false);\r\n  const [forgotPasswordState, setForgetPasswordState] = useState({ email: \"\" });\r\n  const [isResetPasswordSubmitting, setIsRestPasswordSubmitting] =\r\n    useState(false);\r\n\r\n  const handleForgotPassword = () => {\r\n    const url = Api.forgotPassword;\r\n    setIsRestPasswordSubmitting(true);\r\n    const config = {\r\n      headers: {\r\n        \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(url, forgotPasswordState, config)\r\n      .then((res) => {\r\n        setShowAlert({\r\n          isAlert: true,\r\n          alertText: res.data[\"message\"],\r\n          severity: \"success\",\r\n        });\r\n        setIsForgotPassword(false);\r\n        setIsRestPasswordSubmitting(false);\r\n        setForgetPasswordState({ email: \"\" });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        setShowAlert({\r\n          isAlert: true,\r\n          alertText: error.response.data[\"message\"],\r\n          severity: \"error\",\r\n          alertTitle: \"Error\",\r\n        });\r\n        setIsForgotPassword(false);\r\n        setIsRestPasswordSubmitting(false);\r\n        setForgetPasswordState({ email: \"\" });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.mainBlock}>\r\n      {showAlert.isAlert ? (\r\n        <CustomAlert\r\n          open={showAlert.isAlert}\r\n          severity={showAlert.severity}\r\n          alertTitle={showAlert.alertTitle}\r\n          alertText={showAlert.alertText}\r\n          onClose={() =>\r\n            setShowAlert({\r\n              isAlert: false,\r\n              alertTitle: \"\",\r\n              alertText: \"\",\r\n              severity: \"\",\r\n            })\r\n          }\r\n        />\r\n      ) : null}\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        {/* <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n              marginBottom={2}\r\n            >\r\n              \r\n            </Box> */}\r\n\r\n        <Box mb={3}>\r\n          <Typography color=\"textPrimary\" variant=\"h4\">\r\n            FORGOT PASSWORD?\r\n          </Typography>\r\n        </Box>\r\n\r\n        <CustomInputTextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"name\"\r\n          attribute=\"Email ID (User ID)\"\r\n          is_required={true}\r\n          type=\"email\"\r\n          fullWidth\r\n          autoComplete=\"off\"\r\n          value={forgotPasswordState.email}\r\n          onChange={(e) => setForgetPasswordState({ email: e.target.value })}\r\n          is_bold={true}\r\n        />\r\n\r\n        <Box my={2}>\r\n          <Button\r\n            onClick={handleForgotPassword}\r\n            color=\"primary\"\r\n            disabled={isResetPasswordSubmitting}\r\n            fullWidth\r\n            size=\"large\"\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n          >\r\n            Reset Password\r\n            {isResetPasswordSubmitting && (\r\n              <CircularProgress size={24} className={classes.submitProgress} />\r\n            )}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ForgotPasswordView;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Avatar, Typography, Box, Grid, Container } from \"@mui/material\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport PaidIcon from \"@mui/icons-material/Paid\";\r\nimport ExitToAppIcon from \"@mui/icons-material/ExitToApp\";\r\n\r\n// Your remaining components and code here\r\nimport Page from \"../../components/Page\";\r\nimport LoginView from \"./LoginView\";\r\nimport ForgotPasswordView from \"./ForgotPassword\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  box: {\r\n    border: \"1px solid #000000\",\r\n    padding: \"20px\",\r\n    marginBottom: \"20px\",\r\n    backgroundColor: \"#f7f7f7\",\r\n    // maxHeight: \"50vh\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    minHeight: \"300px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      minHeight: \"280px\",\r\n      padding: \"20px 10px\",\r\n    },\r\n  },\r\n  logoAvatar: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      //   marginLeft: \"200px\",\r\n      marginRight: \"auto\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginLeft: \"auto\",\r\n      marginRight: \"150px\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport const AppBar = () => {\r\n  const customStyles = useStyles();\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        backgroundColor: \"#fafafa\",\r\n        padding: \"5px 20px\",\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: { xs: \"none\", sm: \"block\" },\r\n        }}\r\n      >\r\n        <Box sx={{ display: \"flex\" }}>\r\n          <Avatar\r\n            variant=\"square\"\r\n            src=\"/static/img/onecall-logo.png\"\r\n            sx={{\r\n              height: 50,\r\n              width: 140,\r\n              marginBottom: \"10px\",\r\n            }}\r\n            className={customStyles.logoAvatar}\r\n          />\r\n          <Typography\r\n            variant=\"h6\"\r\n            sx={{\r\n              fontSize: \"16px\",\r\n              marginTop: \"12px\",\r\n              marginLeft: \"20px\",\r\n            }}\r\n          >\r\n            WE MAKE TAX SIMPLE\r\n          </Typography>\r\n        </Box>\r\n        <Typography variant=\"body2\" sx={{ fontSize: \"16px\" }}>\r\n          <strong>Phone:</strong> (201) 277-3977\r\n        </Typography>\r\n        <Typography variant=\"body2\" sx={{ fontSize: \"16px\" }}>\r\n          <strong>E-mail:</strong> support@onecalltaxservices.com\r\n        </Typography>\r\n      </Box>\r\n      <Avatar\r\n        variant=\"square\"\r\n        src=\"/static/img/irs_image.jpg\"\r\n        sx={{\r\n          width: \"81px\",\r\n          height: \"83px\",\r\n          display: { xs: \"none\", sm: \"flex\" },\r\n        }}\r\n      />\r\n\r\n      <Box sx={{ display: { xs: \"block\", sm: \"none\" } }}>\r\n        <Avatar\r\n          variant=\"square\"\r\n          src=\"/static/img/onecall-logo.png\"\r\n          sx={{\r\n            height: 50,\r\n            width: 140,\r\n            marginTop: \"12px\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n          className={customStyles.logoAvatar}\r\n        />\r\n        <Typography\r\n          variant=\"h6\"\r\n          sx={{\r\n            fontSize: \"16px\",\r\n          }}\r\n        >\r\n          WE MAKE TAX SIMPLE\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst Authentication = () => {\r\n  const customStyles = useStyles();\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Page title=\"Login\">\r\n      <Box\r\n        sx={{\r\n          height: \"100vh\",\r\n          backgroundImage: \"url(/static/img/login_bg.png)\",\r\n          paddingTop: \"8%\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundSize: \"100% 100%\",\r\n        }}\r\n      >\r\n        <Container maxWidth=\"lg\">\r\n          <Box sx={{ backgroundColor: \"#fafafa\", padding: \"5px 5px 30px\" }}>\r\n            <AppBar />\r\n            <Box sx={{ padding: { xs: 0, sm: \"20px 30px\" } }}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <Box className={customStyles.box}>\r\n                    <LoginView />\r\n                  </Box>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <Box className={customStyles.box}>\r\n                    <ForgotPasswordView />\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <Typography variant=\"h5\">New Client? Please</Typography>\r\n\r\n                <Avatar\r\n                  onClick={() => navigate(\"/register\")}\r\n                  variant=\"square\"\r\n                  src=\"/static/img/register.png\"\r\n                  sx={{ height: 33, width: 99, marginLeft: \"10px\" }}\r\n                />\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Authentication;\r\n","import React from \"react\";\r\nimport { Box, TextField, Grid, Typography } from \"@mui/material\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst NO_WRAP_ATTRIBUTES = [\r\n  \"Middle Initial\",\r\n  \"Email Address\",\r\n  \"Password\",\r\n  \"Email ID (User ID)\",\r\n  \"Confirm Password\",\r\n  \"Referral ID (Optional)\",\r\n  \"Preferrable Time\",\r\n  \"Time Zone\",\r\n  \"Phone Number\",\r\n];\r\n\r\nconst CustomInputTextField = ({\r\n  attribute,\r\n  is_required,\r\n  is_bold,\r\n  attributeTextAlign,\r\n  attributeMarginTop,\r\n  ...others\r\n}) => {\r\n  return (\r\n    <Grid\r\n      item\r\n      xs={12}\r\n      sx={{\r\n        maxHeight: \"60px\",\r\n      }}\r\n    >\r\n      <Grid container>\r\n        <Grid\r\n          item\r\n          xs={4}\r\n          sx={{ marginTop: attributeMarginTop ? attributeMarginTop : \"24px\" }}\r\n        >\r\n          {/* <Typography\r\n            sx={{\r\n              margin: \"20px 10px\",\r\n              fontSize: \"16px\",\r\n              lineHeight: \"24px\",\r\n              fontWeight: 400,\r\n            }}\r\n          >\r\n            {is_required ? (\r\n              <>\r\n                {attribute}\r\n                <span\r\n                  style={{\r\n                    color: \"red\", // Set color to red\r\n                    fontSize: \"16px\",\r\n                    marginLeft: \"3px\",\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  *\r\n                </span>\r\n              </>\r\n            ) : (\r\n              attribute\r\n            )}\r\n          </Typography> */}\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              marginRight: { xs: 0, sm: attributeTextAlign ? \"5px\" : 0 },\r\n              justifyContent: {\r\n                xs: \"flex-start\",\r\n                sm: attributeTextAlign ? \"flex-end\" : \"flex-start\",\r\n              },\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"body1\"\r\n              sx={{\r\n                ...(is_bold && { fontWeight: 600 }), // Apply fontWeight if is_bold is true\r\n                whiteSpace: NO_WRAP_ATTRIBUTES.includes(attribute)\r\n                  ? \"nowrap\"\r\n                  : \"pre-wrap\",\r\n              }}\r\n            >\r\n              {attribute}\r\n            </Typography>\r\n            {is_required && (\r\n              <Typography\r\n                sx={{\r\n                  color: \"red\",\r\n                  fontSize: \"0.875rem\",\r\n                  marginLeft: \"3px\",\r\n                }}\r\n              >\r\n                *\r\n              </Typography>\r\n            )}\r\n            &nbsp;:\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={attribute === \"Income Amount\" ? 4 : 8}>\r\n          <TextField\r\n            {...others}\r\n            sx={{\r\n              \"& .MuiOutlinedInput-root\": {\r\n                \"& fieldset\": {\r\n                  borderRadius: \"2px\",\r\n                },\r\n              },\r\n              \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n                border: \"0.1px solid #bdbdbd\",\r\n              },\r\n              \"& .MuiOutlinedInput-input\": {\r\n                padding: \"10px\",\r\n                backgroundColor: \"rgba(255,255,255,1)\",\r\n              },\r\n              width: \"90%\",\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nCustomInputTextField.defaultProps = {\r\n  is_bold: false,\r\n};\r\n\r\nCustomInputTextField.prototype = {\r\n  is_required: PropTypes.bool,\r\n  is_bold: PropTypes.bool,\r\n  attribute: PropTypes.string, //['success','warning', 'error']\r\n  attributeTextAlign: PropTypes.string, //['success','warning', 'error']\r\n  attributeMarginTop: PropTypes.string,\r\n};\r\n\r\nexport default CustomInputTextField;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link as RouterLink, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport CustomInputTextField from \"../../components/CustomInputField\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { AppBar } from \".\";\r\nimport CustomAlert from \"../../components/CustomAlert\";\r\n\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport Api from \"../../components/Api\";\r\n\r\nimport Page from \"../../components/Page\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: \"100%\",\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n    position: \"relative\",\r\n  },\r\n\r\n  logo: {\r\n    width: 150,\r\n    padding: 10,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: 110,\r\n    },\r\n  },\r\n  submitProgress: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n\r\n  mainBlock: {\r\n    // width: \"100%\",\r\n    // height: \"100vh\",\r\n    // display: \"flex\",\r\n    // flexDirection: \"row\",\r\n    padding: \"10px 50px 20px\",\r\n    margin: \"20px\",\r\n    border: \"1px solid #000000\",\r\n    minWidth: \"600px\",\r\n    minHeight: \"300px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      // flexDirection: \"column\",\r\n      minWidth: \"350px\",\r\n      padding: \"10px 0 10px 5px\",\r\n      margin: \"10px 0\",\r\n      minHeight: \"280px\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst ResetPasswordView = ({ match }) => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n  const [showAlert, setShowAlert] = useState({\r\n    isAlert: false,\r\n    alertTitle: \"\",\r\n    alertText: \"\",\r\n    severity: \"\",\r\n  });\r\n\r\n  return (\r\n    <Page title=\"Reset Password\">\r\n      <Box\r\n        sx={{\r\n          height: \"100vh\",\r\n          backgroundImage: \"url(/static/img/green_bg.jpg)\",\r\n          paddingTop: \"8%\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundSize: \"100% 100%\",\r\n        }}\r\n      >\r\n        <Container maxWidth=\"lg\">\r\n          <Box\r\n            sx={{\r\n              backgroundColor: \"#f7f7f7\",\r\n            }}\r\n          >\r\n            <AppBar />\r\n\r\n            <Box className={classes.mainBlock}>\r\n              {showAlert.isAlert ? (\r\n                <CustomAlert\r\n                  open={showAlert.isAlert}\r\n                  severity={showAlert.severity}\r\n                  alertTitle={showAlert.alertTitle}\r\n                  alertText={showAlert.alertText}\r\n                  onClose={() =>\r\n                    setShowAlert({\r\n                      isAlert: false,\r\n                      alertTitle: \"\",\r\n                      alertText: \"\",\r\n                      severity: \"\",\r\n                    })\r\n                  }\r\n                />\r\n              ) : null}\r\n\r\n              <Box sx={{ width: { xs: \"100%\", sm: \"60%\" } }}>\r\n                <Formik\r\n                  initialValues={{\r\n                    password: \"\",\r\n                    passwordConfirmation: \"\",\r\n                  }}\r\n                  validationSchema={Yup.object().shape({\r\n                    password: Yup.string()\r\n                      .required(\"Please enter your password\")\r\n                      .matches(\r\n                        /^.*(?=.{8,})((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/,\r\n                        \"Password must contain at least 8 characters, one uppercase, one number and one special case character\"\r\n                      ),\r\n\r\n                    passwordConfirmation: Yup.string().when(\"password\", {\r\n                      is: (val) => (val && val.length > 0 ? true : false),\r\n                      then: Yup.string().oneOf(\r\n                        [Yup.ref(\"password\")],\r\n                        \"Both password need to be the same\"\r\n                      ),\r\n                    }),\r\n                  })}\r\n                  onSubmit={(values, { setSubmitting, resetForm }) => {\r\n                    const url = Api.resetPassword;\r\n\r\n                    let data = {\r\n                      password: values[\"password\"],\r\n                      uidb64: params.uidb64,\r\n                      token: params.token,\r\n                    };\r\n\r\n                    const config = {\r\n                      headers: {\r\n                        \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\r\n                      },\r\n                    };\r\n\r\n                    axios\r\n                      .post(url, data, config)\r\n                      .then((res) => {\r\n                        const { status, data } = res;\r\n                        if (status === 200) {\r\n                          setSubmitting(false);\r\n                          setShowAlert({\r\n                            isAlert: true,\r\n                            alertText: data?.[\"message\"],\r\n                            severity: \"success\",\r\n                          });\r\n                          resetForm();\r\n                        }\r\n                      })\r\n                      .catch((error) => {\r\n                        console.log(error);\r\n                        setSubmitting(false);\r\n                        setShowAlert({\r\n                          isAlert: true,\r\n                          alertText: \"Something went wrong\",\r\n                          severity: \"error\",\r\n                          alertTitle: \"Error\",\r\n                        });\r\n                        resetForm();\r\n                      });\r\n                  }}\r\n                >\r\n                  {({\r\n                    errors,\r\n                    handleBlur,\r\n                    handleChange,\r\n                    handleSubmit,\r\n                    isSubmitting,\r\n                    touched,\r\n                    values,\r\n                  }) => (\r\n                    <form autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                      <Typography\r\n                        color=\"textPrimary\"\r\n                        variant=\"h4\"\r\n                        sx={{ marginBottom: \"16px\" }}\r\n                      >\r\n                        Reset Password\r\n                      </Typography>\r\n\r\n                      <CustomInputTextField\r\n                        error={Boolean(touched.password && errors.password)}\r\n                        fullWidth\r\n                        helperText={touched.password && errors.password}\r\n                        attribute=\"Password\"\r\n                        margin=\"normal\"\r\n                        name=\"password\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        type=\"password\"\r\n                        value={values.password}\r\n                        variant=\"outlined\"\r\n                      />\r\n                      <CustomInputTextField\r\n                        error={Boolean(\r\n                          touched.passwordConfirmation &&\r\n                            errors.passwordConfirmation\r\n                        )}\r\n                        fullWidth\r\n                        helperText={\r\n                          touched.passwordConfirmation &&\r\n                          errors.passwordConfirmation\r\n                        }\r\n                        attribute=\"Confirm Password\"\r\n                        margin=\"normal\"\r\n                        name=\"passwordConfirmation\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        type=\"password\"\r\n                        value={values.passwordConfirmation}\r\n                        variant=\"outlined\"\r\n                      />\r\n\r\n                      <Box my={2}>\r\n                        <Button\r\n                          color=\"primary\"\r\n                          disabled={isSubmitting}\r\n                          fullWidth\r\n                          size=\"large\"\r\n                          type=\"submit\"\r\n                          variant=\"contained\"\r\n                        >\r\n                          Reset Password\r\n                          {isSubmitting && (\r\n                            <CircularProgress\r\n                              size={24}\r\n                              className={classes.submitProgress}\r\n                            />\r\n                          )}\r\n                        </Button>\r\n                      </Box>\r\n                      <Typography\r\n                        color=\"textSecondary\"\r\n                        variant=\"body1\"\r\n                        sx={{ textAlign: \"center\" }}\r\n                      >\r\n                        Go back to{\" \"}\r\n                        <Link component={RouterLink} to=\"/login\" variant=\"h6\">\r\n                          Sign in\r\n                        </Link>\r\n                      </Typography>\r\n                    </form>\r\n                  )}\r\n                </Formik>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordView;\r\n","import React, { forwardRef } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Page = forwardRef(({ children, title = \"\", ...rest }, ref) => {\r\n  return (\r\n    <div ref={ref} {...rest}>\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      {children}\r\n    </div>\r\n  );\r\n});\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Page;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { Snackbar } from \"@mui/material\";\r\nimport { Alert, AlertTitle } from \"@mui/material\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(10),\r\n    boxShadow: \"-2px 5px 15px -2px rgba(0,0,0,0.71)\",\r\n  },\r\n  alertContainer: {\r\n    minWidth: 350,\r\n  },\r\n}));\r\n\r\nconst CustomAlert = ({ open, severity, alertTitle, alertText, onClose }) => {\r\n  let vertical = \"top\",\r\n    horizontal = \"right\";\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{ vertical, horizontal }}\r\n      open={open}\r\n      autoHideDuration={6000}\r\n      onClose={onClose}\r\n      className={classes.root}\r\n    >\r\n      <Alert\r\n        severity={severity}\r\n        onClose={onClose}\r\n        className={classes.alertContainer}\r\n      >\r\n        {alertTitle ? <AlertTitle>{alertTitle}</AlertTitle> : null}\r\n        {alertText}!\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nCustomAlert.prototype = {\r\n  open: PropTypes.bool,\r\n  severity: PropTypes.string, //['success','warning', 'error']\r\n  alertText: PropTypes.string,\r\n  alertTitle: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n};\r\n\r\nexport default CustomAlert;\r\n"],"sourceRoot":""}